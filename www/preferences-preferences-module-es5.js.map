{"version":3,"sources":["webpack:///src/app/preferences/preferences-routing.module.ts","webpack:///src/app/preferences/preferences.page.scss","webpack:///src/app/preferences/preferences.module.ts","webpack:///src/app/preferences/preferences.page.html","webpack:///src/app/preferences/preferences.page.ts"],"names":["routes","path","component","loadChildren","then","m","MakePreferencePageModule","PreferencesPageRoutingModule","imports","forChild","exports","PreferencesPageModule","declarations","PreferencesPage","coffeeService","route","navCtrl","fb","preferenceList","preferenceData","preferenceForm","group","preferenceName","required","coffeeType","cityName","countryName","readPreferences","subscribe","data","map","output","id","payload","doc","isEdit","console","log","value","createPreference","response","reset","error","deletePreference","preference","EditPreferenceName","EditCoffee","EditCity","EditCountry","preferenceRow","updatePreferences","selector","template"],"mappings":"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","file":"preferences-preferences-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PreferencesPage } from './preferences.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PreferencesPage,\n  },\n  {\n    path: 'make-preference',\n    loadChildren: () => import('./make-preference/make-preference.module').then( m => m.MakePreferencePageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PreferencesPageRoutingModule {}\n","export default \"ion-fab-button {\\n  --background: #2eb872;\\n  --background-hover: #13492e;\\n  --color: #feffe4;\\n  --border-color: #feffe4;\\n}\\n\\nion-content {\\n  --padding-start: 5%;\\n  --padding-end: 5%;\\n  --ion-background-color: #feffe4;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3ByZWZlcmVuY2VzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHFCQUFBO0VBQ0EsMkJBQUE7RUFDQSxnQkFBQTtFQUNBLHVCQUFBO0FBQ0o7O0FBRUE7RUFDSSxtQkFBQTtFQUNBLGlCQUFBO0VBQ0EsK0JBQUE7QUFDSiIsImZpbGUiOiJwcmVmZXJlbmNlcy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tZmFiLWJ1dHRvbiB7XG4gICAgLS1iYWNrZ3JvdW5kOiAjMmViODcyO1xuICAgIC0tYmFja2dyb3VuZC1ob3ZlcjogIzEzNDkyZTtcbiAgICAtLWNvbG9yOiAjZmVmZmU0O1xuICAgIC0tYm9yZGVyLWNvbG9yOiAjZmVmZmU0O1xufVxuXG5pb24tY29udGVudCB7XG4gICAgLS1wYWRkaW5nLXN0YXJ0OiA1JTtcbiAgICAtLXBhZGRpbmctZW5kOiA1JTtcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiAjZmVmZmU0O1xufSJdfQ== */\";","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PreferencesPage } from './preferences.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\nimport { PreferencesPageRoutingModule } from './preferences-routing.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    PreferencesPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [PreferencesPage]\n})\nexport class PreferencesPageModule {}\n","export default \"<ion-header [translucent] = \\\"true\\\">\\n  <ion-toolbar color = \\\"cream\\\">\\n    <ion-title>\\n      Preferences\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-card *ngFor = \\\"let item of preferenceList\\\" color = \\\"primaryred\\\">\\n    <span *ngIf = \\\"!item.isEdit; else elseBlock\\\">\\n      <ion-card-header>\\n        <ion-card-title>{{ item.preferenceName }}</ion-card-title>\\n      </ion-card-header>\\n\\n      <ion-card-content>\\n        <ion-row>\\n          {{ item.coffeeType }}\\n        </ion-row>\\n        <ion-row>\\n          {{ item.cityName }}, {{ item.countryName }}\\n        </ion-row>\\n\\n        <ion-row>\\n          <ion-button shape = \\\"round\\\" color = \\\"cream\\\" size = \\\"small\\\" (click) = \\\"editPreference(item)\\\">\\n            <ion-icon size = \\\"small\\\" slot = \\\"icon-only\\\" name = \\\"create\\\"></ion-icon>\\n          </ion-button>\\n          <ion-button shape = \\\"round\\\" color = \\\"cream\\\" size = \\\"small\\\" (click) = \\\"removePreference(item.id)\\\">\\n            <ion-icon size = \\\"small\\\" slot = \\\"icon-only\\\" name = \\\"trash\\\"></ion-icon>\\n          </ion-button>\\n        </ion-row>\\n      </ion-card-content>\\n    </span>\\n    <ng-template #elseBlock>\\n      <ion-card-header>\\n        <ion-card-title>\\n          <ion-grid>\\n            <ion-row>\\n              <ion-button fill = \\\"solid\\\" color = \\\"cream\\\" size = \\\"small\\\" (click) = \\\"item.isEdit = false\\\">\\n                Cancel\\n              </ion-button>\\n              <ion-button fill = \\\"solid\\\" color = \\\"cream\\\" size = \\\"small\\\" (click) = \\\"updatePreference(item)\\\">\\n                Update\\n              </ion-button>\\n            </ion-row>\\n          </ion-grid>\\n        </ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-item>\\n          <ion-label><strong>Preference Name</strong></ion-label>\\n          <ion-input type = \\\"text\\\" [(ngModel)] = \\\"item.EditPreferenceName\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label><strong>Coffee Type</strong></ion-label>\\n          <ion-select placeholder = \\\"Flat White\\\" type = \\\"text\\\" [(ngModel)] = \\\"item.EditCoffee\\\">\\n            <ion-select-option value = \\\"Cappuccino\\\">Cappuccino</ion-select-option>\\n            <ion-select-option value = \\\"Flat White\\\">Flat White</ion-select-option>\\n            <ion-select-option value = \\\"Latte\\\">Latte</ion-select-option>\\n            <ion-select-option value = \\\"Long Black\\\">Long Black</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label><strong>City</strong></ion-label>\\n          <ion-select placeholder = \\\"Brisbane\\\" type = \\\"text\\\" [(ngModel)] = \\\"item.EditCity\\\">\\n            <ion-select-option value = \\\"Adelaide\\\">Adelaide</ion-select-option>\\n            <ion-select-option value = \\\"Brisbane\\\">Brisbane</ion-select-option>\\n            <ion-select-option value = \\\"Cairns\\\">Cairns</ion-select-option>\\n            <ion-select-option value = \\\"Canberra\\\">Canberra</ion-select-option>\\n            <ion-select-option value = \\\"Darwin\\\">Darwin</ion-select-option>\\n            <ion-select-option value = \\\"Hobart\\\">Hobart</ion-select-option>\\n            <ion-select-option value = \\\"Melbourne\\\">Melbourne</ion-select-option>\\n            <ion-select-option value = \\\"Perth\\\">Perth</ion-select-option>\\n            <ion-select-option value = \\\"Sydney\\\">Sydney</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label><strong>Country</strong></ion-label>\\n          <ion-select placeholder = \\\"Australia\\\" type = \\\"text\\\" [(ngModel)] = \\\"item.EditCountry\\\">\\n            <ion-select-option value = \\\"Australia\\\">Australia</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n      </ion-card-content>\\n    </ng-template>\\n  </ion-card>\\n\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button routerLink=\\\"/tabs/preferences/make-preference\\\" routerDirection=\\\"forward\\\">\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { CoffeePreferenceService } from '../services/coffee-preference.service';\nimport { NavController, NavParams } from '@ionic/angular';\nimport { coffeePreference } from '../shared/coffeePreference';\n\ninterface PreferenceData {\n  preferenceName: string;\n  coffeeType: string;\n  cityName: string;\n  countryName: string;\n}\n\n@Component({\n  selector: 'app-preferences',\n  templateUrl: 'preferences.page.html',\n  styleUrls: ['preferences.page.scss']\n})\nexport class PreferencesPage {\n//export class PreferencesPage implements OnInit {\n  preferenceList = [];\n  preferenceData: PreferenceData;\n  preferenceForm: FormGroup;\n\n  constructor\n  (\n    private coffeeService: CoffeePreferenceService,\n    private route: Router,\n    public navCtrl: NavController,\n    public fb: FormBuilder\n  )\n  {\n    this.preferenceData = {} as PreferenceData;\n  }\n\n  ngOnInit() {\n    this.preferenceForm = this.fb.group({\n      preferenceName: ['', [Validators.required]],\n      coffeeType: ['', [Validators.required]],\n      cityName: ['', [Validators.required]],\n      countryName: ['', [Validators.required]]\n    })\n\n    this.coffeeService.readPreferences().subscribe(data => {\n      this.preferenceList = data.map(output => {\n        return {\n          id: output.payload.doc.id,\n          isEdit: false,\n          preferenceName: output.payload.doc.data()['preferenceName'],\n          coffeeType: output.payload.doc.data()['coffeeType'],\n          cityName: output.payload.doc.data()['cityName'],\n          countryName: output.payload.doc.data()['countryName']\n        };\n      })\n      console.log(this.preferenceList);\n    });\n  }\n\n  // Implements createPreference() from coffeeService to create a user preference.\n  createPreference() {\n    console.log(this.preferenceForm.value);\n    this.coffeeService.createPreference(this.preferenceForm.value).then(response => {\n      this.preferenceForm.reset();\n      console.log(response);\n    })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  // Method to delete a preference object\n  removePreference(id) {\n    this.coffeeService.deletePreference(id);\n  }\n\n  // Method to edit a preference object\n  editPreference(preference) {\n    preference.isEdit = true;\n    preference.EditPreferenceName = preference.preferenceName;\n    preference.EditCoffee = preference.coffeeType;\n    preference.EditCity = preference.cityName;\n    preference.EditCountry = preference.countryName;\n  }\n\n  // Method to update a preference object\n  updatePreference(preferenceRow) {\n    let preference = {};\n    preference['preferenceName'] = preferenceRow.EditPreferenceName;\n    preference['coffeeType'] = preferenceRow.EditCoffee;\n    preference['cityName'] = preferenceRow.EditCity;\n    preference['countryName'] = preferenceRow.EditCountry;\n    this.coffeeService.updatePreferences(preferenceRow.id, preference);\n    preferenceRow.isEdit = false;\n  }\n}\n"]}