{"version":3,"sources":["./node_modules/@firebase/analytics/dist/index.esm.js","./node_modules/firebase/firestore/dist/index.esm.js","./src/app/services/coffee-preference.service.ts","./node_modules/@angular/fire/__ivy_ngcc__/fesm2015/angular-fire-firestore.js","./node_modules/firebase/dist/index.esm.js","./node_modules/@firebase/firestore/dist/esm5/prebuilt-7840cb8c-52081c7f.js","./node_modules/@firebase/performance/dist/index.esm.js","./node_modules/@firebase/remote-config/dist/index.esm.js","./node_modules/@firebase/installations/dist/index.esm.js","./node_modules/@firebase/functions/dist/index.esm.js","./node_modules/@firebase/messaging/dist/index.esm.js","./node_modules/idb/build/idb.js","./node_modules/@firebase/firestore/dist/esm5/bundle.js","./node_modules/@firebase/webchannel-wrapper/dist/index.esm.js","./node_modules/@firebase/firestore/dist/esm5/index.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACpB;AACJ;AACS;AACmI;AAC7H;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,OAAO;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,sDAAQ,CAAC,sDAAQ,GAAG,iBAAiB,2BAA2B;AAC7F;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA,mDAAmD,4BAA4B;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA,mDAAmD,gBAAgB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA,8DAA8D,gBAAgB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,uDAAM;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,+CAA+C,EAAE;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,0CAA0C,EAAE;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,4BAA4B;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,+FAA+F,IAAI;AACnG;AACA;AACA;AACA;AACA;AACA,0IAA0I,QAAQ;AAClJ;AACA;AACA,0EAA0E,WAAW;AACrF;AACA;AACA,0EAA0E,WAAW;AACrF;AACA,8EAA8E,uBAAuB;AACrG,0FAA0F,YAAY,GAAG,iBAAiB;AAC1H;AACA;AACA;AACA;AACA;AACA,wBAAwB,2DAAY;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,uBAAuB;AACjE,wCAAwC,uCAAuC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,OAAO;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,8BAA8B;AAC7D,WAAW,uDAAS;AACpB;AACA;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,QAAQ,uDAAS;AACrD,uBAAuB,yDAAW;AAClC;AACA;AACA;AACA,iBAAiB;AACjB,aAAa,EAAE,EAAE;AACjB,sEAAsE,6DAA6D;AACnI,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,8BAA8B;AAC7D,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,6CAA6C;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,6CAA6C;AAChG;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,6EAAsB;AAChD,0BAA0B,6EAAsB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA,uBAAuB,4DAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,mBAAmB,EAAE;AACzE;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA,0BAA0B,2EAAoB;AAC9C;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,yCAAyC,gFAAyB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,6CAA6C,wBAAwB,EAAE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2BAA2B;AAClE,kDAAkD,mCAAmC;AACrF,wCAAwC,yBAAyB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yEAAkB;AAC1B;AACA;AACA,SAAS,wEAAiB;AAC1B;AACA;AACA;AACA;AACA,4CAA4C,2CAA2C,EAAE;AACzF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iIAAiI,wBAAwB,EAAE;AAC3J,SAAS;AACT;AACA,6HAA6H,wBAAwB,EAAE;AACvJ,SAAS;AACT;AACA,8GAA8G,wBAAwB,EAAE;AACxI,SAAS;AACT;AACA,8HAA8H,wBAAwB,EAAE;AACxJ,SAAS;AACT;AACA,yGAAyG,wBAAwB,EAAE;AACnI,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4CAA4C,6DAAS;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,4CAA4C,6DAAS;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB,qDAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA,wBAAwB,yEAAkB;AAC1C;AACA;AACA,yBAAyB,wEAAiB;AAC1C;AACA;AACA,yBAAyB,2EAAoB;AAC7C;AACA;AACA;AACA;AACA;AACA,yCAAyC,gFAAyB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEgF;AAChF;;;;;;;;;;;;;ACpsCA;AAAA;AAA6B;AAC7B;;;;;;;;;;;;;;;;;;;;;;ACD2C;AACX;AAC2B;AACN;AACH;IAMrC,uBAAuB,SAAvB,uBAAuB;IAIlC,YAEU,IAAsB,EACtB,IAAqB,EACtB,IAAgB;QAFf,SAAI,GAAJ,IAAI,CAAkB;QACtB,SAAI,GAAJ,IAAI,CAAiB;QACtB,SAAI,GAAJ,IAAI,CAAY;QAPzB,mBAAc,GAAG,iBAAiB,CAAC;QACnC,uBAAkB,GAAG,aAAa,CAAC;IAOhC,CAAC;IAEJ,kEAAkE;IAClE,gBAAgB,CAAC,UAAU;QACzB,OAAO,CAAC,GAAG,CAAC,gDAAQ,CAAC,IAAI,EAAE,CAAC,WAAW,CAAC,CAAC;QACzC,IAAI,WAAW,GAAG,gDAAQ,CAAC,IAAI,EAAE,CAAC,WAAW,CAAC;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC5H,CAAC;IAED,4EAA4E;IAC5E,eAAe;QACb,IAAI,WAAW,GAAG,gDAAQ,CAAC,IAAI,EAAE,CAAC,WAAW,CAAC;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,eAAe,EAAE,CAAC;IAC9H,CAAC;IAED,wFAAwF;IACxF,iBAAiB,CAAC,YAAY,EAAE,UAAU;QACxC,IAAI,WAAW,GAAG,gDAAQ,CAAC,IAAI,EAAE,CAAC,WAAW,CAAC;QAC9C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,GAAG,GAAG,GAAG,WAAW,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,kBAAkB,GAAG,GAAG,GAAG,YAAY,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IACrI,CAAC;IAED,gCAAgC;IAChC,gBAAgB,CAAC,YAAY;QAC3B,IAAI,WAAW,GAAG,gDAAQ,CAAC,IAAI,EAAE,CAAC,WAAW,CAAC;QAC9C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,GAAG,GAAG,GAAG,WAAW,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,kBAAkB,GAAG,GAAG,GAAG,YAAY,CAAC,CAAC,MAAM,EAAE,CAAC;IAC3H,CAAC;IAED,2CAA2C;IAC3C,aAAa,CAAC,UAAkB;QAC9B,qDAAqD;QACrD,MAAM,UAAU,GAChB;YACE,EAAC,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,IAAI,EAAC;YAC3C,EAAC,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,IAAI,EAAC;YAC3C,EAAC,MAAM,EAAE,OAAO,EAAE,aAAa,EAAE,IAAI,EAAC;YACtC,EAAC,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,IAAI,EAAC;SAC5C,CAAC;QACF,MAAM,WAAW,GAAG,EAAE,CAAC,CAAC,kBAAkB;QAE1C,wCAAwC;QACxC,QAAQ,UAAU,EAAE;YAClB,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,aAAa;gBACpC,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YAEnC,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,aAAa;gBACpC,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YAEnC,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,QAAQ;gBAC/B,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YAEnC,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,aAAa;gBACpC,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YAEnC;gBACE,OAAO,WAAW,CAAC;SACtB;IACH,CAAC;IAED,0EAA0E;IAC1E,aAAa,CAAC,QAAgB,EAAE,UAAU;QACxC,0BAA0B;QAC1B,IAAI,SAAS,GAAG,CAAC,CAAC,CAAC,UAAU;QAC7B,IAAI,OAAO,GAAG,EAAE,CAAC,CAAC,UAAU;QAC5B,IAAI,KAAK,GAAG,OAAO,GAAG,EAAE,CAAC,CAAC,wBAAwB;QAClD,IAAI,CAAC,GAAG,GAAG,EAAC,iCAAiC;QAC7C,IAAI,WAAW,GAAG,EAAE,CAAC,CAAC,0DAA0D;QAChF,IAAI,QAAQ,GAAG,CAAC,OAAO,GAAG,SAAS,CAAC,GAAG,KAAK,CAAC,CAAC,sBAAsB;QACpE,IAAI,SAAS,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;QACjC,IAAI,SAAS,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC5C,IAAI,YAAY,GAAG,CAAC,CAAC;QAErB,mEAAmE;QACnE,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;QACzB,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;QAE1B,uDAAuD;QACvD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC;SACxD;QAED,gFAAgF;QAChF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC7C,IAAI,EAAE,GAAG,QAAQ,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACnF,IAAI,EAAE,GAAG,QAAQ,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACxF,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;SAC/D;QAED,6EAA6E;QAC7E,2BAA2B;QAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,IAAI,WAAW,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,WAAW,GAAG,WAAW,EAAE;gBAC3B,YAAY,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC5B,MAAM;aACT;SACF;QAED,OAAO,YAAY,GAAG,EAAE,CAAC,CAAC,8CAA8C;IAC1E,CAAC;IAED,iDAAiD;IACjD,WAAW,CAAC,MAAM;QAChB,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC;QACtC,IAAI,OAAO,GAAG,MAAM,GAAG,OAAO,GAAG,EAAE,CAAC;QACpC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC5B,CAAC;CA0EF;;YApMQ,wEAAgB;YAChB,kEAAe;YACf,+DAAU;;AAMN,uBAAuB;IAHnC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,uBAAuB,CA4LnC;AA5LmC;;;;;;;;;;;;;ACVpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0I;AAC9E;AAC6C;AAC+E;AACrI;AACf;AACR;AACwC;;AAEpE;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACwC;AACxC,mCAAmC,mDAAc;AACjD,eAAe,+CAAU;AACzB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,8CAA8C,+BAA+B;AAC7E,aAAa;AACb;AACA;AACA,0CAA0C,+BAA+B;AACzE;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA,cAAc,gEAAS,aAAa,+DAAQ,IAAI,0DAAG;AACnD,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA,gBAAgB;AAChB,KAAK;AACL;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,wCAAwC,0DAAG;AAC3C,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,iBAAiB,yBAAyB;AAC1C;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA,cAAc,gEAAS,aAAa,+DAAQ,IAAI,0DAAG;AACnD,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,oBAAoB,qCAAqC;AACzD;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA,2BAA2B,EAAE;AAC7B,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA,cAAc,2DAAI;AAClB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,uCAAuC,2EAAoB;AAC3D,IAAI,0DAAG;AACP,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,sBAAsB,EAAE,MAAM,2BAA2B;AACzD;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4BAA4B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,iCAAiC,0DAAG;AACpC,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,QAAQ,gEAAS,aAAa,+DAAQ,IAAI,6DAAM;AAChD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,8DAA8D,0DAAG;AACjE,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,8CAA8C,2DAAI;AAClD,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,6BAA6B;AAC7B;AACA,kBAAkB,0DAAG;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mCAAmC,EAAE,mCAAmC,cAAc,EAAE,mBAAmB,0BAA0B;AACrI;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,iDAAI,+BAA+B,gEAAS;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,wDAAwD,EAAE;AAC1D;AACA;AACA,WAAW,EAaV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4BAA4B;AACpD;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,0CAA0C,EAAE;AAC5C,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,6BAA6B;AAC7B,2CAA2C,0DAAG;AAC9C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,UAAU,UAAU,mCAAmC,EAAE,mCAAmC,oBAAoB,gCAAgC;AAChJ;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,iDAAI,6BAA6B,gEAAS;AACzD;AACA;AACA,WAAW,EAQV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0DAAG;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wDAAwD,6DAAM;AAC9D,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,8CAA8C,2DAAI;AAClD,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,6BAA6B;AAC7B,mBAAmB,EAAE;AACrB;AACA;AACA,kBAAkB,0DAAG;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mCAAmC,EAAE,oBAAoB,0BAA0B;AACnF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,iDAAI,+BAA+B,gEAAS;AAC3D;AACA;AACA,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,UAAU;AACV;AACA,+BAA+B,4DAAc;AAC7C,WAAW,EAAE;AACb,iCAAiC,4DAAc;AAC/C,WAAW,EAAE;AACb,qBAAqB,4DAAc;AACnC,WAAW,EAAE;AACb,yBAAyB,4DAAc;AACvC;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd;AACA;AACA,UAAU,aAAa;AACvB;AACA,IAAI;AACJ,YAAY;AACZ;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,yEAAyE;AACpF,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,kDAAkD,aAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,aAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,8BAA8B,oEAAsB;AACpD,sCAAsC,oFAA8B;AACpE,mBAAmB,EAAE;AACrB,oBAAoB,yEAAmB;AACvC,aAAa,oDAAQ;AACrB,YAAY,2EAAqB;AACjC;AACA,mBAAmB,EAAE;AACrB;AACA,qDAAqD,oEAAc,IAAI,SAAS;AAChF,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,wEAAgB;AAC5D;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B,iDAAI;AACnC,oCAAoC;AACpC;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,+CAAE;AACjC;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mCAAmC,+CAAE;AACrC;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,wCAAwC,EAAE;AAC1C;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,mBAAmB,EAAE;AACrB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,8BAA8B,EAAE;AAChC;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,8DAA8D,oCAAoC,sDAAe,CAAC,8DAAgB,GAAG,sDAAe,CAAC,+DAAiB,MAAM,sDAAe,yBAAyB,sDAAe,eAAe,sDAAe,CAAC,yDAAW,GAAG,sDAAe,CAAC,oDAAa,GAAG,sDAAe,2BAA2B,sDAAe,mBAAmB,sDAAe,CAAC,+DAAc,MAAM;AACha;AACA;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,8DAAgB,IAAI,GAAG;AAClF,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,+DAAiB,IAAI,GAAG;AACvG,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,+BAA+B,GAAG;AACxG,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,qBAAqB,GAAG;AAC9F,KAAK,6BAA6B,OAAO,oDAAM,SAAS,yDAAW,IAAI,GAAG;AAC1E,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,iCAAiC,GAAG;AAC1G,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,yBAAyB,GAAG;AAClG,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,+DAAc,IAAI;AACjG;AACA,4CAA4C,wEAAkB,EAAE,+CAA+C,6BAA6B,8DAAQ,CAAC,8DAAgB,GAAG,8DAAQ,CAAC,+DAAiB,MAAM,8DAAQ,yBAAyB,8DAAQ,eAAe,8DAAQ,CAAC,yDAAW,GAAG,8DAAQ,CAAC,oDAAM,GAAG,8DAAQ,2BAA2B,8DAAQ,mBAAmB,8DAAQ,CAAC,+DAAc,MAAM,EAAE,8CAA8C;AACpb,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B,uBAAuB,8DAAgB;AACvC,aAAa,GAAG,GAAG;AACnB,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B,uBAAuB,+DAAiB;AACxC,aAAa,GAAG,GAAG;AACnB,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,GAAG;AACnB,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,GAAG;AACnB,sBAAsB,oDAAM;AAC5B,uBAAuB,yDAAW;AAClC,aAAa,GAAG,GAAG,OAAO,oDAAa,EAAE,GAAG;AAC5C,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,GAAG;AACnB,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,GAAG;AACnB,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B,uBAAuB,+DAAc;AACrC,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;AAC9B,WAAW,EASV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,iBAAiB,8CAA8C;AAC/D,iBAAiB,+DAA+D;AAChF;AACA;AACA;AACA;AACA,8BAA8B,8DAAuB,EAAE,+BAA+B;AACtF,8BAA8B,8DAAuB,EAAE,sDAAsD,4CAA4C,EAAE,iCAAiC;AAC5L,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,sDAAQ;AACtB;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,WAAW,EAQV;AACD;AACA;AACA;AACA,yCAAyC;AACzC,WAAW,EAcV;AACD;AACA;AACA;AACA;AACA,kCAAkC;AAClC,WAAW,EAMV;AACD;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,WAAW,EAGV;AACD;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,WAAW,EAGV;AACD;AACA;AACA;AACA;AACA,iCAAiC;AACjC,WAAW,EAKV;AACD;AACA;AACA;AACA;AACA,mBAAmB;AACnB,WAAW,EAKV;AACD;AACA;AACA;AACA;AACA,sBAAsB;AACtB,WAAW,EAGV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,gCAAgC;AAChC,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;;AAEoV;;AAEpV,kD;;;;;;;;;;;;ACjrCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACG;AAChB;AACI;AACC;AACO;AACP;AACA;AACF;AACI;AACF;AACI;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAQ;;AAER;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0aAA0a,gCAAgC,qDAAqD,8BAA8B,qDAAqD,8BAA8B;AAChnB,qDAAQ;AACR;;;;;;;;;;;;;ACvDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8D;;AAEyF;;AAEoC;;AAE7F;;AAE9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC,YAAY,uDAAC;;AAEd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB;AACjD,sBAAsB,yDAAC;AACvB;AACA,yBAAyB,4DAAC;AAC1B;AACA;;AAEA;AACA,2BAA2B,sBAAsB;AACjD,sBAAsB,yDAAC;AACvB;AACA,yBAAyB,4DAAC;AAC1B;AACA;;AAEA;AACA,2BAA2B,sBAAsB;AACjD,sBAAsB,yDAAC;AACvB;AACA,wBAAwB,4DAAC;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA,mBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,eAAe,6BAA6B,cAAc;AACnE;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,mCAAmC,cAAc;AACjD;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,sFAAsF;AACtF;AACA;AACA,yDAAyD,cAAc;AACvE;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;;AAED;;AAEA;AACA;AACA;AACA,qBAAqB;AACrumDAAmD;AACnD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,+BAA+B;AACpC;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK,+BAA+B,+BAA+B;AACnE,CAAC;AACD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,uBAAuB,iBAAiB;AACxC;AACA,KAAK;AACL;AACA,uBAAuB,iBAAiB;AACxC;AACA,KAAK;AACL,mDAAmD,OAAO;AAC1D,KAAK;AACL;AACA,KAAK;AACL,yDAAyD,OAAO;AAChE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,cAAc;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,cAAc;AACtD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC,yBAAyB,EAAE;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4IAA4I;AAC5I;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,+DAA+D,8BAA8B;AAC7F;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,mEAAmE,8BAA8B;AACjG;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,kCAAkC,wCAAwC;AAC1E;AACA;AACA;AACA;AACA;AACA,2BAA2B,8BAA8B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,kBAAkB,gDAAgD,SAAS,cAAc;AACzF;AACA;AACA;AACA,qBAAqB;AACrB,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,kBAAkB;AACzD;AACA;AACA;AACA,4CAA4C;AAC5C,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL,8FAA8F,mCAAmC,IAAI,0DAA0D;AAC/L,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uDAAC;AACnB;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC,eAAe;;AAEhB;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,uBAAuB;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF;AACzF,6CAA6C,cAAc;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wIAAwI;AACxI;AACA;AACA,qCAAqC,cAAc;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,KAAK,YAAY;AACjB;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,sCAAsC,cAAc;AACpD;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA,0CAA0C,cAAc;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ,CAAC;AACD;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK,wBAAwB,cAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK,wBAAwB,cAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,cAAc;AACtD;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iCAAiC,SAAS;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS,MAAM,qBAAqB;AACpC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS,gCAAgC,uBAAuB,SAAS;AAC9G;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,sDAAsD,WAAW;AACjE,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kDAAkD;AAClD;AACA;AACA;AACA,iEAAiE,QAAQ;AACzE,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,2BAA2B,sBAAsB;AACjD,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iDAAiD,QAAQ;AACzD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,8FAA8F;AAC9F;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS,eAAe,cAAc;AACtC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4DAAC;AACvB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAC;AACzB;AACA,yCAAyC,WAAW,gBAAgB;AACpE;AACA,6CAA6C,aAAa;AAC1D;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,uDAAC;AAChB;AACA,mBAAmB,yDAAC;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,qBAAqB;;AAErB;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA,SAAS;AACT,KAAK;AACL,eAAe,uDAAC;AAChB;AACA,mBAAmB,yDAAC;AACpB;AACA;AACA;AACA;AACA,+BAA+B,yDAAC;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,eAAe,wBAAwB;;AAExE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;;AAErB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,2BAA2B;AAC3B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,kBAAkB,4DAAC;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,cAAc;AACzC;AACA;;AAEA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS,4DAAC,CAAC,4DAAC,CAAC,4DAAC,CAAC,4DAAC;AAChB;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,2BAA2B;AAC5D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA,mDAAmD,cAAc;AACjE;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,kDAAkD,cAAc;AAChE;AACA,KAAK;AACL,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,UAAU,4BAA4B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF;AACvF,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ,eAAe,yDAAC;AAChB;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,cAAc;AAC9D;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,2BAA2B,cAAc;AACzC;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA,KAAK;AACL;AACA,kCAAkC,cAAc;AAChD;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,oFAAoF;AACpF;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,4CAA4C,cAAc;AAC1D;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,mCAAmC,mDAAmD;AACtF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA,aAAa,iBAAiB,cAAc;AAC5C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,yEAAyE;AACzE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,uDAAC;AACpB;AACA,uBAAuB,yDAAC;AACxB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,6FAA6F;AAC7F;AACA,2FAA2F;AAC3F;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT,0CAA0C,yDAAC;AAC3C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,kCAAkC,qBAAqB;AACvD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAkB,EAAE;AACpB,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,WAAW,uDAAC;AACZ;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAC;AACpB,uBAAuB,yDAAC;AACxB;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAC;AACpB,uBAAuB,yDAAC;AACxB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAC;AACpB,uBAAuB,yDAAC;AACxB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAC;AAChB;AACA,mBAAmB,yDAAC;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B,yBAAyB;AACzB,qBAAqB;AACrB;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,cAAc;AAC/E;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL,eAAe,uDAAC;AAChB;AACA,mBAAmB,yDAAC;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qBAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,sCAAsC,cAAc,gDAAgD,cAAc;AAClH;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL,wCAAwC,cAAc,yCAAyC,cAAc;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,6DAA6D,cAAc;AAC3E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,yFAAyF,yDAAC;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,sBAAsB,yDAAC;AACvB;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,yBAAyB,cAAc;AACvC;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;;AAEjB;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA,0EAA0E,cAAc;AACxF;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,yBAAyB;AACzB;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,uDAAC;AACxC;AACA,eAAe,yDAAC;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,8BAA8B,cAAc;AAC5C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS,QAAQ;AACjB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oHAAoH,mCAAmC;AACvJ;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,eAAe,uDAAC;AAChB;AACA,mBAAmB,yDAAC;AACpB;AACA;AACA;;AAEA;AACA,oDAAoD,cAAc;AAClE;AACA,uCAAuC,cAAc;AACrD;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uDAAC;AACxB;AACA,2BAA2B,yDAAC;AAC5B;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,6BAA6B,mCAAmC;AAChE,yBAAyB;AACzB;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,eAAe,uDAAC;AAChB,mBAAmB,yDAAC;AACpB;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA,sCAAsC;AACtC;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK,gCAAgC,gCAAgC;AACrE;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,oCAAoC,cAAc;AAClD;AACA;AACA,KAAK;AACL;AACA,oCAAoC,cAAc;AAClD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,wBAAwB,kEAAC;AACzB,yBAAyB,sEAAC;AAC1B;AACA;AACA,2BAA2B,sEAAC;AAC5B;AACA;AACA;;AAEA,2BAA2B,sEAAC;AAC5B;AACA;;AAEA,2BAA2B,sEAAC;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL,2FAA2F,8FAAC,QAAQ,uFAAC;AACrG;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,sEAAC,MAAM,oEAAC,MAAM,iEAAC,MAAM,2DAAC,MAAM,4DAAC,MAAM,yEAAC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uEAAC;AACrB;AACA,SAAS,SAAS,uEAAC;AACnB;AACA,SAAS,SAAS,uEAAC;AACnB;AACA,SAAS,SAAS,uEAAC;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS,SAAS,kEAAC;AACnB,uBAAuB,iEAAC,kEAAkE,iEAAC;AAC3F,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAC;AAChB,mBAAmB,yDAAC;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,eAAe,uDAAC;AAChB,mBAAmB,yDAAC;AACpB;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAC;AAChB,mBAAmB,yDAAC;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA,mBAAmB,uDAAC;AACpB,uBAAuB,yDAAC;AACxB;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8BAA8B;AAC/C;AACA,aAAa;AACb;AACA,sEAAsE;AACtE;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL,CAAC,eAAe;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAC;AACpB,uBAAuB,yDAAC;AACxB;AACA;AACA;AACA;AACA,mCAAmC,uDAAC;AACpC;AACA,uCAAuC,yDAAC;AACxC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B,yBAAyB;;AAEzB;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,uDAAC;AACZ,eAAe,yDAAC;AAChB;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;;AAEA;AACA,WAAW,uDAAC;AACZ,eAAe,yDAAC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,uDAAC;AAC5B;AACA,+BAA+B,yDAAC;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,2BAA2B,uDAAC;AAC5B,+BAA+B,yDAAC;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,uDAAC;AACZ,eAAe,yDAAC;AAChB;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA,4CAA4C,cAAc;AAC1D;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA,WAAW,uDAAC;AACZ,eAAe,yDAAC;AAChB;AACA;AACA;AACA,2BAA2B,uDAAC;AAC5B;AACA,+BAA+B,yDAAC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;;AAEjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,eAAe,uDAAC;AAChB,mBAAmB,yDAAC;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,eAAe,uDAAC;AAChB,mBAAmB,yDAAC;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA,4CAA4C,cAAc;AAC1D;AACA;AACA,4CAA4C,cAAc;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,cAAc;AACzD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,cAAc;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,wBAAwB;AACxB,KAAK;AACL,gEAAgE,cAAc;AAC9E;AACA,sGAAsG,cAAc;AACpH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,uDAAC;AAChB;AACA,mBAAmB,yDAAC;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,yGAAyG;AACzG;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS,4CAA4C,0BAA0B;AAC/E;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gCAAgC;AACzC;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uDAAC;AAChC;AACA,mCAAmC,yDAAC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;;AAErC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,cAAc;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gDAAgD,cAAc;AAC9D;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yBAAyB;AACzB;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,cAAc;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,kCAAkC;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;;AAEjB;AACA;AACA,2BAA2B,uDAAC;AAC5B;AACA,+BAA+B,yDAAC;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA,6CAA6C;AAC7C,yCAAyC;AACzC,qCAAqC;AACrC,iCAAiC;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD,cAAc;AAChE;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B,cAAc;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4CAA4C,cAAc;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2BAA2B,yDAAC;AAC5B;AACA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;;AAEjB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,uDAAC;AAChB;AACA,mBAAmB,yDAAC;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yBAAyB;AACzB,qBAAqB;;AAErB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAC;AAChB,mBAAmB,yDAAC;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL,eAAe,uDAAC;AAChB,mBAAmB,yDAAC;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ,eAAe,uDAAC;AAChB,mBAAmB,yDAAC;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ,eAAe,uDAAC;AAChB;AACA,mBAAmB,yDAAC;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,uDAAC;AAChC,mCAAmC,yDAAC;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA,eAAe,uDAAC;AAChB;AACA,mBAAmB,yDAAC;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,mBAAmB,uDAAC;AACpB;AACA,uBAAuB,yDAAC;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAC;AACpB;AACA,uBAAuB,yDAAC;AACxB;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iCAAiC;AACjC,aAAa;AACb,SAAS;AACT;AACA,mBAAmB,uDAAC;AACpB,uBAAuB,yDAAC;AACxB;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL,eAAe,uDAAC;AAChB,mBAAmB,yDAAC;AACpB;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL,eAAe,uDAAC;AAChB,mBAAmB,yDAAC;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAC;AAChB;AACA,mBAAmB,yDAAC;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL,yBAAyB;AACzB;AACA,2BAA2B;AAC3B,SAAS;AACT,KAAK;AACL;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAC;AAChB;AACA,mBAAmB,yDAAC;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAC;AAChB;AACA,mBAAmB,yDAAC;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAC;AAChB;AACA,mBAAmB,yDAAC;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,2EAA2E;AAC3E,cAAc,GAAG,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,cAAc;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,2EAA2E;AAC3E,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sBAAsB;AACpD,iHAAiH,4DAAC;AAClH;AACA;AACA,gCAAgC,4DAAC;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA;AACA,8GAA8G,4DAAC;AAC/G;AACA;AACA;AACA,2CAA2C,4DAAC;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,mDAAmD;AACnD,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL,oEAAoE;AACpE;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,sCAAsC,sBAAsB;AAC5D,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yDAAyD;AACzD,kDAAkD,cAAc;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ,mOAAmO,WAAW;AAC9O;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA,kDAAkD,QAAQ;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,cAAc;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,4DAAC;AACxC,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAC;AAChB;AACA,mBAAmB,yDAAC;AACpB;AACA;AACA;AACA;AACA,+BAA+B,uDAAC;AAChC;AACA,mCAAmC,yDAAC;AACpC;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,qCAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD,yEAAyE;AACzE,6CAA6C;AAC7C;AACA;AACA;AACA,6CAA6C;AAC7C,yCAAyC;AACzC;AACA,qCAAqC;AACrC;AACA;AACA,qCAAqC;AACrC;AACA,6BAA6B;AAC7B,yBAAyB;AACzB,qBAAqB;;AAErB;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,eAAe,uDAAC;AAChB;AACA,mBAAmB,yDAAC;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,+BAA+B,uDAAC;AAChC;AACA,mCAAmC,yDAAC;AACpC;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,qCAAqC;;AAErC;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB,qBAAqB;;AAErB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK,gCAAgC;AACrC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,uDAAC;AACpB;AACA,uBAAuB,yDAAC;AACxB;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B,yBAAyB;AACzB,qBAAqB;AACrB;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,SAAS;AACT;AACA;AACA,eAAe,uDAAC;AAChB,mBAAmB,yDAAC;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,uDAAC;AACpB;AACA,uBAAuB,yDAAC;AACxB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,uDAAC;AAChC,mCAAmC,yDAAC;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uDAAC;AACpC;AACA,uCAAuC,yDAAC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA,WAAW,uDAAC;AACZ,eAAe,yDAAC;AAChB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA,WAAW,uDAAC;AACZ,eAAe,yDAAC;AAChB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,uDAAC;AACZ;AACA,eAAe,yDAAC;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,eAAe,uDAAC;AAChB;AACA,mBAAmB,yDAAC;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA,qBAAqB;;AAErB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,eAAe,uDAAC;AAChB;AACA,mBAAmB,yDAAC;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA,qBAAqB;;AAErB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,+DAA+D;AAC/D,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAC;AAChB;AACA,mBAAmB,yDAAC;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA,KAAK,gCAAgC;AACrC;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAC;AAChB;AACA,mBAAmB,yDAAC;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,qCAAqC,cAAc;AACnD;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,cAAc;AACjF;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,0BAA0B,GAAG,mBAAmB;AACpD,IAAI,gCAAgC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAC;AAChB;AACA,mBAAmB,yDAAC;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA,YAAY,qBAAqB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,gCAAgC;AAChC;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uDAAC;AACnB;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gEAAgE,YAAY;AAC5E,IAAI,cAAc,GAAG,cAAc,GAAG,iBAAiB,GAAG;AAC1D,aAAa,GAAG,YAAY,GAAG,YAAY,KAAK,kBAAkB;AAClE,0BAA0B,YAAY;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB;AACjD,0BAA0B,cAAc;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,cAAc;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,cAAc;AAChE;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,QAAQ,eAAe;AACxE,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,cAAc;AACxD;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uDAAC;AACnB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uDAAC;AACnB,sCAAsC;AACtC,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,0IAA0I,8BAA8B;AACxK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,sBAAsB,KAAK,uBAAuB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,sBAAsB;AAC1D;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,uDAAC;AACpB;AACA,uBAAuB,yDAAC;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA,uBAAuB,uDAAC;AACxB;AACA,2BAA2B,yDAAC;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,uDAAC;AACpB;AACA,uBAAuB,yDAAC;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,iBAAiB;AACtE;AACA,iDAAiD,wBAAwB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,+BAA+B,sBAAsB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,yDAAyD,wBAAwB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qBAAqB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qBAAqB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,wBAAwB;AAC9E;AACA;AACA;AACA,kBAAkB,uDAAC;AACnB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,sDAAsD,wBAAwB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL,+BAA+B,sBAAsB;AACrD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,yDAAyD,wBAAwB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,uBAAuB,uDAAC;AACxB;AACA,2BAA2B,yDAAC;AAC5B;AACA;AACA;AACA,uCAAuC,uDAAC;AACxC;AACA,2CAA2C,yDAAC;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA,qCAAqC;AACrC,iCAAiC;AACjC,6BAA6B;;AAE7B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,WAAW,uDAAC;AACZ;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,kDAAkD;AAClD,KAAK;AACL;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,uBAAuB,uDAAC;AACxB;AACA,2BAA2B,yDAAC;AAC5B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,uDAAC;AACxB;AACA,2BAA2B,yDAAC;AAC5B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uCAAuC,uDAAC;AACxC;AACA,2CAA2C,yDAAC;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,iCAAiC;AACjC,6BAA6B;AAC7B;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,uDAAC;AACxB;AACA,2BAA2B,yDAAC;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,2BAA2B,uDAAC;AAC5B;AACA,+BAA+B,yDAAC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;AACA,+BAA+B,uDAAC;AAChC;AACA,mCAAmC,yDAAC;AACpC;AACA;AACA;AACA;AACA,qCAAqC;;AAErC;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,2BAA2B,uDAAC;AAC5B;AACA,+BAA+B,yDAAC;AAChC;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,iCAAiC;;AAEjC;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,kCAAkC,sBAAsB;AACxD;AACA,6FAA6F,4DAAC;AAC9F;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA;AACA,KAAK;AACL,kCAAkC,sBAAsB;AACxD;AACA,6FAA6F,4DAAC;AAC9F;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA,2EAA2E;AAC3E,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL,+BAA+B,sBAAsB;AACrD;AACA,8EAA8E,4DAAC;AAC/E,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,yCAAyC,sBAAsB;AAC/D;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uDAAC;AAC5B;AACA,+BAA+B,yDAAC;AAChC;AACA;AACA;AACA,2CAA2C,uDAAC;AAC5C;AACA,+CAA+C,yDAAC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD,iDAAiD;;AAEjD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC,qCAAqC;AACrC,iCAAiC;;AAEjC;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,cAAc;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL,+BAA+B,sBAAsB;AACrD;AACA;AACA,uCAAuC,sBAAsB;AAC7D;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL,+BAA+B,sBAAsB;AACrD;AACA;AACA,uCAAuC,sBAAsB;AAC7D;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL,+BAA+B,sBAAsB;AACrD;AACA;AACA,uCAAuC,sBAAsB;AAC7D;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL,+BAA+B,sBAAsB;AACrD;AACA;AACA,uCAAuC,sBAAsB;AAC7D;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uDAAC;AAC5B;AACA,+BAA+B,yDAAC;AAChC;AACA;AACA;AACA,2CAA2C,uDAAC;AAC5C;AACA,+CAA+C,yDAAC;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC,qCAAqC;AACrC,iCAAiC;;AAEjC;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL,yCAAyC,sBAAsB;AAC/D;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,mFAAmF;AACnF;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD,mDAAmD,4DAAC;AACpD;AACA,WAAW,uDAAC;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA,WAAW,uDAAC;AACZ;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,+BAA+B,sBAAsB;AACrD;AACA;AACA,kDAAkD,aAAa,KAAK;AACpE,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,sBAAsB;AACzD;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL,+BAA+B,sBAAsB;AACrD;AACA,mCAAmC,sBAAsB;AACzD;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gBAAgB;AACpD,IAAI,aAAa,QAAQ,YAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,uBAAuB,uDAAC;AACxB;AACA,2BAA2B,yDAAC;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAC;AACpB;AACA,uBAAuB,yDAAC;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;;AAEzB;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEwL;AACxL;;;;;;;;;;;;;AC9lkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACJ;AACgB;AAC8C;AAC3C;AACJ;;AAEhD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,6DAA6D,WAAW;AACxE,6DAA6D,WAAW;AACxE,mFAAmF,WAAW;AAC9F,gFAAgF,WAAW;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,eAAe;AAChG,oFAAoF,gBAAgB;AACpG,6FAA6F,kBAAkB;AAC/G;AACA;AACA,wBAAwB,2DAAY;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uDAAM;AAC9B,yBAAyB,yDAAQ;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,2EAAoB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,0BAA0B,0BAA0B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4BAA4B,EAAE;AAC/D;AACA,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mDAAmD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,wBAAwB,EAAE;AACrD,8BAA8B,uBAAuB,EAAE;AACvD,2BAA2B,qCAAqC,EAAE,eAAe,qCAAqC,EAAE;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,KAAK,EAAE,EAAE;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAc;AAC9B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4DAAc;AAClC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,4BAA4B,EAAE,eAAe,4BAA4B,EAAE;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sCAAsC,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,wDAAwD,EAAE;AACtgCAAgC,gBAAgB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,oCAAoC,sDAAQ,GAAG;AAC/C;AACA;AACA,+DAA+D,gBAAgB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,kBAAkB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sDAAQ,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,yCAAyC,EAAE;AAClH;AACA;AACA;AACA,iFAAiF,oDAAoD,EAAE;AACvI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yBAAyB,EAAE;AACvD,4BAA4B,+BAA+B,EAAE;AAC7D,4BAA4B,gCAAgC,EAAE;AAC9D;AACA;AACA;AACA;AACA,6CAA6C,yBAAyB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,wBAAwB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gFAAyB;AACrC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,6DAAS;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB,qDAAQ;;AAEG;AAC/B;;;;;;;;;;;;;AC36CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACJ;AACwB;AAC4B;AACjC;AACJ;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6CAA6C;AACrD;AACA,oDAAoD,oCAAoC;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA,iGAAiG,sBAAsB;AACvH,oGAAoG,sBAAsB;AAC1H,kGAAkG,sBAAsB;AACxH,2GAA2G,sBAAsB;AACjI;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA,8EAA8E,uBAAuB;AACrG;AACA,2BAA2B,sBAAsB;AACjD,uGAAuG,YAAY;AACnH;AACA,wBAAwB,2DAAY;AACpC;AACA;AACA,wBAAwB,4DAAa;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,wBAAwB;AACzF;AACA;AACA,uCAAuC,+BAA+B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,8BAA8B,WAAW,wBAAwB;AACnF;AACA,kBAAkB,4BAA4B,WAAW,oBAAoB;AAC7E;AACA,kBAAkB,6BAA6B;AAC/C;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,+CAA+C,qDAAqD;AACpG;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,mBAAmB,EAAE;AACzE;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mCAAmC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,uDAAuD;AACvD;AACA;AACA;AACA,QAAQ,0HAA0H;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,yDAAQ;AAChD;AACA;AACA,wCAAwC,yDAAQ;AAChD;AACA;AACA,wCAAwC,yDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,kBAAkB,qCAAqC;AACvD,QAAQ,qCAAqC;AAC7C,QAAQ,oCAAoC;AAC5C;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA,gDAAgD,QAAQ,uDAAS;AACjE,mCAAmC,yDAAW;AAC9C;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB,EAAE,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC,0BAA0B,WAAW;AACrC,uBAAuB,sDAAQ,CAAC,sDAAQ,GAAG;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,iBAAiB,OAAO,oBAAoB;AAC1F;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uDAAuD;AACvD,iCAAiC;AACjC;AACA;AACA;AACA,sCAAsC,iCAAiC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,gCAAgC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,6BAA6B;AAC7B;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,6BAA6B;AAC7B;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,6BAA6B;AAC7B;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA,uBAAuB,4DAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,6EAAsB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,6DAAS;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uDAAM;AAC/B;AACA;AACA,0BAA0B,yDAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qDAAQ;;AAEG;AAChC;;;;;;;;;;;;;AC3oCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACW;AAC6B;AAChB;AAChC;;AAE7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,0GAA0G,WAAW;AACrH;AACA;AACA,kDAAkD,aAAa,6BAA6B,YAAY,EAAE,cAAc,GAAG,eAAe;AAC1I;AACA;AACA;AACA,wBAAwB,2DAAY;AACpC;AACA;AACA,6BAA6B,4DAAa;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,iCAAiC,EAAE;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,sDAAQ;AAC7D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,GAAG;AACzsDAAQ,gDAAgD,qBAAqB;AAC5G;AACA;AACA;AACA;AACA,mBAAmB,QAAQ,gBAAgB;AAC3C;AACA;AACA;AACA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA,6BAA6B,qBAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kDAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,iCAAiC,EAAE;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,sBAAsB;AACxD,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sDAAQ,CAAC,sDAAQ,GAAG,cAAc,aAAa,qCAAqC,EAAE;AACzG;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,sDAAQ,CAAC,sDAAQ,GAAG,uBAAuB,uBAAuB;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,sDAAQ,CAAC,sDAAQ,GAAG,uBAAuB,aAAa,qCAAqC,EAAE;AAC9I;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sDAAQ,CAAC,sDAAQ,GAAG,cAAc,iCAAiC;AAC9E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,sBAAsB;AACxD,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,iCAAiC,EAAE;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,sDAAQ,mDAAmD,sBAAsB;AACjH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ,gBAAgB;AAC3C;AACA;AACA;AACA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,6DAAS;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4BAA4B,EAAE;AAC9D;AACA;AACA,aAAa;AACb,iCAAiC,yCAAyC,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,sBAAsB,qDAAQ;;AAEG;AACjC;;;;;;;;;;;;;ACjzCA;AAAA;AAAA;AAAA;AAAqC;AACqB;AACV;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,iBAAiB;AAChE;AACA;AACA,SAAS;AACT;AACA,qDAAqD,4BAA4B,EAAE;AACnF;AACA,aAAa;AACb;AACA;AACA,+DAA+D,sCAAsC,EAAE;AACvG;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,yDAAyD;AACxG;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uBAAuB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,wBAAwB,EAAE;AACpE;AACA;AACA,iDAAiD,wBAAwB,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,wBAAwB,EAAE;AACpE;AACA;AACA,iDAAiD,wBAAwB,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,uCAAuC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,oBAAoB;AACnE;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,6DAAS;AACrD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qDAAQ;AAC1B,qDAAQ;AACR;;;;;;;;;;;;;ACzpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiC;AACe;AACF;AAC+B;AACtC;AACF;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,0GAA0G,WAAW;AACrH;AACA;AACA;AACA;AACA;AACA,yIAAyI,qBAAqB;AAC9J,wHAAwH,WAAW;AACnI;AACA;AACA,yBAAyB,WAAW;AACpC,iHAAiH,WAAW;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2DAAY;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,sDAAQ;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,gBAAgB,EAAE;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,kDAAM,6CAA6C,QAAQ,uDAAS;AAC7G;AACA;AACA,mCAAmC,yDAAW;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB,EAAE,EAAE;AAC7B;AACA;AACA;AACA;AACA,yCAAyC,oDAAQ;AACjD;AACA;AACA;AACA,yCAAyC,oDAAQ;AACjD;AACA;AACA,yCAAyC,oDAAQ;AACjD;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kDAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,sDAAQ,CAAC,sDAAQ,GAAG,kBAAkB,8CAA8C;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA,iCAAiC,sDAAQ,GAAG;AAC5C;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAS;AACpB;AACA;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA,4CAA4C,sDAAQ,mDAAmD,sBAAsB;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ,gBAAgB;AAC3D;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,sDAAQ,mDAAmD,sBAAsB;AACjH;AACA;AACA;AACA;AACA,mBAAmB,QAAQ,gBAAgB;AAC3C;AACA;AACA;AACA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F;AAC3F;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,4CAA4C,kBAAkB;AAC9D,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,kBAAkB;AAC9D,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,sDAAQ,mDAAmD,sBAAsB;AACjH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ,gBAAgB;AAC3C;AACA;AACA;AACA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAQ,gCAAgC,6DAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1sDA;AACA,EAAE,KAA4D;AAC9D,EAAE,SACmD;AACrD,CAAC,2BAA2B;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,gDAAgD,cAAc;;AAE9D,CAAC;;;;;;;;;;;;;AC3TD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0B;;AAEF;;AAEc;;AAEvB;;AAE0D;;AAEzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,gEAAC,2BAA2B,gEAAC;AAC1D;;AAEA,EAAE,gEAAC;;AAE4B;AAC/B;;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,8EAA8E;AACvG;AACA;;AAEA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;;AAEA,wBAAwB;AACxB,eAAe;AACf,gBAAgB,kBAAkB,qEAAqE,qEAAqE;AAC5K,eAAe,kBAAkB,sDAAsD;AACvF,gBAAgB,+EAA+E;AAC/F;AACA,sBAAsB,wCAAwC;AAC9D,sBAAsB;AACtB,kBAAkB;AAClB;AACA,wBAAwB,+CAA+C,qCAAqC,sBAAsB;AAClI,CAAC,qBAAqB,8BAA8B,GAAG;AACvD,qBAAqB,8GAA8G,iCAAiC;AACpK,mBAAmB,kDAAkD,qBAAqB,mBAAmB,4BAA4B,yBAAyB,GAAG;AACrK,cAAc,mBAAmB;AACjC,kBAAkB,eAAe,EAAE,2BAA2B,mBAAmB,qBAAqB,6BAA6B,4BAA4B,iDAAiD,sBAAsB;AACtO,4BAA4B,mCAAmC,GAAG;AAClE,cAAc,iBAAiB,iBAAiB;AAChD;AACA;AACA,8BAA8B;AAC9B;AACA,CAAC;AACD,6BAA6B;AAC7B,UAAU,eAAe;AACzB,yBAAyB;AACzB,oDAAoD,mDAAmD,EAAE,oBAAoB;AAC7H,yEAAyE,gBAAgB,cAAc;AACvG;AACA,iBAAiB,WAAW,EAAE,qDAAqD,uCAAuC,EAAE,uBAAuB,2EAA2E,OAAO;AACrO,oCAAoC;AACpC,gBAAgB;AAChB;AACA,8EAA8E,OAAO;AACrF;AACA;AACA;AACA;AACA;AACA,CAAC,kEAAkE;AACnE,gBAAgB,oDAAoD;AACpE,gBAAgB,kBAAkB;AAClC,iCAAiC,OAAO;AACxC;AACA;AACA,CAAC,WAAW;AACZ,gBAAgB,8BAA8B;AAC9C,+CAA+C,iBAAiB,EAAE,iBAAiB,oDAAoD;AACvI,kBAAkB,2BAA2B;AAC7C,mBAAmB,mCAAmC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,0BAA0B;AAC1B,gBAAgB,YAAY;AAC5B,gBAAgB,UAAU;AAC1B;AACA,mBAAmB,UAAU,gBAAgB,sBAAsB;AACnE;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA,CAAC;AACD,gBAAgB,YAAY,UAAU;AACtC;AACA,mBAAmB,YAAY,wEAAwE;AACvG;AACA,eAAe,oBAAoB,oCAAoC;AACvE;AACA;AACA,mCAAmC,WAAW;AAC9C,yBAAyB,QAAQ,WAAW;AAC5C,yCAAyC;AACzC,uCAAuC,QAAQ,WAAW;AAC1D,uCAAuC;AACvC,gDAAgD,EAAE;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2BAA2B;AAC3C;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC,eAAe,EAAE,EAAE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE,cAAc,yCAAyC,cAAc,mBAAmB,QAAQ,EAAE,EAAE,EAAE;AACtG;AACA;AACA,WAAW,EAAE,UAAU,EAAE;AACzB,kBAAkB,eAAe,0BAA0B,4BAA4B;AACvF,6BAA6B,4BAA4B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,6BAA6B,kBAAkB,gBAAgB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,4BAA4B,mBAAmB,mBAAmB,cAAc,eAAe,oBAAoB,aAAa,iBAAiB,sBAAsB;AACvK,gBAAgB,UAAU,mBAAmB,gBAAgB,cAAc,aAAa;AACxF,gBAAgB,cAAc,aAAa,YAAY;AACvD,6CAA6C,sBAAsB,eAAe,qCAAqC,wBAAwB,iGAAiG,UAAU;AAC1P,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA,CAAC;AACD,yBAAyB,gBAAgB,cAAc;AACvD;AACA;AACA;AACA,CAAC,WAAW;AACZ;AACA,4BAA4B;AAC5B,6BAA6B;AAC7B,mBAAmB,cAAc;AACjC;AACA;AACA,CAAC,WAAW,oFAAoF;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oCAAoC,qCAAqC,EAAE,iBAAiB,kCAAkC;AAC7I,aAAa,GAAG,UAAU;AAC1B,4BAA4B;AAC5B,mBAAmB,cAAc;AACjC;AACA;AACA,CAAC,WAAW,oFAAoF;AAChG,4BAA4B;AAC5B,mBAAmB,cAAc;AACjC;AACA;AACA,wWAAwW;AACxW,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,gBAAgB,2CAA2C;AAC3D,mBAAmB,uCAAuC,cAAc,qBAAqB;AAC7F,mBAAmB;AACnB,cAAc;AACd;AACA;AACA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AAC/B,gBAAgB,WAAW,mCAAmC;AAC9D;AACA,gBAAgB;AAChB,aAAa,iCAAiC,yBAAyB,EAAE,EAAE,cAAc;AACzF,cAAc,cAAc,uBAAuB,eAAe,eAAe;AACjF;AACA;AACA;AACA,4CAA4C,sBAAsB;AAClE,+CAA+C,sBAAsB;AACrE,kBAAkB,gBAAgB;AAClC,gBAAgB,GAAG;AACnB,kBAAkB,SAAS,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,QAAQ;AACT,8BAA8B,QAAQ;AACtC;AACA;AACA,KAAK,aAAa,0BAA0B,0BAA0B;AACtE,eAAe,cAAc;AAC7B,iDAAiD;AACjD,mBAAmB,kBAAkB;AACrC;AACA;AACA,mCAAmC,cAAc;AACjD;AACA;AACA;AACA;AACA,CAAC,eAAe;AAChB,8BAA8B,2CAA2C;AACzE,8BAA8B,2CAA2C;AACzE,yBAAyB,sBAAsB;AAC/C,cAAc,gBAAgB,wBAAwB,cAAc;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iCAAiC;AAClC;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,OAAO,oFAAoF,UAAU;AAC9I;AACA,CAAC,iBAAiB,eAAe,EAAE,gBAAgB,WAAW,EAAE;AAChE,oCAAoC,kBAAkB,aAAa,uCAAuC,YAAY;AACtH,eAAe,sBAAsB,sEAAsE,UAAU;AACrH,eAAe,oCAAoC;AACnD,oCAAoC,YAAY,YAAY,kBAAkB;AAC9E,kCAAkC,oCAAoC;AACtE,gBAAgB,2BAA2B,SAAS,EAAE,KAAK;AAC3D,mBAAmB,YAAY,uBAAuB,cAAc;AACpE;AACA,eAAe,mCAAmC,mBAAmB,YAAY,GAAG;AACpF;AACA,eAAe,YAAY,UAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,SAAS;AACV,mBAAmB,cAAc,iBAAiB,iBAAiB,2BAA2B,cAAc;AAC5G;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,CAAC;AACD,uBAAuB,cAAc,sEAAsE;AAC3G,gBAAgB,WAAW,4CAA4C;AACvE,mBAAmB,mBAAmB,UAAU,eAAe;AAC/D,sBAAsB;AACtB;AACA;AACA;AACA;AACA,6CAA6C,8DAA8D;AAC3G,gBAAgB,uBAAuB,YAAY,0BAA0B,EAAE,OAAO,aAAa,YAAY,oBAAoB;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oBAAoB,iCAAiC;AACxF,kCAAkC,+BAA+B,+EAA+E;AAChJ;AACA,CAAC;AACD,eAAe,cAAc,YAAY,aAAa;AACtD;AACA;AACA,yBAAyB,2DAA2D,gBAAgB,cAAc;AAClH;AACA;AACA;AACA;AACA,CAAC;AACD,gBAAgB,0BAA0B,mCAAmC,EAAE,KAAK,UAAU;AAC9F,6BAA6B,kBAAkB,UAAU;AACzD,uCAAuC,yDAAyD;AAChG,eAAe,aAAa;AAC5B,+BAA+B,qBAAqB;AACpD;AACA;AACA,yCAAyC,cAAc;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,kFAAkF,EAAE,EAAE;AAChG,kCAAkC,qBAAqB,8FAA8F,EAAE,EAAE;AACzJ,wBAAwB,qBAAqB,qEAAqE,EAAE,EAAE;AACtH,mBAAmB,qBAAqB,wBAAwB,EAAE,EAAE;AACpE,iCAAiC;AACjC,mBAAmB;AACnB,aAAa;AACb,gBAAgB;AAChB;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,cAAc;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,UAAU;AACV,eAAe,yBAAyB;AACxC;AACA,gBAAgB,uBAAuB;AACvC;AACA,eAAe,cAAc,oBAAoB;AACjD;AACA,mBAAmB,+BAA+B,eAAe;AACjE;AACA,eAAe,cAAc,oBAAoB;AACjD;AACA,gBAAgB,uBAAuB;AACvC;AACA,kBAAkB;AAClB,8DAA8D,kCAAkC,KAAK,EAAE,KAAK;AAC5G,UAAU;AACV,UAAU;AACV,eAAe;AACf;AACA,gBAAgB,OAAO,2BAA2B,EAAE,UAAU;AAC9D,eAAe;AACf,SAAS;AACT,eAAe,mBAAmB;AAClC;AACA,eAAe,mBAAmB;AAClC;AACA;AACA,eAAe;AACf;AACA;AACA,wBAAwB,YAAY,YAAY,YAAY,iBAAiB,sBAAsB,aAAa,uBAAuB,oBAAoB,eAAe,aAAa,qEAAqE,aAAa,eAAe,YAAY,wBAAwB,aAAa,aAAa,YAAY,eAAe,wCAAwC;AACzZ,sBAAsB;AACtB;AACA,6BAA6B,YAAY;AACzC,sBAAsB,SAAS,gBAAgB,SAAS,UAAU,aAAa;AAC/E,mBAAmB,WAAW,OAAO,cAAc,sBAAsB,uCAAuC,iBAAiB,SAAS,iCAAiC,iDAAiD,wCAAwC,wBAAwB,6JAA6J,MAAM,kCAAkC;AACje,qBAAqB,cAAc,gBAAgB,qCAAqC;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA,sBAAsB,iBAAiB,wBAAwB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qDAAqD,gBAAgB,iPAAiP;AACvT,oBAAoB;AACpB;AACA;AACA,CAAC;AACD,mBAAmB,qCAAqC;AACxD,cAAc,+BAA+B;AAC7C,cAAc,QAAQ;AACtB,cAAc,oBAAoB,aAAa,UAAU;AACzD,wBAAwB,aAAa,SAAS;AAC9C,gBAAgB,iBAAiB,YAAY;AAC7C,mBAAmB;AACnB,2CAA2C,wBAAwB;AACnE,gBAAgB,0CAA0C;AAC1D,oBAAoB,eAAe,aAAa,4HAA4H;AAC5K,gBAAgB,iCAAiC;AACjD,eAAe,OAAO,aAAa,0CAA0C,YAAY,SAAS,SAAS,iDAAiD;AAC5J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,cAAc;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB,iBAAiB;AACjB,uBAAuB;AACvB,yCAAyC,OAAO;AAChD;AACA;AACA,CAAC,QAAQ,OAAO;AAChB,kBAAkB,cAAc;AAChC,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,CAAC;AACD,kBAAkB,aAAa,aAAa,YAAY,0BAA0B;AAClF;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,8BAA8B,cAAc;AAC5C;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,mBAAmB,UAAU,wBAAwB,mBAAmB;AACxE,8BAA8B,UAAU;AACxC,mBAAmB,UAAU,wBAAwB;AACrD,gBAAgB;AAChB,0BAA0B,gBAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA,CAAC;AACD,yBAAyB,qCAAqC;AAC9D,yBAAyB,4CAA4C,eAAe;AACpF,6BAA6B,8BAA8B,cAAc;AACzE;AACA;AACA,CAAC;AACD,kBAAkB,mDAAmD;AACrE;AACA,mBAAmB;AACnB;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAkB,+BAA+B,eAAe,sBAAsB,aAAa;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iRAAiR;AACjR,oCAAoC,wBAAwB,iCAAiC,gBAAgB;AAC7G,4HAA4H,EAAE,8DAA8D;AAC5L,iGAAiG,2CAA2C,wCAAwC,mBAAmB;AACvM,eAAe,iBAAiB;AAChC,sBAAsB,yBAAyB,sCAAsC;AACrF,sBAAsB,yBAAyB;AAC/C,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,sBAAsB,0FAA0F;AAChH,qBAAqB,eAAe;AACpC,gBAAgB,uIAAuI,UAAU;AACjK,gBAAgB,iDAAiD;AACjE,yBAAyB,6BAA6B,eAAe,eAAe,eAAe,gBAAgB,UAAU;AAC7H,mBAAmB,mFAAmF;AACtG,sBAAsB,uGAAuG,EAAE,wBAAwB;AACvJ,gBAAgB,qBAAqB,iEAAiE;AACtG;AACA,mBAAmB,wBAAwB,oBAAoB,cAAc;AAC7E,eAAe,+DAA+D,qDAAqD,EAAE,GAAG;AACxI;AACA,yBAAyB,SAAS,eAAe,gBAAgB,uBAAuB,4BAA4B,WAAW,aAAa,aAAa;AACzJ,mBAAmB,MAAM,aAAa,oIAAoI;AAC1K,mBAAmB,MAAM,aAAa,oBAAoB;AAC1D,6BAA6B,SAAS,iCAAiC,qBAAqB,uBAAuB,EAAE,QAAQ,EAAE,QAAQ;AACvI,mBAAmB,SAAS,wDAAwD,cAAc;AAClG,6BAA6B,cAAc;AAC3C,qBAAqB,UAAU;AAC/B,oBAAoB,SAAS,YAAY;AACzC;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA,CAAC,UAAU;AACX,yBAAyB,SAAS,eAAe,gBAAgB,iDAAiD,oBAAoB,aAAa,aAAa;AAChK,yBAAyB;AACzB,aAAa,eAAe,wCAAwC;AACpE,sBAAsB,UAAU,wEAAwE;AACxG,0BAA0B;AAC1B,kBAAkB;AAClB,cAAc,wCAAwC,cAAc;AACpE;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA,CAAC,6BAA6B;AAC9B,kBAAkB,eAAe,8BAA8B,UAAU;AACzE,mBAAmB,8DAA8D,yBAAyB,yCAAyC,EAAE,MAAM,SAAS;AACpK;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,gBAAgB,kBAAkB,+NAA+N,yBAAyB,eAAe,kCAAkC,eAAe,aAAa;AACvW;AACA,gBAAgB,8CAA8C;AAC9D,gBAAgB,qCAAqC;AACrD,mBAAmB,+CAA+C;AAClE,mBAAmB,4BAA4B;AAC/C,mBAAmB,mEAAmE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,UAAU;AAC9E;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,UAAU;AAC3E;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,uCAAuC,oCAAoC;AAC3E,mCAAmC,gCAAgC;AACnE,eAAe,iBAAiB;AAChC,sBAAsB,iBAAiB;AACvC,2BAA2B,WAAW,qBAAqB,6CAA6C,EAAE;AAC1G;AACA;AACA;AACA,CAAC;AACD,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,sBAAsB,EAAE;AACxB;AACA;AACA;AACA,UAAU;AACV,4BAA4B;AAC5B;AACA;AACA,WAAW,EAAE;AACb;AACA,eAAe,cAAc,sBAAsB,oBAAoB,aAAa,wBAAwB,aAAa,YAAY,aAAa,wCAAwC,YAAY,eAAe,aAAa,sBAAsB;AACxP;AACA;AACA;AACA;AACA;AACA,2FAA2F;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,aAAa,EAAE;AAC/C;AACA;AACA;AACA,yFAAyF;AACzF,+BAA+B,+BAA+B,EAAE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8EAA8E;AAC9F,gBAAgB,0CAA0C;AAC1D,oBAAoB,gJAAgJ;AACpK,mBAAmB,UAAU,0CAA0C,SAAS,SAAS,OAAO,OAAO;AACvG,gBAAgB,oDAAoD;AACpE,wBAAwB,+IAA+I;AACvK,mBAAmB,6FAA6F,kBAAkB;AAClI,oBAAoB,+DAA+D;AACnF,oBAAoB,UAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,CAAC;AACD,gBAAgB,sCAAsC,0CAA0C;AAChG,eAAe,iCAAiC;AAChD,mBAAmB;AACnB;AACA;AACA;AACA;AACA,CAAC;AACD,mBAAmB;AACnB;AACA;AACA;AACA;AACA,CAAC;AACD,qBAAqB;AACrB;AACA;AACA;AACA,CAAC;AACD,oBAAoB,eAAe;AACnC,oBAAoB,6DAA6D;AACjF,gBAAgB,YAAY,wBAAwB,QAAQ,UAAU,QAAQ,aAAa,EAAE,EAAE,UAAU;AACzG,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,CAAC,qGAAqG;AACtG,sBAAsB,2EAA2E;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,OAAO;AACR,gBAAgB,0CAA0C;AAC1D,gBAAgB,OAAO,0CAA0C,OAAO,cAAc,qEAAqE;AAC3J,mBAAmB,6BAA6B,mBAAmB;AACnE,gBAAgB,oDAAoD;AACpE,mBAAmB;AACnB,cAAc;AACd,qCAAqC;AACrC,cAAc,oCAAoC,OAAO,WAAW;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,mBAAmB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO,yBAAyB,gBAAgB,kBAAkB,gBAAgB,kBAAkB,UAAU,+BAA+B,+BAA+B,6BAA6B,8BAA8B,mBAAmB,6EAA6E,YAAY,aAAa;AACnX,mBAAmB,aAAa,mBAAmB,YAAY,EAAE,EAAE;AACnE,sBAAsB,6BAA6B,wCAAwC,8BAA8B;AACzH;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sBAAsB,SAAS,UAAU;AAC1C,gBAAgB,+CAA+C;AAC/D,gBAAgB;AAChB,cAAc,OAAO,iCAAiC,OAAO,WAAW;AACxE,oBAAoB,eAAe,UAAU;AAC7C;AACA;AACA;AACA,CAAC;AACD,oBAAoB,mMAAmM;AACvN,gBAAgB,kDAAkD;AAClE,gBAAgB,iCAAiC,+BAA+B,WAAW,iBAAiB,oBAAoB,kBAAkB,6BAA6B,kBAAkB,UAAU,yBAAyB,+BAA+B,4BAA4B,aAAa,UAAU,SAAS,gBAAgB,YAAY,UAAU,UAAU;AAC/W,oBAAoB,8DAA8D;AAClF,gBAAgB,kDAAkD;AAClE,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,iDAAiD,iBAAiB,cAAc;AACnG,kBAAkB,6BAA6B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,kBAAkB,OAAO,OAAO;AAClD,qBAAqB,8GAA8G;AACnI,gBAAgB,SAAS,UAAU;AACnC;AACA;AACA;AACA,CAAC;AACD,sBAAsB,eAAe;AACrC;AACA;AACA;AACA;AACA,CAAC,iCAAiC,YAAY,EAAE,EAAE,SAAS,UAAU,sBAAsB,mBAAmB,UAAU,UAAU;AAClI,mBAAmB;AACnB,uEAAuE,iBAAiB,WAAW,UAAU;AAC7G,eAAe;AACf;AACA,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;AACpB,eAAe;AACf,gEAAgE;AAChE,kCAAkC,oBAAoB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F,oCAAoC;AACjI;AACA;AACA,mGAAmG,oDAAoD;AACvJ,mEAAmE,qCAAqC;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mBAAmB,2BAA2B,kDAAkD,MAAM,UAAU,eAAe,WAAW,yBAAyB,OAAO;AACvM,iCAAiC,YAAY;AAC7C,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,oBAAoB,qDAAqD;AACzE,6BAA6B,iBAAiB,eAAe,YAAY,eAAe,kBAAkB;AAC1G,gBAAgB,eAAe,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,eAAe,eAAe,iBAAiB;AAC/C;AACA,eAAe,YAAY;AAC3B;AACA,8BAA8B,gBAAgB;AAC9C,+BAA+B,sBAAsB;AACrD,+BAA+B,sBAAsB;AACrD,8BAA8B,gBAAgB,GAAG;;AAEjD;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,eAAe;AAC5D,sCAAsC,aAAa;AACnD;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,kEAAG,EAAC;AAC4F;AAC/G;;;;;;;;;;;;;ACj4CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8B;;AAEJ;;AAEF;;AAEc;;AAEvB;;AAEkL;;AAE5I;;AAErD;AACA,eAAe,gEAAC;AAChB,cAAc,gEAAC;AACf,eAAe,gEAAC;AAChB,UAAU,gEAAC;AACX,iBAAiB,gEAAC;AAClB,gBAAgB,gEAAC;AACjB,uBAAuB,gEAAC;AACxB,sBAAsB,gEAAC;AACvB,WAAW,gEAAC;AACZ,2BAA2B,gEAAC;AAC5B,mBAAmB,gEAAC;AACpB,yBAAyB,gEAAC;AAC1B,eAAe,gEAAC;AAChB,gBAAgB,gEAAC;AACjB,iBAAiB,gEAAC;AAClB,0BAA0B,gEAAC;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,6DAAC;AAC1C;AACA;AACA,SAAS,0DAA0D;AACnE,KAAK;AACL,mBAAmB,gEAAC,QAAQ,gEAAC,YAAY,gEAAC;AAC1C,KAAK;AACL;;AAEA,EAAE,qDAAC;;AAE+B;AAClC","file":"default~calculator-calculator-module~preferences-make-preference-make-preference-module~preferences-~8b5f8370-es2015.js","sourcesContent":["import { __awaiter, __generator, __assign } from 'tslib';\nimport firebase from '@firebase/app';\nimport '@firebase/installations';\nimport { Logger } from '@firebase/logger';\nimport { ErrorFactory, calculateBackoffMillis, FirebaseError, validateIndexedDBOpenable, isIndexedDBAvailable, isBrowserExtension, areCookiesEnabled } from '@firebase/util';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Key to attach FID to in gtag params.\r\nvar GA_FID_KEY = 'firebase_id';\r\nvar ORIGIN_KEY = 'origin';\r\nvar FETCH_TIMEOUT_MILLIS = 60 * 1000;\r\nvar DYNAMIC_CONFIG_URL = 'https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig';\r\nvar GTAG_URL = 'https://www.googletagmanager.com/gtag/js';\r\nvar GtagCommand;\r\n(function (GtagCommand) {\r\n    GtagCommand[\"EVENT\"] = \"event\";\r\n    GtagCommand[\"SET\"] = \"set\";\r\n    GtagCommand[\"CONFIG\"] = \"config\";\r\n})(GtagCommand || (GtagCommand = {}));\r\n/*\r\n * Officially recommended event names for gtag.js\r\n * Any other string is also allowed.\r\n */\r\nvar EventName;\r\n(function (EventName) {\r\n    EventName[\"ADD_SHIPPING_INFO\"] = \"add_shipping_info\";\r\n    EventName[\"ADD_PAYMENT_INFO\"] = \"add_payment_info\";\r\n    EventName[\"ADD_TO_CART\"] = \"add_to_cart\";\r\n    EventName[\"ADD_TO_WISHLIST\"] = \"add_to_wishlist\";\r\n    EventName[\"BEGIN_CHECKOUT\"] = \"begin_checkout\";\r\n    /** @deprecated */\r\n    EventName[\"CHECKOUT_PROGRESS\"] = \"checkout_progress\";\r\n    EventName[\"EXCEPTION\"] = \"exception\";\r\n    EventName[\"GENERATE_LEAD\"] = \"generate_lead\";\r\n    EventName[\"LOGIN\"] = \"login\";\r\n    EventName[\"PAGE_VIEW\"] = \"page_view\";\r\n    EventName[\"PURCHASE\"] = \"purchase\";\r\n    EventName[\"REFUND\"] = \"refund\";\r\n    EventName[\"REMOVE_FROM_CART\"] = \"remove_from_cart\";\r\n    EventName[\"SCREEN_VIEW\"] = \"screen_view\";\r\n    EventName[\"SEARCH\"] = \"search\";\r\n    EventName[\"SELECT_CONTENT\"] = \"select_content\";\r\n    EventName[\"SELECT_ITEM\"] = \"select_item\";\r\n    EventName[\"SELECT_PROMOTION\"] = \"select_promotion\";\r\n    /** @deprecated */\r\n    EventName[\"SET_CHECKOUT_OPTION\"] = \"set_checkout_option\";\r\n    EventName[\"SHARE\"] = \"share\";\r\n    EventName[\"SIGN_UP\"] = \"sign_up\";\r\n    EventName[\"TIMING_COMPLETE\"] = \"timing_complete\";\r\n    EventName[\"VIEW_CART\"] = \"view_cart\";\r\n    EventName[\"VIEW_ITEM\"] = \"view_item\";\r\n    EventName[\"VIEW_ITEM_LIST\"] = \"view_item_list\";\r\n    EventName[\"VIEW_PROMOTION\"] = \"view_promotion\";\r\n    EventName[\"VIEW_SEARCH_RESULTS\"] = \"view_search_results\";\r\n})(EventName || (EventName = {}));\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Logs an analytics event through the Firebase SDK.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param eventName Google Analytics event name, choose from standard list or use a custom string.\r\n * @param eventParams Analytics event parameters.\r\n */\r\nfunction logEvent(gtagFunction, initializationPromise, eventName, eventParams, options) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var measurementId, params;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (!(options && options.global)) return [3 /*break*/, 1];\r\n                    gtagFunction(GtagCommand.EVENT, eventName, eventParams);\r\n                    return [2 /*return*/];\r\n                case 1: return [4 /*yield*/, initializationPromise];\r\n                case 2:\r\n                    measurementId = _a.sent();\r\n                    params = __assign(__assign({}, eventParams), { 'send_to': measurementId });\r\n                    gtagFunction(GtagCommand.EVENT, eventName, params);\r\n                    _a.label = 3;\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Set screen_name parameter for this Google Analytics ID.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param screenName Screen name string to set.\r\n */\r\nfunction setCurrentScreen(gtagFunction, initializationPromise, screenName, options) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var measurementId;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (!(options && options.global)) return [3 /*break*/, 1];\r\n                    gtagFunction(GtagCommand.SET, { 'screen_name': screenName });\r\n                    return [2 /*return*/, Promise.resolve()];\r\n                case 1: return [4 /*yield*/, initializationPromise];\r\n                case 2:\r\n                    measurementId = _a.sent();\r\n                    gtagFunction(GtagCommand.CONFIG, measurementId, {\r\n                        update: true,\r\n                        'screen_name': screenName\r\n                    });\r\n                    _a.label = 3;\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Set user_id parameter for this Google Analytics ID.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param id User ID string to set\r\n */\r\nfunction setUserId(gtagFunction, initializationPromise, id, options) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var measurementId;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (!(options && options.global)) return [3 /*break*/, 1];\r\n                    gtagFunction(GtagCommand.SET, { 'user_id': id });\r\n                    return [2 /*return*/, Promise.resolve()];\r\n                case 1: return [4 /*yield*/, initializationPromise];\r\n                case 2:\r\n                    measurementId = _a.sent();\r\n                    gtagFunction(GtagCommand.CONFIG, measurementId, {\r\n                        update: true,\r\n                        'user_id': id\r\n                    });\r\n                    _a.label = 3;\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Set all other user properties other than user_id and screen_name.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param properties Map of user properties to set\r\n */\r\nfunction setUserProperties(gtagFunction, initializationPromise, properties, options) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var flatProperties, _i, _a, key, measurementId;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    if (!(options && options.global)) return [3 /*break*/, 1];\r\n                    flatProperties = {};\r\n                    for (_i = 0, _a = Object.keys(properties); _i < _a.length; _i++) {\r\n                        key = _a[_i];\r\n                        // use dot notation for merge behavior in gtag.js\r\n                        flatProperties[\"user_properties.\" + key] = properties[key];\r\n                    }\r\n                    gtagFunction(GtagCommand.SET, flatProperties);\r\n                    return [2 /*return*/, Promise.resolve()];\r\n                case 1: return [4 /*yield*/, initializationPromise];\r\n                case 2:\r\n                    measurementId = _b.sent();\r\n                    gtagFunction(GtagCommand.CONFIG, measurementId, {\r\n                        update: true,\r\n                        'user_properties': properties\r\n                    });\r\n                    _b.label = 3;\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Set whether collection is enabled for this ID.\r\n *\r\n * @param enabled If true, collection is enabled for this ID.\r\n */\r\nfunction setAnalyticsCollectionEnabled(initializationPromise, enabled) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var measurementId;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, initializationPromise];\r\n                case 1:\r\n                    measurementId = _a.sent();\r\n                    window[\"ga-disable-\" + measurementId] = !enabled;\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logger = new Logger('@firebase/analytics');\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Inserts gtag script tag into the page to asynchronously download gtag.\r\n * @param dataLayerName Name of datalayer (most often the default, \"_dataLayer\").\r\n */\r\nfunction insertScriptTag(dataLayerName) {\r\n    var script = document.createElement('script');\r\n    // We are not providing an analyticsId in the URL because it would trigger a `page_view`\r\n    // without fid. We will initialize ga-id using gtag (config) command together with fid.\r\n    script.src = GTAG_URL + \"?l=\" + dataLayerName;\r\n    script.async = true;\r\n    document.head.appendChild(script);\r\n}\r\n/**\r\n * Get reference to, or create, global datalayer.\r\n * @param dataLayerName Name of datalayer (most often the default, \"_dataLayer\").\r\n */\r\nfunction getOrCreateDataLayer(dataLayerName) {\r\n    // Check for existing dataLayer and create if needed.\r\n    var dataLayer = [];\r\n    if (Array.isArray(window[dataLayerName])) {\r\n        dataLayer = window[dataLayerName];\r\n    }\r\n    else {\r\n        window[dataLayerName] = dataLayer;\r\n    }\r\n    return dataLayer;\r\n}\r\n/**\r\n * Wrapped gtag logic when gtag is called with 'config' command.\r\n *\r\n * @param gtagCore Basic gtag function that just appends to dataLayer.\r\n * @param initializationPromisesMap Map of appIds to their initialization promises.\r\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\r\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\r\n * @param measurementId GA Measurement ID to set config for.\r\n * @param gtagParams Gtag config params to set.\r\n */\r\nfunction gtagOnConfig(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, measurementId, gtagParams) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var correspondingAppId, dynamicConfigResults, foundConfig, e_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    correspondingAppId = measurementIdToAppId[measurementId];\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 7, , 8]);\r\n                    if (!correspondingAppId) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, initializationPromisesMap[correspondingAppId]];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [3 /*break*/, 6];\r\n                case 3: return [4 /*yield*/, Promise.all(dynamicConfigPromisesList)];\r\n                case 4:\r\n                    dynamicConfigResults = _a.sent();\r\n                    foundConfig = dynamicConfigResults.find(function (config) { return config.measurementId === measurementId; });\r\n                    if (!foundConfig) return [3 /*break*/, 6];\r\n                    return [4 /*yield*/, initializationPromisesMap[foundConfig.appId]];\r\n                case 5:\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: return [3 /*break*/, 8];\r\n                case 7:\r\n                    e_1 = _a.sent();\r\n                    logger.error(e_1);\r\n                    return [3 /*break*/, 8];\r\n                case 8:\r\n                    gtagCore(GtagCommand.CONFIG, measurementId, gtagParams);\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Wrapped gtag logic when gtag is called with 'event' command.\r\n *\r\n * @param gtagCore Basic gtag function that just appends to dataLayer.\r\n * @param initializationPromisesMap Map of appIds to their initialization promises.\r\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\r\n * @param measurementId GA Measurement ID to log event to.\r\n * @param gtagParams Params to log with this event.\r\n */\r\nfunction gtagOnEvent(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementId, gtagParams) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var initializationPromisesToWaitFor, gaSendToList, dynamicConfigResults, _loop_1, _i, gaSendToList_1, sendToId, state_1, e_2;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 4, , 5]);\r\n                    initializationPromisesToWaitFor = [];\r\n                    if (!(gtagParams && gtagParams['send_to'])) return [3 /*break*/, 2];\r\n                    gaSendToList = gtagParams['send_to'];\r\n                    // Make it an array if is isn't, so it can be dealt with the same way.\r\n                    if (!Array.isArray(gaSendToList)) {\r\n                        gaSendToList = [gaSendToList];\r\n                    }\r\n                    return [4 /*yield*/, Promise.all(dynamicConfigPromisesList)];\r\n                case 1:\r\n                    dynamicConfigResults = _a.sent();\r\n                    _loop_1 = function (sendToId) {\r\n                        // Any fetched dynamic measurement ID that matches this 'send_to' ID\r\n                        var foundConfig = dynamicConfigResults.find(function (config) { return config.measurementId === sendToId; });\r\n                        var initializationPromise = foundConfig && initializationPromisesMap[foundConfig.appId];\r\n                        if (initializationPromise) {\r\n                            initializationPromisesToWaitFor.push(initializationPromise);\r\n                        }\r\n                        else {\r\n                            // Found an item in 'send_to' that is not associated\r\n                            // directly with an FID, possibly a group.  Empty this array,\r\n                            // exit the loop early, and let it get populated below.\r\n                            initializationPromisesToWaitFor = [];\r\n                            return \"break\";\r\n                        }\r\n                    };\r\n                    for (_i = 0, gaSendToList_1 = gaSendToList; _i < gaSendToList_1.length; _i++) {\r\n                        sendToId = gaSendToList_1[_i];\r\n                        state_1 = _loop_1(sendToId);\r\n                        if (state_1 === \"break\")\r\n                            break;\r\n                    }\r\n                    _a.label = 2;\r\n                case 2:\r\n                    // This will be unpopulated if there was no 'send_to' field , or\r\n                    // if not all entries in the 'send_to' field could be mapped to\r\n                    // a FID. In these cases, wait on all pending initialization promises.\r\n                    if (initializationPromisesToWaitFor.length === 0) {\r\n                        initializationPromisesToWaitFor = Object.values(initializationPromisesMap);\r\n                    }\r\n                    // Run core gtag function with args after all relevant initialization\r\n                    // promises have been resolved.\r\n                    return [4 /*yield*/, Promise.all(initializationPromisesToWaitFor)];\r\n                case 3:\r\n                    // Run core gtag function with args after all relevant initialization\r\n                    // promises have been resolved.\r\n                    _a.sent();\r\n                    // Workaround for http://b/141370449 - third argument cannot be undefined.\r\n                    gtagCore(GtagCommand.EVENT, measurementId, gtagParams || {});\r\n                    return [3 /*break*/, 5];\r\n                case 4:\r\n                    e_2 = _a.sent();\r\n                    logger.error(e_2);\r\n                    return [3 /*break*/, 5];\r\n                case 5: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Wraps a standard gtag function with extra code to wait for completion of\r\n * relevant initialization promises before sending requests.\r\n *\r\n * @param gtagCore Basic gtag function that just appends to dataLayer.\r\n * @param initializationPromisesMap Map of appIds to their initialization promises.\r\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\r\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\r\n */\r\nfunction wrapGtag(gtagCore, \r\n/**\r\n * Allows wrapped gtag calls to wait on whichever intialization promises are required,\r\n * depending on the contents of the gtag params' `send_to` field, if any.\r\n */\r\ninitializationPromisesMap, \r\n/**\r\n * Wrapped gtag calls sometimes require all dynamic config fetches to have returned\r\n * before determining what initialization promises (which include FIDs) to wait for.\r\n */\r\ndynamicConfigPromisesList, \r\n/**\r\n * Wrapped gtag config calls can narrow down which initialization promise (with FID)\r\n * to wait for if the measurementId is already fetched, by getting the corresponding appId,\r\n * which is the key for the initialization promises map.\r\n */\r\nmeasurementIdToAppId) {\r\n    /**\r\n     * Wrapper around gtag that ensures FID is sent with gtag calls.\r\n     * @param command Gtag command type.\r\n     * @param idOrNameOrParams Measurement ID if command is EVENT/CONFIG, params if command is SET.\r\n     * @param gtagParams Params if event is EVENT/CONFIG.\r\n     */\r\n    function gtagWrapper(command, idOrNameOrParams, gtagParams) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var e_3;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 6, , 7]);\r\n                        if (!(command === GtagCommand.EVENT)) return [3 /*break*/, 2];\r\n                        // If EVENT, second arg must be measurementId.\r\n                        return [4 /*yield*/, gtagOnEvent(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, idOrNameOrParams, gtagParams)];\r\n                    case 1:\r\n                        // If EVENT, second arg must be measurementId.\r\n                        _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 2:\r\n                        if (!(command === GtagCommand.CONFIG)) return [3 /*break*/, 4];\r\n                        // If CONFIG, second arg must be measurementId.\r\n                        return [4 /*yield*/, gtagOnConfig(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, idOrNameOrParams, gtagParams)];\r\n                    case 3:\r\n                        // If CONFIG, second arg must be measurementId.\r\n                        _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        // If SET, second arg must be params.\r\n                        gtagCore(GtagCommand.SET, idOrNameOrParams);\r\n                        _a.label = 5;\r\n                    case 5: return [3 /*break*/, 7];\r\n                    case 6:\r\n                        e_3 = _a.sent();\r\n                        logger.error(e_3);\r\n                        return [3 /*break*/, 7];\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    return gtagWrapper;\r\n}\r\n/**\r\n * Creates global gtag function or wraps existing one if found.\r\n * This wrapped function attaches Firebase instance ID (FID) to gtag 'config' and\r\n * 'event' calls that belong to the GAID associated with this Firebase instance.\r\n *\r\n * @param initializationPromisesMap Map of appIds to their initialization promises.\r\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\r\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\r\n * @param dataLayerName Name of global GA datalayer array.\r\n * @param gtagFunctionName Name of global gtag function (\"gtag\" if not user-specified).\r\n */\r\nfunction wrapOrCreateGtag(initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, dataLayerName, gtagFunctionName) {\r\n    // Create a basic core gtag function\r\n    var gtagCore = function () {\r\n        var _args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            _args[_i] = arguments[_i];\r\n        }\r\n        // Must push IArguments object, not an array.\r\n        window[dataLayerName].push(arguments);\r\n    };\r\n    // Replace it with existing one if found\r\n    if (window[gtagFunctionName] &&\r\n        typeof window[gtagFunctionName] === 'function') {\r\n        // @ts-ignore\r\n        gtagCore = window[gtagFunctionName];\r\n    }\r\n    window[gtagFunctionName] = wrapGtag(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId);\r\n    return {\r\n        gtagCore: gtagCore,\r\n        wrappedGtag: window[gtagFunctionName]\r\n    };\r\n}\r\n/**\r\n * Returns first script tag in DOM matching our gtag url pattern.\r\n */\r\nfunction findGtagScriptOnPage() {\r\n    var scriptTags = window.document.getElementsByTagName('script');\r\n    for (var _i = 0, _a = Object.values(scriptTags); _i < _a.length; _i++) {\r\n        var tag = _a[_i];\r\n        if (tag.src && tag.src.includes(GTAG_URL)) {\r\n            return tag;\r\n        }\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERRORS = (_a = {},\r\n    _a[\"already-exists\" /* ALREADY_EXISTS */] = 'A Firebase Analytics instance with the appId {$id} ' +\r\n        ' already exists. ' +\r\n        'Only one Firebase Analytics instance can be created for each appId.',\r\n    _a[\"already-initialized\" /* ALREADY_INITIALIZED */] = 'Firebase Analytics has already been initialized.' +\r\n        'settings() must be called before initializing any Analytics instance' +\r\n        'or it will have no effect.',\r\n    _a[\"interop-component-reg-failed\" /* INTEROP_COMPONENT_REG_FAILED */] = 'Firebase Analytics Interop Component failed to instantiate: {$reason}',\r\n    _a[\"invalid-analytics-context\" /* INVALID_ANALYTICS_CONTEXT */] = 'Firebase Analytics is not supported in this environment. ' +\r\n        'Wrap initialization of analytics in analytics.isSupported() ' +\r\n        'to prevent initialization in unsupported environments. Details: {$errorInfo}',\r\n    _a[\"indexeddb-unavailable\" /* INDEXEDDB_UNAVAILABLE */] = 'IndexedDB unavailable or restricted in this environment. ' +\r\n        'Wrap initialization of analytics in analytics.isSupported() ' +\r\n        'to prevent initialization in unsupported environments. Details: {$errorInfo}',\r\n    _a[\"fetch-throttle\" /* FETCH_THROTTLE */] = 'The config fetch request timed out while in an exponential backoff state.' +\r\n        ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',\r\n    _a[\"config-fetch-failed\" /* CONFIG_FETCH_FAILED */] = 'Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}',\r\n    _a[\"no-api-key\" /* NO_API_KEY */] = 'The \"apiKey\" field is empty in the local Firebase config. Firebase Analytics requires this field to' +\r\n        'contain a valid API key.',\r\n    _a[\"no-app-id\" /* NO_APP_ID */] = 'The \"appId\" field is empty in the local Firebase config. Firebase Analytics requires this field to' +\r\n        'contain a valid app ID.',\r\n    _a);\r\nvar ERROR_FACTORY = new ErrorFactory('analytics', 'Analytics', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Backoff factor for 503 errors, which we want to be conservative about\r\n * to avoid overloading servers. Each retry interval will be\r\n * BASE_INTERVAL_MILLIS * LONG_RETRY_FACTOR ^ retryCount, so the second one\r\n * will be ~30 seconds (with fuzzing).\r\n */\r\nvar LONG_RETRY_FACTOR = 30;\r\n/**\r\n * Base wait interval to multiplied by backoffFactor^backoffCount.\r\n */\r\nvar BASE_INTERVAL_MILLIS = 1000;\r\n/**\r\n * Stubbable retry data storage class.\r\n */\r\nvar RetryData = /** @class */ (function () {\r\n    function RetryData(throttleMetadata, intervalMillis) {\r\n        if (throttleMetadata === void 0) { throttleMetadata = {}; }\r\n        if (intervalMillis === void 0) { intervalMillis = BASE_INTERVAL_MILLIS; }\r\n        this.throttleMetadata = throttleMetadata;\r\n        this.intervalMillis = intervalMillis;\r\n    }\r\n    RetryData.prototype.getThrottleMetadata = function (appId) {\r\n        return this.throttleMetadata[appId];\r\n    };\r\n    RetryData.prototype.setThrottleMetadata = function (appId, metadata) {\r\n        this.throttleMetadata[appId] = metadata;\r\n    };\r\n    RetryData.prototype.deleteThrottleMetadata = function (appId) {\r\n        delete this.throttleMetadata[appId];\r\n    };\r\n    return RetryData;\r\n}());\r\nvar defaultRetryData = new RetryData();\r\n/**\r\n * Set GET request headers.\r\n * @param apiKey App API key.\r\n */\r\nfunction getHeaders(apiKey) {\r\n    return new Headers({\r\n        Accept: 'application/json',\r\n        'x-goog-api-key': apiKey\r\n    });\r\n}\r\n/**\r\n * Fetches dynamic config from backend.\r\n * @param app Firebase app to fetch config for.\r\n */\r\nfunction fetchDynamicConfig(appFields) {\r\n    var _a;\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var appId, apiKey, request, appUrl, response, errorMessage, jsonResponse, _ignored_1;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    appId = appFields.appId, apiKey = appFields.apiKey;\r\n                    request = {\r\n                        method: 'GET',\r\n                        headers: getHeaders(apiKey)\r\n                    };\r\n                    appUrl = DYNAMIC_CONFIG_URL.replace('{app-id}', appId);\r\n                    return [4 /*yield*/, fetch(appUrl, request)];\r\n                case 1:\r\n                    response = _b.sent();\r\n                    if (!(response.status !== 200 && response.status !== 304)) return [3 /*break*/, 6];\r\n                    errorMessage = '';\r\n                    _b.label = 2;\r\n                case 2:\r\n                    _b.trys.push([2, 4, , 5]);\r\n                    return [4 /*yield*/, response.json()];\r\n                case 3:\r\n                    jsonResponse = (_b.sent());\r\n                    if ((_a = jsonResponse.error) === null || _a === void 0 ? void 0 : _a.message) {\r\n                        errorMessage = jsonResponse.error.message;\r\n                    }\r\n                    return [3 /*break*/, 5];\r\n                case 4:\r\n                    _ignored_1 = _b.sent();\r\n                    return [3 /*break*/, 5];\r\n                case 5: throw ERROR_FACTORY.create(\"config-fetch-failed\" /* CONFIG_FETCH_FAILED */, {\r\n                    httpStatus: response.status,\r\n                    responseMessage: errorMessage\r\n                });\r\n                case 6: return [2 /*return*/, response.json()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Fetches dynamic config from backend, retrying if failed.\r\n * @param app Firebase app to fetch config for.\r\n */\r\nfunction fetchDynamicConfigWithRetry(app, \r\n// retryData and timeoutMillis are parameterized to allow passing a different value for testing.\r\nretryData, timeoutMillis) {\r\n    if (retryData === void 0) { retryData = defaultRetryData; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var _a, appId, apiKey, measurementId, throttleMetadata, signal;\r\n        var _this = this;\r\n        return __generator(this, function (_b) {\r\n            _a = app.options, appId = _a.appId, apiKey = _a.apiKey, measurementId = _a.measurementId;\r\n            if (!appId) {\r\n                throw ERROR_FACTORY.create(\"no-app-id\" /* NO_APP_ID */);\r\n            }\r\n            if (!apiKey) {\r\n                if (measurementId) {\r\n                    return [2 /*return*/, {\r\n                            measurementId: measurementId,\r\n                            appId: appId\r\n                        }];\r\n                }\r\n                throw ERROR_FACTORY.create(\"no-api-key\" /* NO_API_KEY */);\r\n            }\r\n            throttleMetadata = retryData.getThrottleMetadata(appId) || {\r\n                backoffCount: 0,\r\n                throttleEndTimeMillis: Date.now()\r\n            };\r\n            signal = new AnalyticsAbortSignal();\r\n            setTimeout(function () { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\r\n                    signal.abort();\r\n                    return [2 /*return*/];\r\n                });\r\n            }); }, timeoutMillis !== undefined ? timeoutMillis : FETCH_TIMEOUT_MILLIS);\r\n            return [2 /*return*/, attemptFetchDynamicConfigWithRetry({ appId: appId, apiKey: apiKey, measurementId: measurementId }, throttleMetadata, signal, retryData)];\r\n        });\r\n    });\r\n}\r\n/**\r\n * Runs one retry attempt.\r\n * @param appFields Necessary app config fields.\r\n * @param throttleMetadata Ongoing metadata to determine throttling times.\r\n * @param signal Abort signal.\r\n */\r\nfunction attemptFetchDynamicConfigWithRetry(appFields, _a, signal, retryData // for testing\r\n) {\r\n    var throttleEndTimeMillis = _a.throttleEndTimeMillis, backoffCount = _a.backoffCount;\r\n    if (retryData === void 0) { retryData = defaultRetryData; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var appId, measurementId, e_1, response, e_2, backoffMillis, throttleMetadata;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    appId = appFields.appId, measurementId = appFields.measurementId;\r\n                    _b.label = 1;\r\n                case 1:\r\n                    _b.trys.push([1, 3, , 4]);\r\n                    return [4 /*yield*/, setAbortableTimeout(signal, throttleEndTimeMillis)];\r\n                case 2:\r\n                    _b.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    e_1 = _b.sent();\r\n                    if (measurementId) {\r\n                        logger.warn(\"Timed out fetching this Firebase app's measurement ID from the server.\" +\r\n                            (\" Falling back to the measurement ID \" + measurementId) +\r\n                            (\" provided in the \\\"measurementId\\\" field in the local Firebase config. [\" + e_1.message + \"]\"));\r\n                        return [2 /*return*/, { appId: appId, measurementId: measurementId }];\r\n                    }\r\n                    throw e_1;\r\n                case 4:\r\n                    _b.trys.push([4, 6, , 7]);\r\n                    return [4 /*yield*/, fetchDynamicConfig(appFields)];\r\n                case 5:\r\n                    response = _b.sent();\r\n                    // Note the SDK only clears throttle state if response is success or non-retriable.\r\n                    retryData.deleteThrottleMetadata(appId);\r\n                    return [2 /*return*/, response];\r\n                case 6:\r\n                    e_2 = _b.sent();\r\n                    if (!isRetriableError(e_2)) {\r\n                        retryData.deleteThrottleMetadata(appId);\r\n                        if (measurementId) {\r\n                            logger.warn(\"Failed to fetch this Firebase app's measurement ID from the server.\" +\r\n                                (\" Falling back to the measurement ID \" + measurementId) +\r\n                                (\" provided in the \\\"measurementId\\\" field in the local Firebase config. [\" + e_2.message + \"]\"));\r\n                            return [2 /*return*/, { appId: appId, measurementId: measurementId }];\r\n                        }\r\n                        else {\r\n                            throw e_2;\r\n                        }\r\n                    }\r\n                    backoffMillis = Number(e_2.customData.httpStatus) === 503\r\n                        ? calculateBackoffMillis(backoffCount, retryData.intervalMillis, LONG_RETRY_FACTOR)\r\n                        : calculateBackoffMillis(backoffCount, retryData.intervalMillis);\r\n                    throttleMetadata = {\r\n                        throttleEndTimeMillis: Date.now() + backoffMillis,\r\n                        backoffCount: backoffCount + 1\r\n                    };\r\n                    // Persists state.\r\n                    retryData.setThrottleMetadata(appId, throttleMetadata);\r\n                    logger.debug(\"Calling attemptFetch again in \" + backoffMillis + \" millis\");\r\n                    return [2 /*return*/, attemptFetchDynamicConfigWithRetry(appFields, throttleMetadata, signal, retryData)];\r\n                case 7: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Supports waiting on a backoff by:\r\n *\r\n * <ul>\r\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\r\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\r\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\r\n *       request appear the same.</li>\r\n * </ul>\r\n *\r\n * <p>Visible for testing.\r\n */\r\nfunction setAbortableTimeout(signal, throttleEndTimeMillis) {\r\n    return new Promise(function (resolve, reject) {\r\n        // Derives backoff from given end time, normalizing negative numbers to zero.\r\n        var backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\r\n        var timeout = setTimeout(resolve, backoffMillis);\r\n        // Adds listener, rather than sets onabort, because signal is a shared object.\r\n        signal.addEventListener(function () {\r\n            clearTimeout(timeout);\r\n            // If the request completes before this timeout, the rejection has no effect.\r\n            reject(ERROR_FACTORY.create(\"fetch-throttle\" /* FETCH_THROTTLE */, {\r\n                throttleEndTimeMillis: throttleEndTimeMillis\r\n            }));\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\r\n */\r\nfunction isRetriableError(e) {\r\n    if (!(e instanceof FirebaseError) || !e.customData) {\r\n        return false;\r\n    }\r\n    // Uses string index defined by ErrorData, which FirebaseError implements.\r\n    var httpStatus = Number(e.customData['httpStatus']);\r\n    return (httpStatus === 429 ||\r\n        httpStatus === 500 ||\r\n        httpStatus === 503 ||\r\n        httpStatus === 504);\r\n}\r\n/**\r\n * Shims a minimal AbortSignal (copied from Remote Config).\r\n *\r\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\r\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\r\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\r\n * swapped out if/when we do.\r\n */\r\nvar AnalyticsAbortSignal = /** @class */ (function () {\r\n    function AnalyticsAbortSignal() {\r\n        this.listeners = [];\r\n    }\r\n    AnalyticsAbortSignal.prototype.addEventListener = function (listener) {\r\n        this.listeners.push(listener);\r\n    };\r\n    AnalyticsAbortSignal.prototype.abort = function () {\r\n        this.listeners.forEach(function (listener) { return listener(); });\r\n    };\r\n    return AnalyticsAbortSignal;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction validateIndexedDB() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var e_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (!!isIndexedDBAvailable()) return [3 /*break*/, 1];\r\n                    logger.warn(ERROR_FACTORY.create(\"indexeddb-unavailable\" /* INDEXEDDB_UNAVAILABLE */, {\r\n                        errorInfo: 'IndexedDB is not available in this environment.'\r\n                    }).message);\r\n                    return [2 /*return*/, false];\r\n                case 1:\r\n                    _a.trys.push([1, 3, , 4]);\r\n                    return [4 /*yield*/, validateIndexedDBOpenable()];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    e_1 = _a.sent();\r\n                    logger.warn(ERROR_FACTORY.create(\"indexeddb-unavailable\" /* INDEXEDDB_UNAVAILABLE */, {\r\n                        errorInfo: e_1\r\n                    }).message);\r\n                    return [2 /*return*/, false];\r\n                case 4: return [2 /*return*/, true];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Initialize the analytics instance in gtag.js by calling config command with fid.\r\n *\r\n * NOTE: We combine analytics initialization and setting fid together because we want fid to be\r\n * part of the `page_view` event that's sent during the initialization\r\n * @param app Firebase app\r\n * @param gtagCore The gtag function that's not wrapped.\r\n * @param dynamicConfigPromisesList Array of all dynamic config promises.\r\n * @param measurementIdToAppId Maps measurementID to appID.\r\n * @param installations FirebaseInstallations instance.\r\n *\r\n * @returns Measurement ID.\r\n */\r\nfunction initializeIds(app, dynamicConfigPromisesList, measurementIdToAppId, installations, gtagCore) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var dynamicConfigPromise, fidPromise, _a, dynamicConfig, fid, configProperties;\r\n        var _b;\r\n        return __generator(this, function (_c) {\r\n            switch (_c.label) {\r\n                case 0:\r\n                    dynamicConfigPromise = fetchDynamicConfigWithRetry(app);\r\n                    // Once fetched, map measurementIds to appId, for ease of lookup in wrapped gtag function.\r\n                    dynamicConfigPromise\r\n                        .then(function (config) {\r\n                        measurementIdToAppId[config.measurementId] = config.appId;\r\n                        if (app.options.measurementId &&\r\n                            config.measurementId !== app.options.measurementId) {\r\n                            logger.warn(\"The measurement ID in the local Firebase config (\" + app.options.measurementId + \")\" +\r\n                                (\" does not match the measurement ID fetched from the server (\" + config.measurementId + \").\") +\r\n                                \" To ensure analytics events are always sent to the correct Analytics property,\" +\r\n                                \" update the\" +\r\n                                \" measurement ID field in the local config or remove it from the local config.\");\r\n                        }\r\n                    })\r\n                        .catch(function (e) { return logger.error(e); });\r\n                    // Add to list to track state of all dynamic config promises.\r\n                    dynamicConfigPromisesList.push(dynamicConfigPromise);\r\n                    fidPromise = validateIndexedDB().then(function (envIsValid) {\r\n                        if (envIsValid) {\r\n                            return installations.getId();\r\n                        }\r\n                        else {\r\n                            return undefined;\r\n                        }\r\n                    });\r\n                    return [4 /*yield*/, Promise.all([\r\n                            dynamicConfigPromise,\r\n                            fidPromise\r\n                        ])];\r\n                case 1:\r\n                    _a = _c.sent(), dynamicConfig = _a[0], fid = _a[1];\r\n                    // This command initializes gtag.js and only needs to be called once for the entire web app,\r\n                    // but since it is idempotent, we can call it multiple times.\r\n                    // We keep it together with other initialization logic for better code structure.\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    gtagCore('js', new Date());\r\n                    configProperties = (_b = {},\r\n                        // guard against developers accidentally setting properties with prefix `firebase_`\r\n                        _b[ORIGIN_KEY] = 'firebase',\r\n                        _b.update = true,\r\n                        _b);\r\n                    if (fid != null) {\r\n                        configProperties[GA_FID_KEY] = fid;\r\n                    }\r\n                    // It should be the first config command called on this GA-ID\r\n                    // Initialize this GA-ID and set FID on it using the gtag config API.\r\n                    gtagCore(GtagCommand.CONFIG, dynamicConfig.measurementId, configProperties);\r\n                    return [2 /*return*/, dynamicConfig.measurementId];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Maps appId to full initialization promise. Wrapped gtag calls must wait on\r\n * all or some of these, depending on the call's `send_to` param and the status\r\n * of the dynamic config fetches (see below).\r\n */\r\nvar initializationPromisesMap = {};\r\n/**\r\n * List of dynamic config fetch promises. In certain cases, wrapped gtag calls\r\n * wait on all these to be complete in order to determine if it can selectively\r\n * wait for only certain initialization (FID) promises or if it must wait for all.\r\n */\r\nvar dynamicConfigPromisesList = [];\r\n/**\r\n * Maps fetched measurementIds to appId. Populated when the app's dynamic config\r\n * fetch completes. If already populated, gtag config calls can use this to\r\n * selectively wait for only this app's initialization promise (FID) instead of all\r\n * initialization promises.\r\n */\r\nvar measurementIdToAppId = {};\r\n/**\r\n * Name for window global data layer array used by GA: defaults to 'dataLayer'.\r\n */\r\nvar dataLayerName = 'dataLayer';\r\n/**\r\n * Name for window global gtag function used by GA: defaults to 'gtag'.\r\n */\r\nvar gtagName = 'gtag';\r\n/**\r\n * Reproduction of standard gtag function or reference to existing\r\n * gtag function on window object.\r\n */\r\nvar gtagCoreFunction;\r\n/**\r\n * Wrapper around gtag function that ensures FID is sent with all\r\n * relevant event and config calls.\r\n */\r\nvar wrappedGtagFunction;\r\n/**\r\n * Flag to ensure page initialization steps (creation or wrapping of\r\n * dataLayer and gtag script) are only run once per page load.\r\n */\r\nvar globalInitDone = false;\r\n/**\r\n * For testing\r\n */\r\nfunction resetGlobalVars(newGlobalInitDone, newInitializationPromisesMap, newDynamicPromises) {\r\n    if (newGlobalInitDone === void 0) { newGlobalInitDone = false; }\r\n    if (newInitializationPromisesMap === void 0) { newInitializationPromisesMap = {}; }\r\n    if (newDynamicPromises === void 0) { newDynamicPromises = []; }\r\n    globalInitDone = newGlobalInitDone;\r\n    initializationPromisesMap = newInitializationPromisesMap;\r\n    dynamicConfigPromisesList = newDynamicPromises;\r\n    dataLayerName = 'dataLayer';\r\n    gtagName = 'gtag';\r\n}\r\n/**\r\n * For testing\r\n */\r\nfunction getGlobalVars() {\r\n    return {\r\n        initializationPromisesMap: initializationPromisesMap,\r\n        dynamicConfigPromisesList: dynamicConfigPromisesList\r\n    };\r\n}\r\n/**\r\n * This must be run before calling firebase.analytics() or it won't\r\n * have any effect.\r\n * @param options Custom gtag and dataLayer names.\r\n */\r\nfunction settings(options) {\r\n    if (globalInitDone) {\r\n        throw ERROR_FACTORY.create(\"already-initialized\" /* ALREADY_INITIALIZED */);\r\n    }\r\n    if (options.dataLayerName) {\r\n        dataLayerName = options.dataLayerName;\r\n    }\r\n    if (options.gtagName) {\r\n        gtagName = options.gtagName;\r\n    }\r\n}\r\n/**\r\n * Returns true if no environment mismatch is found.\r\n * If environment mismatches are found, throws an INVALID_ANALYTICS_CONTEXT\r\n * error that also lists details for each mismatch found.\r\n */\r\nfunction warnOnBrowserContextMismatch() {\r\n    var mismatchedEnvMessages = [];\r\n    if (isBrowserExtension()) {\r\n        mismatchedEnvMessages.push('This is a browser extension environment.');\r\n    }\r\n    if (!areCookiesEnabled()) {\r\n        mismatchedEnvMessages.push('Cookies are not available.');\r\n    }\r\n    if (mismatchedEnvMessages.length > 0) {\r\n        var details = mismatchedEnvMessages\r\n            .map(function (message, index) { return \"(\" + (index + 1) + \") \" + message; })\r\n            .join(' ');\r\n        var err = ERROR_FACTORY.create(\"invalid-analytics-context\" /* INVALID_ANALYTICS_CONTEXT */, {\r\n            errorInfo: details\r\n        });\r\n        logger.warn(err.message);\r\n    }\r\n}\r\nfunction factory(app, installations) {\r\n    warnOnBrowserContextMismatch();\r\n    var appId = app.options.appId;\r\n    if (!appId) {\r\n        throw ERROR_FACTORY.create(\"no-app-id\" /* NO_APP_ID */);\r\n    }\r\n    if (!app.options.apiKey) {\r\n        if (app.options.measurementId) {\r\n            logger.warn(\"The \\\"apiKey\\\" field is empty in the local Firebase config. This is needed to fetch the latest\" +\r\n                (\" measurement ID for this Firebase app. Falling back to the measurement ID \" + app.options.measurementId) +\r\n                \" provided in the \\\"measurementId\\\" field in the local Firebase config.\");\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"no-api-key\" /* NO_API_KEY */);\r\n        }\r\n    }\r\n    if (initializationPromisesMap[appId] != null) {\r\n        throw ERROR_FACTORY.create(\"already-exists\" /* ALREADY_EXISTS */, {\r\n            id: appId\r\n        });\r\n    }\r\n    if (!globalInitDone) {\r\n        // Steps here should only be done once per page: creation or wrapping\r\n        // of dataLayer and global gtag function.\r\n        // Detect if user has already put the gtag <script> tag on this page.\r\n        if (!findGtagScriptOnPage()) {\r\n            insertScriptTag(dataLayerName);\r\n        }\r\n        getOrCreateDataLayer(dataLayerName);\r\n        var _a = wrapOrCreateGtag(initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, dataLayerName, gtagName), wrappedGtag = _a.wrappedGtag, gtagCore = _a.gtagCore;\r\n        wrappedGtagFunction = wrappedGtag;\r\n        gtagCoreFunction = gtagCore;\r\n        globalInitDone = true;\r\n    }\r\n    // Async but non-blocking.\r\n    // This map reflects the completion state of all promises for each appId.\r\n    initializationPromisesMap[appId] = initializeIds(app, dynamicConfigPromisesList, measurementIdToAppId, installations, gtagCoreFunction);\r\n    var analyticsInstance = {\r\n        app: app,\r\n        // Public methods return void for API simplicity and to better match gtag,\r\n        // while internal implementations return promises.\r\n        logEvent: function (eventName, eventParams, options) {\r\n            logEvent(wrappedGtagFunction, initializationPromisesMap[appId], eventName, eventParams, options).catch(function (e) { return logger.error(e); });\r\n        },\r\n        setCurrentScreen: function (screenName, options) {\r\n            setCurrentScreen(wrappedGtagFunction, initializationPromisesMap[appId], screenName, options).catch(function (e) { return logger.error(e); });\r\n        },\r\n        setUserId: function (id, options) {\r\n            setUserId(wrappedGtagFunction, initializationPromisesMap[appId], id, options).catch(function (e) { return logger.error(e); });\r\n        },\r\n        setUserProperties: function (properties, options) {\r\n            setUserProperties(wrappedGtagFunction, initializationPromisesMap[appId], properties, options).catch(function (e) { return logger.error(e); });\r\n        },\r\n        setAnalyticsCollectionEnabled: function (enabled) {\r\n            setAnalyticsCollectionEnabled(initializationPromisesMap[appId], enabled).catch(function (e) { return logger.error(e); });\r\n        },\r\n        INTERNAL: {\r\n            delete: function () {\r\n                delete initializationPromisesMap[appId];\r\n                return Promise.resolve();\r\n            }\r\n        }\r\n    };\r\n    return analyticsInstance;\r\n}\n\nvar name = \"@firebase/analytics\";\nvar version = \"0.6.2\";\n\n/**\r\n * Type constant for Firebase Analytics.\r\n */\r\nvar ANALYTICS_TYPE = 'analytics';\r\nfunction registerAnalytics(instance) {\r\n    instance.INTERNAL.registerComponent(new Component(ANALYTICS_TYPE, function (container) {\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var installations = container\r\n            .getProvider('installations')\r\n            .getImmediate();\r\n        return factory(app, installations);\r\n    }, \"PUBLIC\" /* PUBLIC */).setServiceProps({\r\n        settings: settings,\r\n        EventName: EventName,\r\n        isSupported: isSupported\r\n    }));\r\n    instance.INTERNAL.registerComponent(new Component('analytics-internal', internalFactory, \"PRIVATE\" /* PRIVATE */));\r\n    instance.registerVersion(name, version);\r\n    function internalFactory(container) {\r\n        try {\r\n            var analytics = container.getProvider(ANALYTICS_TYPE).getImmediate();\r\n            return {\r\n                logEvent: analytics.logEvent\r\n            };\r\n        }\r\n        catch (e) {\r\n            throw ERROR_FACTORY.create(\"interop-component-reg-failed\" /* INTEROP_COMPONENT_REG_FAILED */, {\r\n                reason: e\r\n            });\r\n        }\r\n    }\r\n}\r\nregisterAnalytics(firebase);\r\n/**\r\n * this is a public static method provided to users that wraps four different checks:\r\n *\r\n * 1. check if it's not a browser extension environment.\r\n * 1. check if cookie is enabled in current browser.\r\n * 3. check if IndexedDB is supported by the browser environment.\r\n * 4. check if the current browser context is valid for using IndexedDB.\r\n *\r\n */\r\nfunction isSupported() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var isDBOpenable, error_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (isBrowserExtension()) {\r\n                        return [2 /*return*/, false];\r\n                    }\r\n                    if (!areCookiesEnabled()) {\r\n                        return [2 /*return*/, false];\r\n                    }\r\n                    if (!isIndexedDBAvailable()) {\r\n                        return [2 /*return*/, false];\r\n                    }\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 3, , 4]);\r\n                    return [4 /*yield*/, validateIndexedDBOpenable()];\r\n                case 2:\r\n                    isDBOpenable = _a.sent();\r\n                    return [2 /*return*/, isDBOpenable];\r\n                case 3:\r\n                    error_1 = _a.sent();\r\n                    return [2 /*return*/, false];\r\n                case 4: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\n\nexport { factory, getGlobalVars, registerAnalytics, resetGlobalVars, settings };\n//# sourceMappingURL=index.esm.js.map\n","import '@firebase/firestore';\n//# sourceMappingURL=index.esm.js.map\n","import { Injectable } from '@angular/core';\nimport firebase from 'firebase';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoffeePreferenceService {\n  collectionName = 'userPreferences';\n  userCollectionName = 'Preferences';\n\n  constructor\n  (\n    private fire: AngularFirestore,\n    private auth: AngularFireAuth,\n    public http: HttpClient\n  ) {}\n\n  // Create a new calculation preference in the specified collection\n  createPreference(preference) {\n    console.log(firebase.auth().currentUser);\n    let currentUser = firebase.auth().currentUser;\n    return this.fire.collection(this.collectionName).doc(currentUser.uid).collection(this.userCollectionName).add(preference);\n  }\n\n  // Call `snapshotChanges()` method to read records and subscribe for updates\n  readPreferences() {\n    let currentUser = firebase.auth().currentUser;\n    return this.fire.collection(this.collectionName).doc(currentUser.uid).collection(this.userCollectionName).snapshotChanges();\n  }\n\n  // Method utilising `doc()` to take collection name and document ID to update preference\n  updatePreferences(preferenceID, preference) {\n    let currentUser = firebase.auth().currentUser;\n    this.fire.doc(this.collectionName + '/' + currentUser.uid + '/' + this.userCollectionName + '/' + preferenceID).update(preference);\n  }\n\n  // Method to delete a preference\n  deletePreference(preferenceID) {\n    let currentUser = firebase.auth().currentUser;\n    this.fire.doc(this.collectionName + '/' + currentUser.uid + '/' + this.userCollectionName + '/' + preferenceID).delete();\n  }\n\n  // Method to get temperature of coffee type\n  getCoffeeTemp(coffeeType: string) {\n    // Define coffee types and corresponding temperatures\n    const coffeeData =\n    [\n      {\"name\": 'Long Black', \"temperature\": '80'},\n      {\"name\": 'Flat White', \"temperature\": '65'},\n      {\"name\": 'Latte', \"temperature\": '60'},\n      {\"name\": 'Cappuccino', \"temperature\": '70'},\n    ];\n    const defaultTemp = 80; // Degrees Celsius\n\n    // Switch case depending on 'coffeeType'\n    switch (coffeeType) {\n      case coffeeData[0].name: // Long Black\n        return coffeeData[0].temperature;\n\n      case coffeeData[1].name: // Flat White\n        return coffeeData[1].temperature;\n\n      case coffeeData[2].name: // Latte\n        return coffeeData[2].temperature;\n\n      case coffeeData[3].name: // Cappuccino\n        return coffeeData[3].temperature;\n\n      default:\n        return defaultTemp;\n    }\n  }\n\n  // Method to approximate coffee temperature via modified Euler methodology\n  modifiedEuler(cityTemp: string, coffeeTemp) {\n    // Initialise known params\n    var timeStart = 0; // Minutes\n    var timeEnd = 40; // Minutes\n    var steps = timeEnd * 60; // Calculate total steps\n    var k = 0.1 // Positive constant for equation\n    var undrinkable = 40; // Temperature for when a coffee's flavour palette changes\n    let stepSize = (timeEnd - timeStart) / steps; // Calculate step-size\n    var timeArray = new Array(steps);\n    var tempArray = new Array(timeArray.length);\n    var minutesTotal = 0;\n\n    // Populate first position of both arrays with corresponding values\n    timeArray[0] = timeStart;\n    tempArray[0] = coffeeTemp;\n\n    // Fill 'timeArray' with time incrementing by step size\n    for (var i = 1; i < timeArray.length; i++) {\n      timeArray[i] = parseFloat(timeArray[i - 1] + stepSize);\n    }\n\n    // Approximate the coffee temperature at each corresponding point in 'timeArray'\n    for (var j = 0; j < tempArray.length - 1; j++) {\n      var k1 = stepSize * ((k * -1) * (parseFloat(tempArray[j]) - parseFloat(cityTemp)));\n      var k2 = stepSize * ((k * -1) * (parseFloat(tempArray[j]) + k1 - parseFloat(cityTemp)));\n      tempArray[j + 1] = parseFloat(tempArray[j]) + 1/2 * (k1 + k2);\n    }\n\n    // Perform iterations via for loop to calculate the time taken for the coffee\n    // to become \"undrinkable\".\n    for (var k = 0; k < tempArray.length; k++) {\n      let temperature = tempArray[k];\n      if (temperature < undrinkable) {\n          minutesTotal = timeArray[k];\n          break;\n      }\n    }\n\n    return minutesTotal * 60; // Return time until coffee is cold in seconds\n  }\n\n  // Method to convert seconds to minutes & seconds\n  convertTime(second) {\n    var minutes = Math.floor(second / 60);\n    var seconds = second - minutes * 60;\n    return [minutes, seconds];\n  }\n\n  /*\n  async getLocalData(fileName: string) {\n    var data;\n    await fetch(`../../assets/data/${fileName}`).then(res => res.json())\n    .then(json => {\n      data = json;\n    });\n    return data;\n  }\n\n  async getCountryCode(countryName: string) {\n    const data = await this.getLocalData('countryCodes.json'); // Fetch country data\n    let countryCode = \"\";\n\n    // Search data until a match for country name to country code is found\n    while (countryCode === \"\") {\n      for (let i = 0; i < Object.keys(data).length; i++) {\n        if (data[i].Name === countryName) {\n          countryCode = data[i].Code;\n          break; // End the search\n        }\n      }\n    }\n\n    console.log(countryCode); // Temporary for debugging\n    return countryCode;\n  }\n\n  async getCities(countryCode: string) {\n    const data = await this.getLocalData('city.list.json'); // Fetch city data\n    let cities = \"\";\n\n    for (let j = 0; j < data.length; j++) {\n      if (countryCode === data[j].country) {\n        cities += data[j].name + ' ';\n      }\n    }\n    let cityList = cities.split(' ');\n    return cityList;\n  }\n\n  // Method to create an array containing city names corresponding to selected country\n  getCities(countryCode: string) {\n    // Fetch city data array\n    const data = this.getLocalData('cities');\n    let cities = \"\";\n\n    // Search data until all cities corresponding to 'countryCode' have been found\n    for (let j = 0; j < Object.keys(data).length; j++) {\n      if (countryCode === data[j].country) {\n        cities += data[j].name + ' ';\n      }\n    }\n\n    // The following two lines are temporary for debugging\n    let cityList = cities.split(' ');\n    console.log(cityList);\n    return cityList; // TODO: replace with `return cities.split(' ');`\n  }\n\n  // Method to get city ID from local data\n  getCityId(cityName: string, countryCode: string) {\n    const data = this.getLocalData('cities');\n\n    // Search data until relevant city ID is found\n    for (let k = 0; k < Object.keys(data).length; k++) {\n      if (cityName === data[k].name && countryCode === data[k].country) {\n        console.log(data[k].id); // Temporary for debugging\n        return data[k].id;\n      }\n    }\n  }*/\n}\n","import { InjectionToken, Injectable, Inject, Optional, PLATFORM_ID, NgZone, ɵɵdefineInjectable, ɵɵinject, NgModule } from '@angular/core';\nimport { asyncScheduler, Observable, from, of } from 'rxjs';\nimport { startWith, pairwise, map, scan, distinctUntilChanged, filter, observeOn } from 'rxjs/operators';\nimport { ɵAngularFireSchedulers, ɵkeepUnstableUntilFirstFactory, ɵfirebaseAppFactory, ɵlogAuthEmulatorError, ɵfetchInstance, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire';\nimport { isPlatformServer } from '@angular/common';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { USE_EMULATOR as USE_EMULATOR$1 } from '@angular/fire/auth';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: observable/fromRef.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T, R\n * @param {?} ref\n * @param {?=} scheduler\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction _fromRef(ref, scheduler = asyncScheduler) {\n    return new Observable((/**\n     * @param {?} subscriber\n     * @return {?}\n     */\n    subscriber => {\n        /** @type {?} */\n        let unsubscribe;\n        if (scheduler != null) {\n            scheduler.schedule((/**\n             * @return {?}\n             */\n            () => {\n                unsubscribe = ref.onSnapshot({ includeMetadataChanges: true }, subscriber);\n            }));\n        }\n        else {\n            unsubscribe = ref.onSnapshot({ includeMetadataChanges: true }, subscriber);\n        }\n        return (/**\n         * @return {?}\n         */\n        () => {\n            if (unsubscribe != null) {\n                unsubscribe();\n            }\n        });\n    }));\n}\n/**\n * @template R, T\n * @param {?} ref\n * @param {?=} scheduler\n * @return {?}\n */\nfunction fromRef(ref, scheduler) {\n    return _fromRef(ref, scheduler);\n}\n/**\n * @template T\n * @param {?} ref\n * @param {?=} scheduler\n * @return {?}\n */\nfunction fromDocRef(ref, scheduler) {\n    return fromRef(ref, scheduler)\n        .pipe(startWith(undefined), pairwise(), map((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ([priorPayload, payload]) => {\n        if (!payload.exists) {\n            return { payload, type: 'removed' };\n        }\n        if (!(priorPayload === null || priorPayload === void 0 ? void 0 : priorPayload.exists)) {\n            return { payload, type: 'added' };\n        }\n        return { payload, type: 'modified' };\n    })));\n}\n/**\n * @template T\n * @param {?} ref\n * @param {?=} scheduler\n * @return {?}\n */\nfunction fromCollectionRef(ref, scheduler) {\n    return fromRef(ref, scheduler).pipe(map((/**\n     * @param {?} payload\n     * @return {?}\n     */\n    payload => ({ payload, type: 'query' }))));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: collection/changes.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Return a stream of document changes on a query. These results are not in sort order but in\n * order of occurence.\n * @template T\n * @param {?} query\n * @param {?=} scheduler\n * @return {?}\n */\nfunction docChanges(query, scheduler) {\n    return fromCollectionRef(query, scheduler)\n        .pipe(startWith(undefined), pairwise(), map((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ([priorAction, action]) => {\n        /** @type {?} */\n        const docChanges = action.payload.docChanges();\n        /** @type {?} */\n        const actions = docChanges.map((/**\n         * @param {?} change\n         * @return {?}\n         */\n        change => ({ type: change.type, payload: change })));\n        // the metadata has changed from the prior emission\n        if (priorAction && JSON.stringify(priorAction.payload.metadata) !== JSON.stringify(action.payload.metadata)) {\n            // go through all the docs in payload and figure out which ones changed\n            action.payload.docs.forEach((/**\n             * @param {?} currentDoc\n             * @param {?} currentIndex\n             * @return {?}\n             */\n            (currentDoc, currentIndex) => {\n                /** @type {?} */\n                const docChange = docChanges.find((/**\n                 * @param {?} d\n                 * @return {?}\n                 */\n                d => d.doc.ref.isEqual(currentDoc.ref)));\n                /** @type {?} */\n                const priorDoc = priorAction === null || priorAction === void 0 ? void 0 : priorAction.payload.docs.find((/**\n                 * @param {?} d\n                 * @return {?}\n                 */\n                d => d.ref.isEqual(currentDoc.ref)));\n                if (docChange && JSON.stringify(docChange.doc.metadata) === JSON.stringify(currentDoc.metadata) ||\n                    !docChange && priorDoc && JSON.stringify(priorDoc.metadata) === JSON.stringify(currentDoc.metadata)) {\n                    // document doesn't appear to have changed, don't log another action\n                }\n                else {\n                    // since the actions are processed in order just push onto the array\n                    actions.push({\n                        type: 'modified',\n                        payload: {\n                            oldIndex: currentIndex,\n                            newIndex: currentIndex,\n                            type: 'modified',\n                            doc: currentDoc\n                        }\n                    });\n                }\n            }));\n        }\n        return (/** @type {?} */ (actions));\n    })));\n}\n/**\n * Return a stream of document changes on a query. These results are in sort order.\n * @template T\n * @param {?} query\n * @param {?} events\n * @param {?=} scheduler\n * @return {?}\n */\nfunction sortedChanges(query, events, scheduler) {\n    return docChanges(query, scheduler)\n        .pipe(scan((/**\n     * @param {?} current\n     * @param {?} changes\n     * @return {?}\n     */\n    (current, changes) => combineChanges(current, changes.map((/**\n     * @param {?} it\n     * @return {?}\n     */\n    it => it.payload)), events)), []), distinctUntilChanged(), // cut down on unneed change cycles\n    map((/**\n     * @param {?} changes\n     * @return {?}\n     */\n    changes => changes.map((/**\n     * @param {?} c\n     * @return {?}\n     */\n    c => ((/** @type {?} */ ({ type: c.type, payload: c }))))))));\n}\n/**\n * Combines the total result set from the current set of changes from an incoming set\n * of changes.\n * @template T\n * @param {?} current\n * @param {?} changes\n * @param {?} events\n * @return {?}\n */\nfunction combineChanges(current, changes, events) {\n    changes.forEach((/**\n     * @param {?} change\n     * @return {?}\n     */\n    change => {\n        // skip unwanted change types\n        if (events.indexOf(change.type) > -1) {\n            current = combineChange(current, change);\n        }\n    }));\n    return current;\n}\n/**\n * Splice arguments on top of a sliced array, to break top-level ===\n * this is useful for change-detection\n * @template T\n * @param {?} original\n * @param {?} start\n * @param {?} deleteCount\n * @param {...?} args\n * @return {?}\n */\nfunction sliceAndSplice(original, start, deleteCount, ...args) {\n    /** @type {?} */\n    const returnArray = original.slice();\n    returnArray.splice(start, deleteCount, ...args);\n    return returnArray;\n}\n/**\n * Creates a new sorted array from a new change.\n * Build our own because we allow filtering of action types ('added', 'removed', 'modified') before scanning\n * and so we have greater control over change detection (by breaking ===)\n * @template T\n * @param {?} combined\n * @param {?} change\n * @return {?}\n */\nfunction combineChange(combined, change) {\n    switch (change.type) {\n        case 'added':\n            if (combined[change.newIndex] && combined[change.newIndex].doc.ref.isEqual(change.doc.ref)) {\n                // Not sure why the duplicates are getting fired\n            }\n            else {\n                return sliceAndSplice(combined, change.newIndex, 0, change);\n            }\n            break;\n        case 'modified':\n            if (combined[change.oldIndex] == null || combined[change.oldIndex].doc.ref.isEqual(change.doc.ref)) {\n                // When an item changes position we first remove it\n                // and then add it's new position\n                if (change.oldIndex !== change.newIndex) {\n                    /** @type {?} */\n                    const copiedArray = combined.slice();\n                    copiedArray.splice(change.oldIndex, 1);\n                    copiedArray.splice(change.newIndex, 0, change);\n                    return copiedArray;\n                }\n                else {\n                    return sliceAndSplice(combined, change.newIndex, 1, change);\n                }\n            }\n            break;\n        case 'removed':\n            if (combined[change.oldIndex] && combined[change.oldIndex].doc.ref.isEqual(change.doc.ref)) {\n                return sliceAndSplice(combined, change.oldIndex, 1);\n            }\n            break;\n    }\n    return combined;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: collection/collection.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?=} events\n * @return {?}\n */\nfunction validateEventsArray(events) {\n    if (!events || events.length === 0) {\n        events = ['added', 'removed', 'modified'];\n    }\n    return events;\n}\n/**\n * AngularFirestoreCollection service\n *\n * This class creates a reference to a Firestore Collection. A reference and a query are provided in\n * in the constructor. The query can be the unqueried reference if no query is desired.The class\n * is generic which gives you type safety for data update methods and data streaming.\n *\n * This class uses Symbol.observable to transform into Observable using Observable.from().\n *\n * This class is rarely used directly and should be created from the AngularFirestore service.\n *\n * Example:\n *\n * const collectionRef = firebase.firestore.collection('stocks');\n * const query = collectionRef.where('price', '>', '0.01');\n * const fakeStock = new AngularFirestoreCollection<Stock>(collectionRef, query);\n *\n * // NOTE!: the updates are performed on the reference not the query\n * await fakeStock.add({ name: 'FAKE', price: 0.01 });\n *\n * // Subscribe to changes as snapshots. This provides you data updates as well as delta updates.\n * fakeStock.valueChanges().subscribe(value => console.log(value));\n * @template T\n */\nclass AngularFirestoreCollection {\n    /**\n     * The constructor takes in a CollectionReference and Query to provide wrapper methods\n     * for data operations and data streaming.\n     *\n     * Note: Data operation methods are done on the reference not the query. This means\n     * when you update data it is not updating data to the window of your query unless\n     * the data fits the criteria of the query. See the AssociatedRefence type for details\n     * on this implication.\n     * @param {?} ref\n     * @param {?} query\n     * @param {?} afs\n     */\n    constructor(ref, query, afs) {\n        this.ref = ref;\n        this.query = query;\n        this.afs = afs;\n    }\n    /**\n     * Listen to the latest change in the stream. This method returns changes\n     * as they occur and they are not sorted by query order. This allows you to construct\n     * your own data structure.\n     * @param {?=} events\n     * @return {?}\n     */\n    stateChanges(events) {\n        /** @type {?} */\n        let source = docChanges(this.query, this.afs.schedulers.outsideAngular);\n        if (events && events.length > 0) {\n            source = source.pipe(map((/**\n             * @param {?} actions\n             * @return {?}\n             */\n            actions => actions.filter((/**\n             * @param {?} change\n             * @return {?}\n             */\n            change => events.indexOf(change.type) > -1)))));\n        }\n        return source.pipe(\n        // We want to filter out empty arrays, but always emit at first, so the developer knows\n        // that the collection has been resolve; even if it's empty\n        startWith(undefined), pairwise(), filter((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([prior, current]) => current.length > 0 || !prior)), map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([prior, current]) => current)), this.afs.keepUnstableUntilFirst);\n    }\n    /**\n     * Create a stream of changes as they occur it time. This method is similar to stateChanges()\n     * but it collects each event in an array over time.\n     * @param {?=} events\n     * @return {?}\n     */\n    auditTrail(events) {\n        return this.stateChanges(events).pipe(scan((/**\n         * @param {?} current\n         * @param {?} action\n         * @return {?}\n         */\n        (current, action) => [...current, ...action]), []));\n    }\n    /**\n     * Create a stream of synchronized changes. This method keeps the local array in sorted\n     * query order.\n     * @param {?=} events\n     * @return {?}\n     */\n    snapshotChanges(events) {\n        /** @type {?} */\n        const validatedEvents = validateEventsArray(events);\n        /** @type {?} */\n        const scheduledSortedChanges$ = sortedChanges(this.query, validatedEvents, this.afs.schedulers.outsideAngular);\n        return scheduledSortedChanges$.pipe(this.afs.keepUnstableUntilFirst);\n    }\n    /**\n     * @template K\n     * @param {?=} options\n     * @return {?}\n     */\n    valueChanges(options = {}) {\n        return fromCollectionRef(this.query, this.afs.schedulers.outsideAngular)\n            .pipe(map((/**\n         * @param {?} actions\n         * @return {?}\n         */\n        actions => actions.payload.docs.map((/**\n         * @param {?} a\n         * @return {?}\n         */\n        a => {\n            if (options.idField) {\n                return (/** @type {?} */ (Object.assign(Object.assign({}, (/** @type {?} */ (a.data()))), { [options.idField]: a.id })));\n            }\n            else {\n                return a.data();\n            }\n        })))), this.afs.keepUnstableUntilFirst);\n    }\n    /**\n     * Retrieve the results of the query once.\n     * @param {?=} options\n     * @return {?}\n     */\n    get(options) {\n        return from(this.query.get(options)).pipe(observeOn(this.afs.schedulers.insideAngular));\n    }\n    /**\n     * Add data to a collection reference.\n     *\n     * Note: Data operation methods are done on the reference not the query. This means\n     * when you update data it is not updating data to the window of your query unless\n     * the data fits the criteria of the query.\n     * @param {?} data\n     * @return {?}\n     */\n    add(data) {\n        return this.ref.add(data);\n    }\n    /**\n     * Create a reference to a single document in a collection.\n     * @template T2\n     * @param {?=} path\n     * @return {?}\n     */\n    doc(path) {\n        // TODO is there a better way to solve this type issue\n        return new AngularFirestoreDocument((/** @type {?} */ (this.ref.doc(path))), this.afs);\n    }\n}\nif (false) {\n    /** @type {?} */\n    AngularFirestoreCollection.prototype.ref;\n    /**\n     * @type {?}\n     * @private\n     */\n    AngularFirestoreCollection.prototype.query;\n    /**\n     * @type {?}\n     * @private\n     */\n    AngularFirestoreCollection.prototype.afs;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: document/document.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * AngularFirestoreDocument service\n *\n * This class creates a reference to a Firestore Document. A reference is provided in\n * in the constructor. The class is generic which gives you type safety for data update\n * methods and data streaming.\n *\n * This class uses Symbol.observable to transform into Observable using Observable.from().\n *\n * This class is rarely used directly and should be created from the AngularFirestore service.\n *\n * Example:\n *\n * const fakeStock = new AngularFirestoreDocument<Stock>(doc('stocks/FAKE'));\n * await fakeStock.set({ name: 'FAKE', price: 0.01 });\n * fakeStock.valueChanges().map(snap => {\n *   if(snap.exists) return snap.data();\n *   return null;\n * }).subscribe(value => console.log(value));\n * // OR! Transform using Observable.from() and the data is unwrapped for you\n * Observable.from(fakeStock).subscribe(value => console.log(value));\n * @template T\n */\nclass AngularFirestoreDocument {\n    /**\n     * The constructor takes in a DocumentReference to provide wrapper methods\n     * for data operations, data streaming, and Symbol.observable.\n     * @param {?} ref\n     * @param {?} afs\n     */\n    constructor(ref, afs) {\n        this.ref = ref;\n        this.afs = afs;\n    }\n    /**\n     * Create or overwrite a single document.\n     * @param {?} data\n     * @param {?=} options\n     * @return {?}\n     */\n    set(data, options) {\n        return this.ref.set(data, options);\n    }\n    /**\n     * Update some fields of a document without overwriting the entire document.\n     * @param {?} data\n     * @return {?}\n     */\n    update(data) {\n        return this.ref.update(data);\n    }\n    /**\n     * Delete a document.\n     * @return {?}\n     */\n    delete() {\n        return this.ref.delete();\n    }\n    /**\n     * Create a reference to a sub-collection given a path and an optional query\n     * function.\n     * @template R\n     * @param {?} path\n     * @param {?=} queryFn\n     * @return {?}\n     */\n    collection(path, queryFn) {\n        /** @type {?} */\n        const collectionRef = (/** @type {?} */ (this.ref.collection(path)));\n        const { ref, query } = associateQuery(collectionRef, queryFn);\n        return new AngularFirestoreCollection(ref, query, this.afs);\n    }\n    /**\n     * Listen to snapshot updates from the document.\n     * @return {?}\n     */\n    snapshotChanges() {\n        /** @type {?} */\n        const scheduledFromDocRef$ = fromDocRef(this.ref, this.afs.schedulers.outsideAngular);\n        return scheduledFromDocRef$.pipe(this.afs.keepUnstableUntilFirst);\n    }\n    /**\n     * @template K\n     * @param {?=} options\n     * @return {?}\n     */\n    valueChanges(options = {}) {\n        return this.snapshotChanges().pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ payload }) => options.idField ? (/** @type {?} */ (Object.assign(Object.assign({}, payload.data()), { [options.idField]: payload.id }))) : payload.data())));\n    }\n    /**\n     * Retrieve the document once.\n     * @param {?=} options\n     * @return {?}\n     */\n    get(options) {\n        return from(this.ref.get(options)).pipe(observeOn(this.afs.schedulers.insideAngular));\n    }\n}\nif (false) {\n    /** @type {?} */\n    AngularFirestoreDocument.prototype.ref;\n    /**\n     * @type {?}\n     * @private\n     */\n    AngularFirestoreDocument.prototype.afs;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: collection-group/collection-group.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * AngularFirestoreCollectionGroup service\n *\n * This class holds a reference to a Firestore Collection Group Query.\n *\n * This class uses Symbol.observable to transform into Observable using Observable.from().\n *\n * This class is rarely used directly and should be created from the AngularFirestore service.\n *\n * Example:\n *\n * const collectionGroup = firebase.firestore.collectionGroup('stocks');\n * const query = collectionRef.where('price', '>', '0.01');\n * const fakeStock = new AngularFirestoreCollectionGroup<Stock>(query, afs);\n *\n * // Subscribe to changes as snapshots. This provides you data updates as well as delta updates.\n * fakeStock.valueChanges().subscribe(value => console.log(value));\n * @template T\n */\nclass AngularFirestoreCollectionGroup {\n    /**\n     * The constructor takes in a CollectionGroupQuery to provide wrapper methods\n     * for data operations and data streaming.\n     * @param {?} query\n     * @param {?} afs\n     */\n    constructor(query, afs) {\n        this.query = query;\n        this.afs = afs;\n    }\n    /**\n     * Listen to the latest change in the stream. This method returns changes\n     * as they occur and they are not sorted by query order. This allows you to construct\n     * your own data structure.\n     * @param {?=} events\n     * @return {?}\n     */\n    stateChanges(events) {\n        if (!events || events.length === 0) {\n            return docChanges(this.query, this.afs.schedulers.outsideAngular).pipe(this.afs.keepUnstableUntilFirst);\n        }\n        return docChanges(this.query, this.afs.schedulers.outsideAngular)\n            .pipe(map((/**\n         * @param {?} actions\n         * @return {?}\n         */\n        actions => actions.filter((/**\n         * @param {?} change\n         * @return {?}\n         */\n        change => events.indexOf(change.type) > -1)))), filter((/**\n         * @param {?} changes\n         * @return {?}\n         */\n        changes => changes.length > 0)), this.afs.keepUnstableUntilFirst);\n    }\n    /**\n     * Create a stream of changes as they occur it time. This method is similar to stateChanges()\n     * but it collects each event in an array over time.\n     * @param {?=} events\n     * @return {?}\n     */\n    auditTrail(events) {\n        return this.stateChanges(events).pipe(scan((/**\n         * @param {?} current\n         * @param {?} action\n         * @return {?}\n         */\n        (current, action) => [...current, ...action]), []));\n    }\n    /**\n     * Create a stream of synchronized changes. This method keeps the local array in sorted\n     * query order.\n     * @param {?=} events\n     * @return {?}\n     */\n    snapshotChanges(events) {\n        /** @type {?} */\n        const validatedEvents = validateEventsArray(events);\n        /** @type {?} */\n        const scheduledSortedChanges$ = sortedChanges(this.query, validatedEvents, this.afs.schedulers.outsideAngular);\n        return scheduledSortedChanges$.pipe(this.afs.keepUnstableUntilFirst);\n    }\n    /**\n     * @template K\n     * @param {?=} options\n     * @return {?}\n     */\n    valueChanges(options = {}) {\n        /** @type {?} */\n        const fromCollectionRefScheduled$ = fromCollectionRef(this.query, this.afs.schedulers.outsideAngular);\n        return fromCollectionRefScheduled$\n            .pipe(map((/**\n         * @param {?} actions\n         * @return {?}\n         */\n        actions => actions.payload.docs.map((/**\n         * @param {?} a\n         * @return {?}\n         */\n        a => {\n            if (options.idField) {\n                return (/** @type {?} */ (Object.assign({ [options.idField]: a.id }, a.data())));\n            }\n            else {\n                return a.data();\n            }\n        })))), this.afs.keepUnstableUntilFirst);\n    }\n    /**\n     * Retrieve the results of the query once.\n     * @param {?=} options\n     * @return {?}\n     */\n    get(options) {\n        return from(this.query.get(options)).pipe(observeOn(this.afs.schedulers.insideAngular));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    AngularFirestoreCollectionGroup.prototype.query;\n    /**\n     * @type {?}\n     * @private\n     */\n    AngularFirestoreCollectionGroup.prototype.afs;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: firestore.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The value of this token determines whether or not the firestore will have persistance enabled\n * @type {?}\n */\nconst ENABLE_PERSISTENCE = new InjectionToken('angularfire2.enableFirestorePersistence');\n/** @type {?} */\nconst PERSISTENCE_SETTINGS = new InjectionToken('angularfire2.firestore.persistenceSettings');\n/** @type {?} */\nconst SETTINGS = new InjectionToken('angularfire2.firestore.settings');\n/** @type {?} */\nconst USE_EMULATOR = new InjectionToken('angularfire2.firestore.use-emulator');\n/**\n * A utility methods for associating a collection reference with\n * a query.\n *\n * @template T\n * @param {?} collectionRef - A collection reference to query\n * @param {?=} queryFn - The callback to create a query\n *\n * Example:\n * const { query, ref } = associateQuery(docRef.collection('items'), ref => {\n *  return ref.where('age', '<', 200);\n * });\n * @return {?}\n */\nfunction associateQuery(collectionRef, queryFn = (/**\n * @param {?} ref\n * @return {?}\n */\nref => ref)) {\n    /** @type {?} */\n    const query = queryFn(collectionRef);\n    /** @type {?} */\n    const ref = collectionRef;\n    return { query, ref };\n}\n/**\n * AngularFirestore Service\n *\n * This service is the main entry point for this feature module. It provides\n * an API for creating Collection and Reference services. These services can\n * then be used to do data updates and observable streams of the data.\n *\n * Example:\n *\n * import { Component } from '\\@angular/core';\n * import { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from '\\@angular/fire/firestore';\n * import { Observable } from 'rxjs/Observable';\n * import { from } from 'rxjs/observable';\n *\n * \\@Component({\n *   selector: 'app-my-component',\n *   template: `\n *    <h2>Items for {{ (profile | async)?.name }}\n *    <ul>\n *       <li *ngFor=\"let item of items | async\">{{ item.name }}</li>\n *    </ul>\n *    <div class=\"control-input\">\n *       <input type=\"text\" #itemname />\n *       <button (click)=\"addItem(itemname.value)\">Add Item</button>\n *    </div>\n *   `\n * })\n * export class MyComponent implements OnInit {\n *\n *   // services for data operations and data streaming\n *   private readonly itemsRef: AngularFirestoreCollection<Item>;\n *   private readonly profileRef: AngularFirestoreDocument<Profile>;\n *\n *   // observables for template\n *   items: Observable<Item[]>;\n *   profile: Observable<Profile>;\n *\n *   // inject main service\n *   constructor(private readonly afs: AngularFirestore) {}\n *\n *   ngOnInit() {\n *     this.itemsRef = afs.collection('items', ref => ref.where('user', '==', 'davideast').limit(10));\n *     this.items = this.itemsRef.valueChanges().map(snap => snap.docs.map(data => doc.data()));\n *     // this.items = from(this.itemsRef); // you can also do this with no mapping\n *\n *     this.profileRef = afs.doc('users/davideast');\n *     this.profile = this.profileRef.valueChanges();\n *   }\n *\n *   addItem(name: string) {\n *     const user = 'davideast';\n *     this.itemsRef.add({ name, user });\n *   }\n * }\n */\nclass AngularFirestore {\n    /**\n     * Each Feature of AngularFire has a FirebaseApp injected. This way we\n     * don't rely on the main Firebase App instance and we can create named\n     * apps and use multiple apps.\n     * @param {?} options\n     * @param {?} nameOrConfig\n     * @param {?} shouldEnablePersistence\n     * @param {?} settings\n     * @param {?} platformId\n     * @param {?} zone\n     * @param {?} persistenceSettings\n     * @param {?} _useEmulator\n     * @param {?} useAuthEmulator\n     */\n    constructor(options, nameOrConfig, shouldEnablePersistence, settings, \n    // tslint:disable-next-line:ban-types\n    platformId, zone, persistenceSettings, _useEmulator, useAuthEmulator) {\n        this.schedulers = new ɵAngularFireSchedulers(zone);\n        this.keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(this.schedulers);\n        /** @type {?} */\n        const app = ɵfirebaseAppFactory(options, zone, nameOrConfig);\n        if (!firebase.auth && useAuthEmulator) {\n            ɵlogAuthEmulatorError();\n        }\n        /** @type {?} */\n        const useEmulator = _useEmulator;\n        [this.firestore, this.persistenceEnabled$] = ɵfetchInstance(`${app.name}.firestore`, 'AngularFirestore', app, (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const firestore = zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => app.firestore()));\n            if (settings) {\n                firestore.settings(settings);\n            }\n            if (useEmulator) {\n                firestore.useEmulator(...useEmulator);\n            }\n            if (shouldEnablePersistence && !isPlatformServer(platformId)) {\n                // We need to try/catch here because not all enablePersistence() failures are caught\n                // https://github.com/firebase/firebase-js-sdk/issues/608\n                /** @type {?} */\n                const enablePersistence = (/**\n                 * @return {?}\n                 */\n                () => {\n                    try {\n                        return from(firestore.enablePersistence(persistenceSettings || undefined).then((/**\n                         * @return {?}\n                         */\n                        () => true), (/**\n                         * @return {?}\n                         */\n                        () => false)));\n                    }\n                    catch (e) {\n                        if (typeof console !== 'undefined') {\n                            console.warn(e);\n                        }\n                        return of(false);\n                    }\n                });\n                return [firestore, zone.runOutsideAngular(enablePersistence)];\n            }\n            else {\n                return [firestore, of(false)];\n            }\n        }), [settings, useEmulator, shouldEnablePersistence]);\n    }\n    /**\n     * @template T\n     * @param {?} pathOrRef\n     * @param {?=} queryFn\n     * @return {?}\n     */\n    collection(pathOrRef, queryFn) {\n        /** @type {?} */\n        let collectionRef;\n        if (typeof pathOrRef === 'string') {\n            collectionRef = (/** @type {?} */ (this.firestore.collection(pathOrRef)));\n        }\n        else {\n            collectionRef = pathOrRef;\n        }\n        const { ref, query } = associateQuery(collectionRef, queryFn);\n        /** @type {?} */\n        const refInZone = this.schedulers.ngZone.run((/**\n         * @return {?}\n         */\n        () => ref));\n        return new AngularFirestoreCollection(refInZone, query, this);\n    }\n    /**\n     * Create a reference to a Firestore Collection Group based on a collectionId\n     * and an optional query function to narrow the result\n     * set.\n     * @template T\n     * @param {?} collectionId\n     * @param {?=} queryGroupFn\n     * @return {?}\n     */\n    collectionGroup(collectionId, queryGroupFn) {\n        /** @type {?} */\n        const queryFn = queryGroupFn || ((/**\n         * @param {?} ref\n         * @return {?}\n         */\n        ref => ref));\n        /** @type {?} */\n        const collectionGroup = (/** @type {?} */ (this.firestore.collectionGroup(collectionId)));\n        return new AngularFirestoreCollectionGroup(queryFn(collectionGroup), this);\n    }\n    /**\n     * @template T\n     * @param {?} pathOrRef\n     * @return {?}\n     */\n    doc(pathOrRef) {\n        /** @type {?} */\n        let ref;\n        if (typeof pathOrRef === 'string') {\n            ref = (/** @type {?} */ (this.firestore.doc(pathOrRef)));\n        }\n        else {\n            ref = pathOrRef;\n        }\n        /** @type {?} */\n        const refInZone = this.schedulers.ngZone.run((/**\n         * @return {?}\n         */\n        () => ref));\n        return new AngularFirestoreDocument(refInZone, this);\n    }\n    /**\n     * Returns a generated Firestore Document Id.\n     * @return {?}\n     */\n    createId() {\n        return this.firestore.collection('_').doc().id;\n    }\n}\nAngularFirestore.ɵfac = function AngularFirestore_Factory(t) { return new (t || AngularFirestore)(ɵngcc0.ɵɵinject(FIREBASE_OPTIONS), ɵngcc0.ɵɵinject(FIREBASE_APP_NAME, 8), ɵngcc0.ɵɵinject(ENABLE_PERSISTENCE, 8), ɵngcc0.ɵɵinject(SETTINGS, 8), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(PERSISTENCE_SETTINGS, 8), ɵngcc0.ɵɵinject(USE_EMULATOR, 8), ɵngcc0.ɵɵinject(USE_EMULATOR$1, 8)); };\n/** @nocollapse */\nAngularFirestore.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [FIREBASE_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FIREBASE_APP_NAME,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ENABLE_PERSISTENCE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [SETTINGS,] }] },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [PERSISTENCE_SETTINGS,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [USE_EMULATOR,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [USE_EMULATOR$1,] }] }\n];\n/** @nocollapse */ AngularFirestore.ɵprov = ɵɵdefineInjectable({ factory: function AngularFirestore_Factory() { return new AngularFirestore(ɵɵinject(FIREBASE_OPTIONS), ɵɵinject(FIREBASE_APP_NAME, 8), ɵɵinject(ENABLE_PERSISTENCE, 8), ɵɵinject(SETTINGS, 8), ɵɵinject(PLATFORM_ID), ɵɵinject(NgZone), ɵɵinject(PERSISTENCE_SETTINGS, 8), ɵɵinject(USE_EMULATOR, 8), ɵɵinject(USE_EMULATOR$1, 8)); }, token: AngularFirestore, providedIn: \"any\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AngularFirestore, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'any'\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [FIREBASE_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [FIREBASE_APP_NAME]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ENABLE_PERSISTENCE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [SETTINGS]\n            }] }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [PERSISTENCE_SETTINGS]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [USE_EMULATOR]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [USE_EMULATOR$1]\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    AngularFirestore.prototype.firestore;\n    /** @type {?} */\n    AngularFirestore.prototype.persistenceEnabled$;\n    /** @type {?} */\n    AngularFirestore.prototype.schedulers;\n    /** @type {?} */\n    AngularFirestore.prototype.keepUnstableUntilFirst;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: firestore.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AngularFirestoreModule {\n    /**\n     * Attempt to enable persistent storage, if possible\n     * @param {?=} persistenceSettings\n     * @return {?}\n     */\n    static enablePersistence(persistenceSettings) {\n        return {\n            ngModule: AngularFirestoreModule,\n            providers: [\n                { provide: ENABLE_PERSISTENCE, useValue: true },\n                { provide: PERSISTENCE_SETTINGS, useValue: persistenceSettings },\n            ]\n        };\n    }\n}\nAngularFirestoreModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AngularFirestoreModule });\nAngularFirestoreModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AngularFirestoreModule_Factory(t) { return new (t || AngularFirestoreModule)(); }, providers: [AngularFirestore] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AngularFirestoreModule, [{\n        type: NgModule,\n        args: [{\n                providers: [AngularFirestore]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: interfaces.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n * @template T\n */\nfunction DocumentSnapshotExists() { }\nif (false) {\n    /** @type {?} */\n    DocumentSnapshotExists.prototype.exists;\n    /**\n     * @param {?=} options\n     * @return {?}\n     */\n    DocumentSnapshotExists.prototype.data = function (options) { };\n}\n/**\n * @record\n */\nfunction DocumentSnapshotDoesNotExist() { }\nif (false) {\n    /** @type {?} */\n    DocumentSnapshotDoesNotExist.prototype.exists;\n    /**\n     * @param {?=} options\n     * @return {?}\n     */\n    DocumentSnapshotDoesNotExist.prototype.data = function (options) { };\n    /**\n     * @param {?} fieldPath\n     * @param {?=} options\n     * @return {?}\n     */\n    DocumentSnapshotDoesNotExist.prototype.get = function (fieldPath, options) { };\n}\n/**\n * @record\n * @template T\n */\nfunction QueryDocumentSnapshot() { }\nif (false) {\n    /**\n     * @param {?=} options\n     * @return {?}\n     */\n    QueryDocumentSnapshot.prototype.data = function (options) { };\n}\n/**\n * @record\n * @template T\n */\nfunction QuerySnapshot() { }\nif (false) {\n    /** @type {?} */\n    QuerySnapshot.prototype.docs;\n}\n/**\n * @record\n * @template T\n */\nfunction DocumentChange() { }\nif (false) {\n    /** @type {?} */\n    DocumentChange.prototype.doc;\n}\n/**\n * @record\n * @template T\n */\nfunction DocumentChangeAction() { }\nif (false) {\n    /** @type {?} */\n    DocumentChangeAction.prototype.type;\n    /** @type {?} */\n    DocumentChangeAction.prototype.payload;\n}\n/**\n * @record\n * @template T\n */\nfunction Action() { }\nif (false) {\n    /** @type {?} */\n    Action.prototype.type;\n    /** @type {?} */\n    Action.prototype.payload;\n}\n/**\n * @record\n * @template T\n */\nfunction Reference() { }\nif (false) {\n    /** @type {?} */\n    Reference.prototype.onSnapshot;\n}\n/**\n * A structure that provides an association between a reference\n * and a query on that reference. Note: Performing operations\n * on the reference can lead to confusing results with complicated\n * queries.\n *\n * Example:\n *\n * const query = ref.where('type', '==', 'Book').\n *                  .where('price', '>' 18.00)\n *                  .where('price', '<' 100.00)\n *                  .where('category', '==', 'Fiction')\n *                  .where('publisher', '==', 'BigPublisher')\n *\n * // This addition would not be a result of the query above\n * ref.add({\n *  type: 'Magazine',\n *  price: 4.99,\n *  category: 'Sports',\n *  publisher: 'SportsPublisher'\n * });\n * @record\n * @template T\n */\nfunction AssociatedReference() { }\nif (false) {\n    /** @type {?} */\n    AssociatedReference.prototype.ref;\n    /** @type {?} */\n    AssociatedReference.prototype.query;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: angular-fire-firestore.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreCollectionGroup, AngularFirestoreDocument, AngularFirestoreModule, ENABLE_PERSISTENCE, PERSISTENCE_SETTINGS, SETTINGS, USE_EMULATOR, associateQuery, combineChange, combineChanges, docChanges, fromCollectionRef, fromDocRef, fromRef, sortedChanges, validateEventsArray };\n\n//# sourceMappingURL=angular-fire-firestore.js.map","import firebase from '@firebase/app';\nexport { default } from '@firebase/app';\nimport '@firebase/auth';\nimport '@firebase/database';\nimport '@firebase/firestore';\nimport '@firebase/firestore/bundle';\nimport '@firebase/functions';\nimport '@firebase/messaging';\nimport '@firebase/storage';\nimport '@firebase/performance';\nimport '@firebase/analytics';\nimport '@firebase/remote-config';\n\nvar name = \"firebase\";\nvar version = \"8.2.7\";\n\n/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfirebase.registerVersion(name, version, 'app');\n\nvar name$1 = \"firebase\";\nvar version$1 = \"8.2.7\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconsole.warn(\"\\nIt looks like you're using the development build of the Firebase JS SDK.\\nWhen deploying Firebase apps to production, it is advisable to only import\\nthe individual SDK components you intend to use.\\n\\nFor the module builds, these are available in the following manner\\n(replace <PACKAGE> with the name of a component - i.e. auth, database, etc):\\n\\nCommonJS Modules:\\nconst firebase = require('firebase/app');\\nrequire('firebase/<PACKAGE>');\\n\\nES Modules:\\nimport firebase from 'firebase/app';\\nimport 'firebase/<PACKAGE>';\\n\\nTypescript:\\nimport firebase from 'firebase/app';\\nimport 'firebase/<PACKAGE>';\\n\");\r\nfirebase.registerVersion(name$1, version$1);\n//# sourceMappingURL=index.esm.js.map\n","import { Logger as t, LogLevel as e } from \"@firebase/logger\";\n\nimport { getUA as n, isMobileCordova as r, isReactNative as i, isElectron as o, isIE as u, isUWP as s, isBrowserExtension as a } from \"@firebase/util\";\n\nimport { XhrIo as c, EventType as h, ErrorCode as f, createWebChannelTransport as l, getStatEventTarget as p, WebChannel as d, Event as v, Stat as y } from \"@firebase/webchannel-wrapper\";\n\nimport { __extends as m, __awaiter as g, __generator as w, __spreadArrays as b } from \"tslib\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ var _ = \n/**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     */\nfunction(t, e, n, r, i, o) {\n    this.t = t, this.persistenceKey = e, this.host = n, this.ssl = r, this.forceLongPolling = i, \n    this.i = o;\n}, I = /** @class */ function() {\n    function t(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    return Object.defineProperty(t.prototype, \"o\", {\n        get: function() {\n            return \"(default)\" === this.database;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), t.prototype.isEqual = function(e) {\n        return e instanceof t && e.projectId === this.projectId && e.database === this.database;\n    }, t;\n}(), E = new t(\"@firebase/firestore\");\n\n/** The default database name for a project. */\n/** Represents the database ID a Firestore client is associated with. */\n// Helper methods are needed because variables can't be exported as read/write\nfunction T() {\n    return E.logLevel;\n}\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function N(t) {\n    for (var n = [], r = 1; r < arguments.length; r++) n[r - 1] = arguments[r];\n    if (E.logLevel <= e.DEBUG) {\n        var i = n.map(S);\n        E.debug.apply(E, b([ \"Firestore (8.2.7): \" + t ], i));\n    }\n}\n\nfunction A(t) {\n    for (var n = [], r = 1; r < arguments.length; r++) n[r - 1] = arguments[r];\n    if (E.logLevel <= e.ERROR) {\n        var i = n.map(S);\n        E.error.apply(E, b([ \"Firestore (8.2.7): \" + t ], i));\n    }\n}\n\nfunction D(t) {\n    for (var n = [], r = 1; r < arguments.length; r++) n[r - 1] = arguments[r];\n    if (E.logLevel <= e.WARN) {\n        var i = n.map(S);\n        E.warn.apply(E, b([ \"Firestore (8.2.7): \" + t ], i));\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function S(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function x(t) {\n    void 0 === t && (t = \"Unexpected state\");\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n        var e = \"FIRESTORE (8.2.7) INTERNAL ASSERTION FAILED: \" + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n        throw A(e), new Error(e)\n    /**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */;\n}\n\nfunction k(t, e) {\n    t || x();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function O(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */ function P(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    var e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (var r = 0; r < t; r++) n[r] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ var V = /** @class */ function() {\n    function t() {}\n    return t.u = function() {\n        for (\n        // Alphanumeric characters\n        var t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length, n = \"\"\n        // The largest byte value that is a multiple of `char.length`.\n        ; n.length < 20; ) for (var r = P(40), i = 0; i < r.length; ++i) \n        // Only accept values that are [0, maxMultiple), this ensures they can\n        // be evenly mapped to indices of `chars` via a modulo operation.\n        n.length < 20 && r[i] < e && (n += t.charAt(r[i] % t.length));\n        return n;\n    }, t;\n}();\n\nfunction C(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function L(t, e, n) {\n    return t.length === e.length && t.every((function(t, r) {\n        return n(t, e[r]);\n    }));\n}\n\n/**\n * Returns the immediate lexicographically-following string. This is useful to\n * construct an inclusive range for indexeddb iterators.\n */ function R(t) {\n    // Return the input string, with an additional NUL byte appended.\n    return t + \"\\0\";\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n */ var U = /** @class */ function() {\n    function t(t) {\n        this.h = t;\n    }\n    return t.fromBase64String = function(e) {\n        return new t(atob(e));\n    }, t.fromUint8Array = function(e) {\n        return new t(\n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            for (var e = \"\", n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }(e));\n    }, t.prototype.toBase64 = function() {\n        return t = this.h, btoa(t);\n        /** Converts a binary string to a Base64 encoded string. */        var t;\n        /** True if and only if the Base64 conversion functions are available. */    }, \n    t.prototype.toUint8Array = function() {\n        return function(t) {\n            for (var e = new Uint8Array(t.length), n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }(this.h);\n    }, t.prototype.l = function() {\n        return 2 * this.h.length;\n    }, t.prototype._ = function(t) {\n        return C(this.h, t.h);\n    }, t.prototype.isEqual = function(t) {\n        return this.h === t.h;\n    }, t;\n}();\n\nU.T = new U(\"\");\n\nvar M = {\n    // Causes are copied from:\n    // https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n    /** Not an error; returned on success. */\n    OK: \"ok\",\n    /** The operation was cancelled (typically by the caller). */\n    CANCELLED: \"cancelled\",\n    /** Unknown error or an error from a different error domain. */\n    UNKNOWN: \"unknown\",\n    /**\n     * Client specified an invalid argument. Note that this differs from\n     * FAILED_PRECONDITION. INVALID_ARGUMENT indicates arguments that are\n     * problematic regardless of the state of the system (e.g., a malformed file\n     * name).\n     */\n    INVALID_ARGUMENT: \"invalid-argument\",\n    /**\n     * Deadline expired before operation could complete. For operations that\n     * change the state of the system, this error may be returned even if the\n     * operation has completed successfully. For example, a successful response\n     * from a server could have been delayed long enough for the deadline to\n     * expire.\n     */\n    DEADLINE_EXCEEDED: \"deadline-exceeded\",\n    /** Some requested entity (e.g., file or directory) was not found. */\n    NOT_FOUND: \"not-found\",\n    /**\n     * Some entity that we attempted to create (e.g., file or directory) already\n     * exists.\n     */\n    ALREADY_EXISTS: \"already-exists\",\n    /**\n     * The caller does not have permission to execute the specified operation.\n     * PERMISSION_DENIED must not be used for rejections caused by exhausting\n     * some resource (use RESOURCE_EXHAUSTED instead for those errors).\n     * PERMISSION_DENIED must not be used if the caller can not be identified\n     * (use UNAUTHENTICATED instead for those errors).\n     */\n    PERMISSION_DENIED: \"permission-denied\",\n    /**\n     * The request does not have valid authentication credentials for the\n     * operation.\n     */\n    UNAUTHENTICATED: \"unauthenticated\",\n    /**\n     * Some resource has been exhausted, perhaps a per-user quota, or perhaps the\n     * entire file system is out of space.\n     */\n    RESOURCE_EXHAUSTED: \"resource-exhausted\",\n    /**\n     * Operation was rejected because the system is not in a state required for\n     * the operation's execution. For example, directory to be deleted may be\n     * non-empty, an rmdir operation is applied to a non-directory, etc.\n     *\n     * A litmus test that may help a service implementor in deciding\n     * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:\n     *  (a) Use UNAVAILABLE if the client can retry just the failing call.\n     *  (b) Use ABORTED if the client should retry at a higher-level\n     *      (e.g., restarting a read-modify-write sequence).\n     *  (c) Use FAILED_PRECONDITION if the client should not retry until\n     *      the system state has been explicitly fixed. E.g., if an \"rmdir\"\n     *      fails because the directory is non-empty, FAILED_PRECONDITION\n     *      should be returned since the client should not retry unless\n     *      they have first fixed up the directory by deleting files from it.\n     *  (d) Use FAILED_PRECONDITION if the client performs conditional\n     *      REST Get/Update/Delete on a resource and the resource on the\n     *      server does not match the condition. E.g., conflicting\n     *      read-modify-write on the same resource.\n     */\n    FAILED_PRECONDITION: \"failed-precondition\",\n    /**\n     * The operation was aborted, typically due to a concurrency issue like\n     * sequencer check failures, transaction aborts, etc.\n     *\n     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n     * and UNAVAILABLE.\n     */\n    ABORTED: \"aborted\",\n    /**\n     * Operation was attempted past the valid range. E.g., seeking or reading\n     * past end of file.\n     *\n     * Unlike INVALID_ARGUMENT, this error indicates a problem that may be fixed\n     * if the system state changes. For example, a 32-bit file system will\n     * generate INVALID_ARGUMENT if asked to read at an offset that is not in the\n     * range [0,2^32-1], but it will generate OUT_OF_RANGE if asked to read from\n     * an offset past the current file size.\n     *\n     * There is a fair bit of overlap between FAILED_PRECONDITION and\n     * OUT_OF_RANGE. We recommend using OUT_OF_RANGE (the more specific error)\n     * when it applies so that callers who are iterating through a space can\n     * easily look for an OUT_OF_RANGE error to detect when they are done.\n     */\n    OUT_OF_RANGE: \"out-of-range\",\n    /** Operation is not implemented or not supported/enabled in this service. */\n    UNIMPLEMENTED: \"unimplemented\",\n    /**\n     * Internal errors. Means some invariants expected by underlying System has\n     * been broken. If you see one of these errors, Something is very broken.\n     */\n    INTERNAL: \"internal\",\n    /**\n     * The service is currently unavailable. This is a most likely a transient\n     * condition and may be corrected by retrying with a backoff.\n     *\n     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n     * and UNAVAILABLE.\n     */\n    UNAVAILABLE: \"unavailable\",\n    /** Unrecoverable data loss or corruption. */\n    DATA_LOSS: \"data-loss\"\n}, q = /** @class */ function(t) {\n    /** @hideconstructor */\n    function e(e, n) {\n        var r = this;\n        return (r = t.call(this, n) || this).code = e, r.message = n, r.name = \"FirebaseError\", \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        r.toString = function() {\n            return r.name + \": [code=\" + r.code + \"]: \" + r.message;\n        }, r;\n    }\n    return m(e, t), e;\n}(Error), F = /** @class */ function() {\n    /** @hideconstructor */\n    function t(t) {\n        this.I = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    return t.fromBase64String = function(e) {\n        try {\n            return new t(U.fromBase64String(e));\n        } catch (e) {\n            throw new q(M.INVALID_ARGUMENT, \"Failed to construct data from Base64 string: \" + e);\n        }\n    }, \n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */\n    t.fromUint8Array = function(e) {\n        return new t(U.fromUint8Array(e));\n    }, \n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */\n    t.prototype.toBase64 = function() {\n        return this.I.toBase64();\n    }, \n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */\n    t.prototype.toUint8Array = function() {\n        return this.I.toUint8Array();\n    }, \n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */\n    t.prototype.toString = function() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }, \n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */\n    t.prototype.isEqual = function(t) {\n        return this.I.isEqual(t.I);\n    }, t;\n}(), j = /** @class */ function() {\n    function t(t) {\n        this.uid = t;\n    }\n    return t.prototype.m = function() {\n        return null != this.uid;\n    }, \n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */\n    t.prototype.A = function() {\n        return this.m() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }, t.prototype.isEqual = function(t) {\n        return t.uid === this.uid;\n    }, t;\n}();\n\n/** An error returned by a Firestore operation. */\n/** A user with a null UID. */ j.UNAUTHENTICATED = new j(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nj.R = new j(\"google-credentials-uid\"), j.P = new j(\"first-party-uid\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar z = function(t, e) {\n    this.user = e, this.type = \"OAuth\", this.g = {}, \n    // Set the headers using Object Literal notation to avoid minification\n    this.g.Authorization = \"Bearer \" + t;\n}, G = /** @class */ function() {\n    function t() {\n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.V = null;\n    }\n    return t.prototype.getToken = function() {\n        return Promise.resolve(null);\n    }, t.prototype.p = function() {}, t.prototype.v = function(t) {\n        this.V = t, \n        // Fire with initial user.\n        t(j.UNAUTHENTICATED);\n    }, t.prototype.S = function() {\n        this.V = null;\n    }, t;\n}(), B = /** @class */ function() {\n    function t(t) {\n        var e = this;\n        /**\n         * The auth token listener registered with FirebaseApp, retained here so we\n         * can unregister it.\n         */        this.D = null, \n        /** Tracks the current User. */\n        this.currentUser = j.UNAUTHENTICATED, this.C = !1, \n        /**\n             * Counter used to detect if the token changed while a getToken request was\n             * outstanding.\n             */\n        this.N = 0, \n        /** The listener registered with setChangeListener(). */\n        this.V = null, this.forceRefresh = !1, this.D = function() {\n            e.N++, e.currentUser = e.$(), e.C = !0, e.V && e.V(e.currentUser);\n        }, this.N = 0, this.auth = t.getImmediate({\n            optional: !0\n        }), this.auth ? this.auth.addAuthTokenListener(this.D) : (\n        // if auth is not available, invoke tokenListener once with null token\n        this.D(null), t.get().then((function(t) {\n            e.auth = t, e.D && \n            // tokenListener can be removed by removeChangeListener()\n            e.auth.addAuthTokenListener(e.D);\n        }), (function() {})));\n    }\n    return t.prototype.getToken = function() {\n        var t = this, e = this.N, n = this.forceRefresh;\n        // Take note of the current value of the tokenCounter so that this method\n        // can fail (with an ABORTED error) if there is a token change while the\n        // request is outstanding.\n                return this.forceRefresh = !1, this.auth ? this.auth.getToken(n).then((function(n) {\n            // Cancel the request since the token changed while the request was\n            // outstanding so the response is potentially for a previous user (which\n            // user, we can't be sure).\n            return t.N !== e ? (N(\"FirebaseCredentialsProvider\", \"getToken aborted due to token change.\"), \n            t.getToken()) : n ? (k(\"string\" == typeof n.accessToken), new z(n.accessToken, t.currentUser)) : null;\n        })) : Promise.resolve(null);\n    }, t.prototype.p = function() {\n        this.forceRefresh = !0;\n    }, t.prototype.v = function(t) {\n        this.V = t, \n        // Fire the initial event\n        this.C && t(this.currentUser);\n    }, t.prototype.S = function() {\n        this.auth && this.auth.removeAuthTokenListener(this.D), this.D = null, this.V = null;\n    }, \n    // Auth.getUid() can return null even with a user logged in. It is because\n    // getUid() is synchronous, but the auth code populating Uid is asynchronous.\n    // This method should only be called in the AuthTokenListener callback\n    // to guarantee to get the actual user.\n    t.prototype.$ = function() {\n        var t = this.auth && this.auth.getUid();\n        return k(null === t || \"string\" == typeof t), new j(t);\n    }, t;\n}(), Q = /** @class */ function() {\n    function t(t, e) {\n        this.F = t, this.O = e, this.type = \"FirstParty\", this.user = j.P;\n    }\n    return Object.defineProperty(t.prototype, \"g\", {\n        get: function() {\n            var t = {\n                \"X-Goog-AuthUser\": this.O\n            }, e = this.F.auth.getAuthHeaderValueForFirstParty([]);\n            // Use array notation to prevent minification\n                        return e && (t.Authorization = e), t;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), t;\n}(), Y = /** @class */ function() {\n    function t(t, e) {\n        this.F = t, this.O = e;\n    }\n    return t.prototype.getToken = function() {\n        return Promise.resolve(new Q(this.F, this.O));\n    }, t.prototype.v = function(t) {\n        // Fire with initial uid.\n        t(j.P);\n    }, t.prototype.S = function() {}, t.prototype.p = function() {}, t;\n}(), H = /** @class */ function() {\n    function t(t, e) {\n        var n = this;\n        this.previousValue = t, e && (e.k = function(t) {\n            return n.M(t);\n        }, this.L = function(t) {\n            return e.B(t);\n        });\n    }\n    return t.prototype.M = function(t) {\n        return this.previousValue = Math.max(t, this.previousValue), this.previousValue;\n    }, t.prototype.next = function() {\n        var t = ++this.previousValue;\n        return this.L && this.L(t), t;\n    }, t;\n}();\n\n/** A CredentialsProvider that always yields an empty token. */ H.q = -1;\n\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * @see https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto\n */\nvar K = /** @class */ function() {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    function t(t, e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new q(M.INVALID_ARGUMENT, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new q(M.INVALID_ARGUMENT, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new q(M.INVALID_ARGUMENT, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new q(M.INVALID_ARGUMENT, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    return t.now = function() {\n        return t.fromMillis(Date.now());\n    }, \n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */\n    t.fromDate = function(e) {\n        return t.fromMillis(e.getTime());\n    }, \n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */\n    t.fromMillis = function(e) {\n        var n = Math.floor(e / 1e3);\n        return new t(n, 1e6 * (e - 1e3 * n));\n    }, \n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion causes\n     * a loss of precision since `Date` objects only support millisecond precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */\n    t.prototype.toDate = function() {\n        return new Date(this.toMillis());\n    }, \n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t.prototype.toMillis = function() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }, t.prototype.U = function(t) {\n        return this.seconds === t.seconds ? C(this.nanoseconds, t.nanoseconds) : C(this.seconds, t.seconds);\n    }, \n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */\n    t.prototype.isEqual = function(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }, t.prototype.toString = function() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }, t.prototype.toJSON = function() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }, \n    /**\n     * Converts this object to a primitive string, which allows Timestamp objects to be compared\n     * using the `>`, `<=`, `>=` and `>` operators.\n     */\n    t.prototype.valueOf = function() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where <seconds> is\n        // translated to have a non-negative value and both <seconds> and <nanoseconds> are left-padded\n        // with zeroes to be a consistent length. Strings with this format then have a lexiographical\n        // ordering that matches the expected ordering. The <seconds> translation is done to avoid\n        // having a leading negative sign (i.e. a leading '-' character) in its string representation,\n        // which would affect its lexiographical ordering.\n        var t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }, t;\n}(), X = /** @class */ function() {\n    function t(t) {\n        this.timestamp = t;\n    }\n    return t.K = function(e) {\n        return new t(e);\n    }, t.min = function() {\n        return new t(new K(0, 0));\n    }, t.prototype._ = function(t) {\n        return this.timestamp.U(t.timestamp);\n    }, t.prototype.isEqual = function(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }, \n    /** Returns a number representation of the version for use in spec tests. */ t.prototype.W = function() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }, t.prototype.toString = function() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }, t.prototype.j = function() {\n        return this.timestamp;\n    }, t;\n}(), W = /** @class */ function() {\n    function t(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && x(), void 0 === n ? n = t.length - e : n > t.length - e && x(), \n        this.segments = t, this.offset = e, this.G = n;\n    }\n    return Object.defineProperty(t.prototype, \"length\", {\n        get: function() {\n            return this.G;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), t.prototype.isEqual = function(e) {\n        return 0 === t.H(this, e);\n    }, t.prototype.child = function(e) {\n        var n = this.segments.slice(this.offset, this.limit());\n        return e instanceof t ? e.forEach((function(t) {\n            n.push(t);\n        })) : n.push(e), this.J(n);\n    }, \n    /** The index of one past the last segment of the path. */ t.prototype.limit = function() {\n        return this.offset + this.length;\n    }, t.prototype.Y = function(t) {\n        return t = void 0 === t ? 1 : t, this.J(this.segments, this.offset + t, this.length - t);\n    }, t.prototype.X = function() {\n        return this.J(this.segments, this.offset, this.length - 1);\n    }, t.prototype.Z = function() {\n        return this.segments[this.offset];\n    }, t.prototype.tt = function() {\n        return this.get(this.length - 1);\n    }, t.prototype.get = function(t) {\n        return this.segments[this.offset + t];\n    }, t.prototype.et = function() {\n        return 0 === this.length;\n    }, t.prototype.nt = function(t) {\n        if (t.length < this.length) return !1;\n        for (var e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }, t.prototype.st = function(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (var e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }, t.prototype.forEach = function(t) {\n        for (var e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }, t.prototype.it = function() {\n        return this.segments.slice(this.offset, this.limit());\n    }, t.H = function(t, e) {\n        for (var n = Math.min(t.length, e.length), r = 0; r < n; r++) {\n            var i = t.get(r), o = e.get(r);\n            if (i < o) return -1;\n            if (i > o) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }, t;\n}(), Z = /** @class */ function(t) {\n    function e() {\n        return null !== t && t.apply(this, arguments) || this;\n    }\n    return m(e, t), e.prototype.J = function(t, n, r) {\n        return new e(t, n, r);\n    }, e.prototype.rt = function() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.it().join(\"/\");\n    }, e.prototype.toString = function() {\n        return this.rt();\n    }, \n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */\n    e.ot = function() {\n        for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n                for (var r = [], i = 0, o = t; i < o.length; i++) {\n            var u = o[i];\n            if (u.indexOf(\"//\") >= 0) throw new q(M.INVALID_ARGUMENT, \"Invalid segment (\" + u + \"). Paths must not contain // in them.\");\n            // Strip leading and traling slashed.\n                        r.push.apply(r, u.split(\"/\").filter((function(t) {\n                return t.length > 0;\n            })));\n        }\n        return new e(r);\n    }, e.ct = function() {\n        return new e([]);\n    }, e;\n}(W), J = /^[_a-zA-Z][_a-zA-Z0-9]*$/, $ = /** @class */ function(t) {\n    function e() {\n        return null !== t && t.apply(this, arguments) || this;\n    }\n    return m(e, t), e.prototype.J = function(t, n, r) {\n        return new e(t, n, r);\n    }, \n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */\n    e.at = function(t) {\n        return J.test(t);\n    }, e.prototype.rt = function() {\n        return this.it().map((function(t) {\n            return t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), e.at(t) || (t = \"`\" + t + \"`\"), \n            t;\n        })).join(\".\");\n    }, e.prototype.toString = function() {\n        return this.rt();\n    }, \n    /**\n     * Returns true if this field references the key of a document.\n     */\n    e.prototype.ut = function() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }, \n    /**\n     * The field designating the key of a document.\n     */\n    e.ht = function() {\n        return new e([ \"__name__\" ]);\n    }, \n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */\n    e.lt = function(t) {\n        for (var n = [], r = \"\", i = 0, o = function() {\n            if (0 === r.length) throw new q(M.INVALID_ARGUMENT, \"Invalid field path (\" + t + \"). Paths must not be empty, begin with '.', end with '.', or contain '..'\");\n            n.push(r), r = \"\";\n        }, u = !1; i < t.length; ) {\n            var s = t[i];\n            if (\"\\\\\" === s) {\n                if (i + 1 === t.length) throw new q(M.INVALID_ARGUMENT, \"Path has trailing escape character: \" + t);\n                var a = t[i + 1];\n                if (\"\\\\\" !== a && \".\" !== a && \"`\" !== a) throw new q(M.INVALID_ARGUMENT, \"Path has invalid escape sequence: \" + t);\n                r += a, i += 2;\n            } else \"`\" === s ? (u = !u, i++) : \".\" !== s || u ? (r += s, i++) : (o(), i++);\n        }\n        if (o(), u) throw new q(M.INVALID_ARGUMENT, \"Unterminated ` in path: \" + t);\n        return new e(n);\n    }, e.ct = function() {\n        return new e([]);\n    }, e;\n}(W), tt = /** @class */ function() {\n    function t(t) {\n        this.path = t;\n    }\n    return t._t = function(e) {\n        return new t(Z.ot(e));\n    }, t.ft = function(e) {\n        return new t(Z.ot(e).Y(5));\n    }, \n    /** Returns true if the document is in the specified collectionId. */ t.prototype.dt = function(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }, t.prototype.isEqual = function(t) {\n        return null !== t && 0 === Z.H(this.path, t.path);\n    }, t.prototype.toString = function() {\n        return this.path.toString();\n    }, t.H = function(t, e) {\n        return Z.H(t.path, e.path);\n    }, t.wt = function(t) {\n        return t.length % 2 == 0;\n    }, \n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */\n    t.Et = function(e) {\n        return new t(new Z(e.slice()));\n    }, t;\n}();\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction et(t) {\n    var e = 0;\n    for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction nt(t, e) {\n    for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\nfunction rt(t) {\n    for (var e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ var it = /** @class */ function() {\n    function t(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort($.H)\n        /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */;\n    }\n    return t.prototype.Tt = function(t) {\n        for (var e = 0, n = this.fields; e < n.length; e++) {\n            if (n[e].nt(t)) return !0;\n        }\n        return !1;\n    }, t.prototype.isEqual = function(t) {\n        return L(this.fields, t.fields, (function(t, e) {\n            return t.isEqual(e);\n        }));\n    }, t;\n}(), ot = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */\nfunction ut(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (k(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        var e = 0, n = ot.exec(t);\n        if (k(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            var r = n[1];\n            r = (r + \"000000000\").substr(0, 9), e = Number(r);\n        }\n        // Parse the date to get the seconds.\n                var i = new Date(t);\n        return {\n            seconds: Math.floor(i.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: st(t.seconds),\n        nanos: st(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function st(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function at(t) {\n    return \"string\" == typeof t ? U.fromBase64String(t) : U.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function ct(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Creates a new ServerTimestamp proto value (using the internal format).\n */\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function ht(t) {\n    var e = t.mapValue.fields.__previous_value__;\n    return ct(e) ? ht(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function ft(t) {\n    var e = ut(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new K(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Sentinel value that sorts before any Mutation Batch ID. */\n/**\n * Returns whether a variable is either undefined or null.\n */ function lt(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function pt(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */ function dt(t) {\n    return \"number\" == typeof t && Number.isInteger(t) && !pt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Extracts the backend's type order for the provided value. */ function vt(t) {\n    return \"nullValue\" in t ? 0 /* NullValue */ : \"booleanValue\" in t ? 1 /* BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* NumberValue */ : \"timestampValue\" in t ? 3 /* TimestampValue */ : \"stringValue\" in t ? 5 /* StringValue */ : \"bytesValue\" in t ? 6 /* BlobValue */ : \"referenceValue\" in t ? 7 /* RefValue */ : \"geoPointValue\" in t ? 8 /* GeoPointValue */ : \"arrayValue\" in t ? 9 /* ArrayValue */ : \"mapValue\" in t ? ct(t) ? 4 /* ServerTimestampValue */ : 10 /* ObjectValue */ : x();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function yt(t, e) {\n    var n = vt(t);\n    if (n !== vt(e)) return !1;\n    switch (n) {\n      case 0 /* NullValue */ :\n        return !0;\n\n      case 1 /* BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* ServerTimestampValue */ :\n        return ft(t).isEqual(ft(e));\n\n      case 3 /* TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            var n = ut(t.timestampValue), r = ut(e.timestampValue);\n            return n.seconds === r.seconds && n.nanos === r.nanos;\n        }(t, e);\n\n      case 5 /* StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* BlobValue */ :\n        return function(t, e) {\n            return at(t.bytesValue).isEqual(at(e.bytesValue));\n        }(t, e);\n\n      case 7 /* RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* GeoPointValue */ :\n        return function(t, e) {\n            return st(t.geoPointValue.latitude) === st(e.geoPointValue.latitude) && st(t.geoPointValue.longitude) === st(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return st(t.integerValue) === st(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                var n = st(t.doubleValue), r = st(e.doubleValue);\n                return n === r ? pt(n) === pt(r) : isNaN(n) && isNaN(r);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* ArrayValue */ :\n        return L(t.arrayValue.values || [], e.arrayValue.values || [], yt);\n\n      case 10 /* ObjectValue */ :\n        return function(t, e) {\n            var n = t.mapValue.fields || {}, r = e.mapValue.fields || {};\n            if (et(n) !== et(r)) return !1;\n            for (var i in n) if (n.hasOwnProperty(i) && (void 0 === r[i] || !yt(n[i], r[i]))) return !1;\n            return !0;\n        }(t, e);\n\n      default:\n        return x();\n    }\n}\n\nfunction mt(t, e) {\n    return void 0 !== (t.values || []).find((function(t) {\n        return yt(t, e);\n    }));\n}\n\nfunction gt(t, e) {\n    var n = vt(t), r = vt(e);\n    if (n !== r) return C(n, r);\n    switch (n) {\n      case 0 /* NullValue */ :\n        return 0;\n\n      case 1 /* BooleanValue */ :\n        return C(t.booleanValue, e.booleanValue);\n\n      case 2 /* NumberValue */ :\n        return function(t, e) {\n            var n = st(t.integerValue || t.doubleValue), r = st(e.integerValue || e.doubleValue);\n            return n < r ? -1 : n > r ? 1 : n === r ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TimestampValue */ :\n        return wt(t.timestampValue, e.timestampValue);\n\n      case 4 /* ServerTimestampValue */ :\n        return wt(ft(t), ft(e));\n\n      case 5 /* StringValue */ :\n        return C(t.stringValue, e.stringValue);\n\n      case 6 /* BlobValue */ :\n        return function(t, e) {\n            var n = at(t), r = at(e);\n            return n._(r);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* RefValue */ :\n        return function(t, e) {\n            for (var n = t.split(\"/\"), r = e.split(\"/\"), i = 0; i < n.length && i < r.length; i++) {\n                var o = C(n[i], r[i]);\n                if (0 !== o) return o;\n            }\n            return C(n.length, r.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* GeoPointValue */ :\n        return function(t, e) {\n            var n = C(st(t.latitude), st(e.latitude));\n            return 0 !== n ? n : C(st(t.longitude), st(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* ArrayValue */ :\n        return function(t, e) {\n            for (var n = t.values || [], r = e.values || [], i = 0; i < n.length && i < r.length; ++i) {\n                var o = gt(n[i], r[i]);\n                if (o) return o;\n            }\n            return C(n.length, r.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* ObjectValue */ :\n        return function(t, e) {\n            var n = t.fields || {}, r = Object.keys(n), i = e.fields || {}, o = Object.keys(i);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n                        r.sort(), o.sort();\n            for (var u = 0; u < r.length && u < o.length; ++u) {\n                var s = C(r[u], o[u]);\n                if (0 !== s) return s;\n                var a = gt(n[r[u]], i[o[u]]);\n                if (0 !== a) return a;\n            }\n            return C(r.length, o.length);\n        }(t.mapValue, e.mapValue);\n\n      default:\n        throw x();\n    }\n}\n\nfunction wt(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return C(t, e);\n    var n = ut(t), r = ut(e), i = C(n.seconds, r.seconds);\n    return 0 !== i ? i : C(n.nanos, r.nanos);\n}\n\nfunction bt(t) {\n    return _t(t);\n}\n\nfunction _t(t) {\n    return \"nullValue\" in t ? \"null\" : \"booleanValue\" in t ? \"\" + t.booleanValue : \"integerValue\" in t ? \"\" + t.integerValue : \"doubleValue\" in t ? \"\" + t.doubleValue : \"timestampValue\" in t ? function(t) {\n        var e = ut(t);\n        return \"time(\" + e.seconds + \",\" + e.nanos + \")\";\n    }(t.timestampValue) : \"stringValue\" in t ? t.stringValue : \"bytesValue\" in t ? at(t.bytesValue).toBase64() : \"referenceValue\" in t ? (n = t.referenceValue, \n    tt.ft(n).toString()) : \"geoPointValue\" in t ? \"geo(\" + (e = t.geoPointValue).latitude + \",\" + e.longitude + \")\" : \"arrayValue\" in t ? function(t) {\n        for (var e = \"[\", n = !0, r = 0, i = t.values || []; r < i.length; r++) {\n            n ? n = !1 : e += \",\", e += _t(i[r]);\n        }\n        return e + \"]\";\n    }(t.arrayValue) : \"mapValue\" in t ? function(t) {\n        for (\n        // Iteration order in JavaScript is not guaranteed. To ensure that we generate\n        // matching canonical IDs for identical maps, we need to sort the keys.\n        var e = \"{\", n = !0, r = 0, i = Object.keys(t.fields || {}).sort(); r < i.length; r++) {\n            var o = i[r];\n            n ? n = !1 : e += \",\", e += o + \":\" + _t(t.fields[o]);\n        }\n        return e + \"}\";\n    }(t.mapValue) : x();\n    var e, n;\n}\n\nfunction It(t, e) {\n    return {\n        referenceValue: \"projects/\" + t.projectId + \"/databases/\" + t.database + \"/documents/\" + e.path.rt()\n    };\n}\n\n/** Returns true if `value` is an IntegerValue . */ function Et(t) {\n    return !!t && \"integerValue\" in t;\n}\n\n/** Returns true if `value` is a DoubleValue. */\n/** Returns true if `value` is an ArrayValue. */ function Tt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function Nt(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function At(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function Dt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ var St = /** @class */ function() {\n    function t(t) {\n        this.proto = t;\n    }\n    return t.empty = function() {\n        return new t({\n            mapValue: {}\n        });\n    }, \n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or if there it doesn't exist.\n     */\n    t.prototype.field = function(t) {\n        if (t.et()) return this.proto;\n        for (var e = this.proto, n = 0; n < t.length - 1; ++n) {\n            if (!e.mapValue.fields) return null;\n            if (!Dt(e = e.mapValue.fields[t.get(n)])) return null;\n        }\n        return (e = (e.mapValue.fields || {})[t.tt()]) || null;\n    }, t.prototype.isEqual = function(t) {\n        return yt(this.proto, t.proto);\n    }, t;\n}(), xt = /** @class */ function() {\n    /**\n     * @param baseObject - The object to mutate.\n     */\n    function t(t) {\n        void 0 === t && (t = St.empty()), this.It = t, \n        /** A map that contains the accumulated changes in this builder. */\n        this.At = new Map;\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     * @returns The current Builder instance.\n     */    return t.prototype.set = function(t, e) {\n        return this.Rt(t, e), this;\n    }, \n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     * @returns The current Builder instance.\n     */\n    t.prototype.delete = function(t) {\n        return this.Rt(t, null), this;\n    }, \n    /**\n     * Adds `value` to the overlay map at `path`. Creates nested map entries if\n     * needed.\n     */\n    t.prototype.Rt = function(t, e) {\n        for (var n = this.At, r = 0; r < t.length - 1; ++r) {\n            var i = t.get(r), o = n.get(i);\n            o instanceof Map ? \n            // Re-use a previously created map\n            n = o : o && 10 /* ObjectValue */ === vt(o) ? (\n            // Convert the existing Protobuf MapValue into a map\n            o = new Map(Object.entries(o.mapValue.fields || {})), n.set(i, o), n = o) : (\n            // Create an empty map to represent the current nesting level\n            o = new Map, n.set(i, o), n = o);\n        }\n        n.set(t.tt(), e);\n    }, \n    /** Returns an ObjectValue with all mutations applied. */ t.prototype.Pt = function() {\n        var t = this.yt($.ct(), this.At);\n        return null != t ? new St(t) : this.It;\n    }, \n    /**\n     * Applies any overlays from `currentOverlays` that exist at `currentPath`\n     * and returns the merged data at `currentPath` (or null if there were no\n     * changes).\n     *\n     * @param currentPath - The path at the current nesting level. Can be set to\n     * FieldValue.emptyPath() to represent the root.\n     * @param currentOverlays - The overlays at the current nesting level in the\n     * same format as `overlayMap`.\n     * @returns The merged data at `currentPath` or null if no modifications\n     * were applied.\n     */\n    t.prototype.yt = function(t, e) {\n        var n = this, r = !1, i = this.It.field(t), o = Dt(i) ? // If there is already data at the current path, base our\n        Object.assign({}, i.mapValue.fields) : {};\n        return e.forEach((function(e, i) {\n            if (e instanceof Map) {\n                var u = n.yt(t.child(i), e);\n                null != u && (o[i] = u, r = !0);\n            } else null !== e ? (o[i] = e, r = !0) : o.hasOwnProperty(i) && (delete o[i], r = !0);\n        })), r ? {\n            mapValue: {\n                fields: o\n            }\n        } : null;\n    }, t;\n}();\n\n/**\n * An ObjectValueBuilder provides APIs to set and delete fields from an\n * ObjectValue.\n */\n/**\n * Returns a FieldMask built from all fields in a MapValue.\n */\nfunction kt(t) {\n    var e = [];\n    return nt(t.fields || {}, (function(t, n) {\n        var r = new $([ t ]);\n        if (Dt(n)) {\n            var i = kt(n.mapValue).fields;\n            if (0 === i.length) \n            // Preserve the empty map by adding it to the FieldMask.\n            e.push(r); else \n            // For nested and non-empty ObjectValues, add the FieldPath of the\n            // leaf nodes.\n            for (var o = 0, u = i; o < u.length; o++) {\n                var s = u[o];\n                e.push(r.child(s));\n            }\n        } else \n        // For nested and non-empty ObjectValues, add the FieldPath of the leaf\n        // nodes.\n        e.push(r);\n    })), new it(e)\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * The result of a lookup for a given path may be an existing document or a\n * marker that this document does not exist at a given version.\n */;\n}\n\nvar Ot = function(t, e) {\n    this.key = t, this.version = e;\n}, Pt = /** @class */ function(t) {\n    function e(e, n, r, i) {\n        var o = this;\n        return (o = t.call(this, e, n) || this).gt = r, o.Vt = !!i.Vt, o.hasCommittedMutations = !!i.hasCommittedMutations, \n        o;\n    }\n    return m(e, t), e.prototype.field = function(t) {\n        return this.gt.field(t);\n    }, e.prototype.data = function() {\n        return this.gt;\n    }, e.prototype.bt = function() {\n        return this.gt.proto;\n    }, e.prototype.isEqual = function(t) {\n        return t instanceof e && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.Vt === t.Vt && this.hasCommittedMutations === t.hasCommittedMutations && this.gt.isEqual(t.gt);\n    }, e.prototype.toString = function() {\n        return \"Document(\" + this.key + \", \" + this.version + \", \" + this.gt.toString() + \", {hasLocalMutations: \" + this.Vt + \"}), {hasCommittedMutations: \" + this.hasCommittedMutations + \"})\";\n    }, Object.defineProperty(e.prototype, \"hasPendingWrites\", {\n        get: function() {\n            return this.Vt || this.hasCommittedMutations;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), e;\n}(Ot), Vt = /** @class */ function(t) {\n    function e(e, n, r) {\n        var i = this;\n        return (i = t.call(this, e, n) || this).hasCommittedMutations = !(!r || !r.hasCommittedMutations), \n        i;\n    }\n    return m(e, t), e.prototype.toString = function() {\n        return \"NoDocument(\" + this.key + \", \" + this.version + \")\";\n    }, Object.defineProperty(e.prototype, \"hasPendingWrites\", {\n        get: function() {\n            return this.hasCommittedMutations;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), e.prototype.isEqual = function(t) {\n        return t instanceof e && t.hasCommittedMutations === this.hasCommittedMutations && t.version.isEqual(this.version) && t.key.isEqual(this.key);\n    }, e;\n}(Ot), Ct = /** @class */ function(t) {\n    function e() {\n        return null !== t && t.apply(this, arguments) || this;\n    }\n    return m(e, t), e.prototype.toString = function() {\n        return \"UnknownDocument(\" + this.key + \", \" + this.version + \")\";\n    }, Object.defineProperty(e.prototype, \"hasPendingWrites\", {\n        get: function() {\n            return !0;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), e.prototype.isEqual = function(t) {\n        return t instanceof e && t.version.isEqual(this.version) && t.key.isEqual(this.key);\n    }, e;\n}(Ot), Lt = function(t, e, n, r, i, o, u) {\n    void 0 === e && (e = null), void 0 === n && (n = []), void 0 === r && (r = []), \n    void 0 === i && (i = null), void 0 === o && (o = null), void 0 === u && (u = null), \n    this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = i, \n    this.startAt = o, this.endAt = u, this.vt = null;\n};\n\n/**\n * Represents a document in Firestore with a key, version, data and whether the\n * data has local mutations applied to it.\n */\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */\nfunction Rt(t, e, n, r, i, o, u) {\n    return void 0 === e && (e = null), void 0 === n && (n = []), void 0 === r && (r = []), \n    void 0 === i && (i = null), void 0 === o && (o = null), void 0 === u && (u = null), \n    new Lt(t, e, n, r, i, o, u);\n}\n\nfunction Ut(t) {\n    var e = O(t);\n    if (null === e.vt) {\n        var n = e.path.rt();\n        null !== e.collectionGroup && (n += \"|cg:\" + e.collectionGroup), n += \"|f:\", n += e.filters.map((function(t) {\n            return function(t) {\n                // TODO(b/29183165): Technically, this won't be unique if two values have\n                // the same description, such as the int 3 and the string \"3\". So we should\n                // add the types in here somehow, too.\n                return t.field.rt() + t.op.toString() + bt(t.value);\n            }(t);\n        })).join(\",\"), n += \"|ob:\", n += e.orderBy.map((function(t) {\n            return function(t) {\n                // TODO(b/29183165): Make this collision robust.\n                return t.field.rt() + t.dir;\n            }(t);\n        })).join(\",\"), lt(e.limit) || (n += \"|l:\", n += e.limit), e.startAt && (n += \"|lb:\", \n        n += Wt(e.startAt)), e.endAt && (n += \"|ub:\", n += Wt(e.endAt)), e.vt = n;\n    }\n    return e.vt;\n}\n\nfunction Mt(t, e) {\n    if (t.limit !== e.limit) return !1;\n    if (t.orderBy.length !== e.orderBy.length) return !1;\n    for (var n = 0; n < t.orderBy.length; n++) if (!Jt(t.orderBy[n], e.orderBy[n])) return !1;\n    if (t.filters.length !== e.filters.length) return !1;\n    for (var r = 0; r < t.filters.length; r++) if (i = t.filters[r], o = e.filters[r], \n    i.op !== o.op || !i.field.isEqual(o.field) || !yt(i.value, o.value)) return !1;\n    var i, o;\n    return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!te(t.startAt, e.startAt) && te(t.endAt, e.endAt);\n}\n\nfunction qt(t) {\n    return tt.wt(t.path) && null === t.collectionGroup && 0 === t.filters.length;\n}\n\nvar Ft = /** @class */ function(t) {\n    function e(e, n, r) {\n        var i = this;\n        return (i = t.call(this) || this).field = e, i.op = n, i.value = r, i;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    return m(e, t), e.create = function(t, n, r) {\n        return t.ut() ? \"in\" /* IN */ === n || \"not-in\" /* NOT_IN */ === n ? this.St(t, n, r) : new jt(t, n, r) : \"array-contains\" /* ARRAY_CONTAINS */ === n ? new Qt(t, r) : \"in\" /* IN */ === n ? new Yt(t, r) : \"not-in\" /* NOT_IN */ === n ? new Ht(t, r) : \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === n ? new Kt(t, r) : new e(t, n, r);\n    }, e.St = function(t, e, n) {\n        return \"in\" /* IN */ === e ? new zt(t, n) : new Gt(t, n);\n    }, e.prototype.matches = function(t) {\n        var e = t.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* NOT_EQUAL */ === this.op ? null !== e && this.Dt(gt(e, this.value)) : null !== e && vt(this.value) === vt(e) && this.Dt(gt(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }, e.prototype.Dt = function(t) {\n        switch (this.op) {\n          case \"<\" /* LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return x();\n        }\n    }, e.prototype.Ct = function() {\n        return [ \"<\" /* LESS_THAN */ , \"<=\" /* LESS_THAN_OR_EQUAL */ , \">\" /* GREATER_THAN */ , \">=\" /* GREATER_THAN_OR_EQUAL */ , \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ].indexOf(this.op) >= 0;\n    }, e;\n}((function() {}));\n\nvar jt = /** @class */ function(t) {\n    function e(e, n, r) {\n        var i = this;\n        return (i = t.call(this, e, n, r) || this).key = tt.ft(r.referenceValue), i;\n    }\n    return m(e, t), e.prototype.matches = function(t) {\n        var e = tt.H(t.key, this.key);\n        return this.Dt(e);\n    }, e;\n}(Ft), zt = /** @class */ function(t) {\n    function e(e, n) {\n        var r = this;\n        return (r = t.call(this, e, \"in\" /* IN */ , n) || this).keys = Bt(\"in\" /* IN */ , n), \n        r;\n    }\n    return m(e, t), e.prototype.matches = function(t) {\n        return this.keys.some((function(e) {\n            return e.isEqual(t.key);\n        }));\n    }, e;\n}(Ft), Gt = /** @class */ function(t) {\n    function e(e, n) {\n        var r = this;\n        return (r = t.call(this, e, \"not-in\" /* NOT_IN */ , n) || this).keys = Bt(\"not-in\" /* NOT_IN */ , n), \n        r;\n    }\n    return m(e, t), e.prototype.matches = function(t) {\n        return !this.keys.some((function(e) {\n            return e.isEqual(t.key);\n        }));\n    }, e;\n}(Ft);\n\n/** Filter that matches on key fields within an array. */ function Bt(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((function(t) {\n        return tt.ft(t.referenceValue);\n    }));\n}\n\n/** A Filter that implements the array-contains operator. */ var Qt = /** @class */ function(t) {\n    function e(e, n) {\n        return t.call(this, e, \"array-contains\" /* ARRAY_CONTAINS */ , n) || this;\n    }\n    return m(e, t), e.prototype.matches = function(t) {\n        var e = t.field(this.field);\n        return Tt(e) && mt(e.arrayValue, this.value);\n    }, e;\n}(Ft), Yt = /** @class */ function(t) {\n    function e(e, n) {\n        return t.call(this, e, \"in\" /* IN */ , n) || this;\n    }\n    return m(e, t), e.prototype.matches = function(t) {\n        var e = t.field(this.field);\n        return null !== e && mt(this.value.arrayValue, e);\n    }, e;\n}(Ft), Ht = /** @class */ function(t) {\n    function e(e, n) {\n        return t.call(this, e, \"not-in\" /* NOT_IN */ , n) || this;\n    }\n    return m(e, t), e.prototype.matches = function(t) {\n        if (mt(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        var e = t.field(this.field);\n        return null !== e && !mt(this.value.arrayValue, e);\n    }, e;\n}(Ft), Kt = /** @class */ function(t) {\n    function e(e, n) {\n        return t.call(this, e, \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , n) || this;\n    }\n    return m(e, t), e.prototype.matches = function(t) {\n        var e = this, n = t.field(this.field);\n        return !(!Tt(n) || !n.arrayValue.values) && n.arrayValue.values.some((function(t) {\n            return mt(e.value.arrayValue, t);\n        }));\n    }, e;\n}(Ft), Xt = function(t, e) {\n    this.position = t, this.before = e;\n};\n\n/** A Filter that implements the IN operator. */ function Wt(t) {\n    // TODO(b/29183165): Make this collision robust.\n    return (t.before ? \"b\" : \"a\") + \":\" + t.position.map((function(t) {\n        return bt(t);\n    })).join(\",\");\n}\n\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ var Zt = function(t, e /* ASCENDING */) {\n    void 0 === e && (e = \"asc\"), this.field = t, this.dir = e;\n};\n\nfunction Jt(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\n/**\n * Returns true if a document sorts before a bound using the provided sort\n * order.\n */ function $t(t, e, n) {\n    for (var r = 0, i = 0; i < t.position.length; i++) {\n        var o = e[i], u = t.position[i];\n        if (r = o.field.ut() ? tt.H(tt.ft(u.referenceValue), n.key) : gt(u, n.field(o.field)), \n        \"desc\" /* DESCENDING */ === o.dir && (r *= -1), 0 !== r) break;\n    }\n    return t.before ? r <= 0 : r < 0;\n}\n\nfunction te(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.before !== e.before || t.position.length !== e.position.length) return !1;\n    for (var n = 0; n < t.position.length; n++) if (!yt(t.position[n], e.position[n])) return !1;\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */ var ee = \n/**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\nfunction(t, e, n, r, i, o /* First */ , u, s) {\n    void 0 === e && (e = null), void 0 === n && (n = []), void 0 === r && (r = []), \n    void 0 === i && (i = null), void 0 === o && (o = \"F\"), void 0 === u && (u = null), \n    void 0 === s && (s = null), this.path = t, this.collectionGroup = e, this.xt = n, \n    this.filters = r, this.limit = i, this.limitType = o, this.startAt = u, this.endAt = s, \n    this.Nt = null, \n    // The corresponding `Target` of this `Query` instance.\n    this.$t = null, this.startAt, this.endAt;\n};\n\n/** Creates a new Query instance with the options provided. */ function ne(t, e, n, r, i, o, u, s) {\n    return new ee(t, e, n, r, i, o, u, s);\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function re(t) {\n    return new ee(t);\n}\n\n/**\n * Helper to convert a collection group query into a collection query at a\n * specific path. This is used when executing collection group queries, since\n * we have to split the query into a set of collection queries at multiple\n * paths.\n */ function ie(t) {\n    return !lt(t.limit) && \"F\" /* First */ === t.limitType;\n}\n\nfunction oe(t) {\n    return !lt(t.limit) && \"L\" /* Last */ === t.limitType;\n}\n\nfunction ue(t) {\n    return t.xt.length > 0 ? t.xt[0].field : null;\n}\n\nfunction se(t) {\n    for (var e = 0, n = t.filters; e < n.length; e++) {\n        var r = n[e];\n        if (r.Ct()) return r.field;\n    }\n    return null;\n}\n\n/**\n * Checks if any of the provided Operators are included in the query and\n * returns the first one that is, or null if none are.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */ function ae(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function ce(t) {\n    var e = O(t);\n    if (null === e.Nt) {\n        e.Nt = [];\n        var n = se(e), r = ue(e);\n        if (null !== n && null === r) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        n.ut() || e.Nt.push(new Zt(n)), e.Nt.push(new Zt($.ht(), \"asc\" /* ASCENDING */)); else {\n            for (var i = !1, o = 0, u = e.xt; o < u.length; o++) {\n                var s = u[o];\n                e.Nt.push(s), s.field.ut() && (i = !0);\n            }\n            if (!i) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                var a = e.xt.length > 0 ? e.xt[e.xt.length - 1].dir : \"asc\" /* ASCENDING */;\n                e.Nt.push(new Zt($.ht(), a));\n            }\n        }\n    }\n    return e.Nt;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function he(t) {\n    var e = O(t);\n    if (!e.$t) if (\"F\" /* First */ === e.limitType) e.$t = Rt(e.path, e.collectionGroup, ce(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        for (\n        // Flip the orderBy directions since we want the last results\n        var n = [], r = 0, i = ce(e); r < i.length; r++) {\n            var o = i[r], u = \"desc\" /* DESCENDING */ === o.dir ? \"asc\" /* ASCENDING */ : \"desc\" /* DESCENDING */;\n            n.push(new Zt(o.field, u));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                var s = e.endAt ? new Xt(e.endAt.position, !e.endAt.before) : null, a = e.startAt ? new Xt(e.startAt.position, !e.startAt.before) : null;\n        // Now return as a LimitType.First query.\n                e.$t = Rt(e.path, e.collectionGroup, n, e.filters, e.limit, s, a);\n    }\n    return e.$t;\n}\n\nfunction fe(t, e, n) {\n    return new ee(t.path, t.collectionGroup, t.xt.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n}\n\nfunction le(t, e) {\n    return Mt(he(t), he(e)) && t.limitType === e.limitType;\n}\n\n// TODO(b/29183165): This is used to get a unique string from a query to, for\n// example, use as a dictionary key, but the implementation is subject to\n// collisions. Make it collision-free.\nfunction pe(t) {\n    return Ut(he(t)) + \"|lt:\" + t.limitType;\n}\n\nfunction de(t) {\n    return \"Query(target=\" + function(t) {\n        var e = t.path.rt();\n        return null !== t.collectionGroup && (e += \" collectionGroup=\" + t.collectionGroup), \n        t.filters.length > 0 && (e += \", filters: [\" + t.filters.map((function(t) {\n            return (e = t).field.rt() + \" \" + e.op + \" \" + bt(e.value);\n            /** Returns a debug description for `filter`. */            var e;\n            /** Filter that matches on key fields (i.e. '__name__'). */        })).join(\", \") + \"]\"), \n        lt(t.limit) || (e += \", limit: \" + t.limit), t.orderBy.length > 0 && (e += \", orderBy: [\" + t.orderBy.map((function(t) {\n            return function(t) {\n                return t.field.rt() + \" (\" + t.dir + \")\";\n            }(t);\n        })).join(\", \") + \"]\"), t.startAt && (e += \", startAt: \" + Wt(t.startAt)), t.endAt && (e += \", endAt: \" + Wt(t.endAt)), \n        \"Target(\" + e + \")\";\n    }(he(t)) + \"; limitType=\" + t.limitType + \")\";\n}\n\n/** Returns whether `doc` matches the constraints of `query`. */ function ve(t, e) {\n    return function(t, e) {\n        var n = e.key.path;\n        return null !== t.collectionGroup ? e.key.dt(t.collectionGroup) && t.path.nt(n) : tt.wt(t.path) ? t.path.isEqual(n) : t.path.st(n);\n    }(t, e) && function(t, e) {\n        for (var n = 0, r = t.xt; n < r.length; n++) {\n            var i = r[n];\n            // order by key always matches\n                        if (!i.field.ut() && null === e.field(i.field)) return !1;\n        }\n        return !0;\n    }(t, e) && function(t, e) {\n        for (var n = 0, r = t.filters; n < r.length; n++) {\n            if (!r[n].matches(e)) return !1;\n        }\n        return !0;\n    }(t, e) && function(t, e) {\n        return !(t.startAt && !$t(t.startAt, ce(t), e)) && (!t.endAt || !$t(t.endAt, ce(t), e));\n    }(t, e);\n}\n\nfunction ye(t) {\n    return function(e, n) {\n        for (var r = !1, i = 0, o = ce(t); i < o.length; i++) {\n            var u = o[i], s = me(u, e, n);\n            if (0 !== s) return s;\n            r = r || u.field.ut();\n        }\n        return 0;\n    };\n}\n\nfunction me(t, e, n) {\n    var r = t.field.ut() ? tt.H(e.key, n.key) : function(t, e, n) {\n        var r = e.field(t), i = n.field(t);\n        return null !== r && null !== i ? gt(r, i) : x();\n    }(t.field, e, n);\n    switch (t.dir) {\n      case \"asc\" /* ASCENDING */ :\n        return r;\n\n      case \"desc\" /* DESCENDING */ :\n        return -1 * r;\n\n      default:\n        return x();\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable set of metadata that the local store tracks for each target.\n */ var ge = /** @class */ function() {\n    function t(\n    /** The target being listened to. */\n    t, \n    /**\n     * The target ID to which the target corresponds; Assigned by the\n     * LocalStore for user listens and by the SyncEngine for limbo watches.\n     */\n    e, \n    /** The purpose of the target. */\n    n, \n    /**\n     * The sequence number of the last transaction during which this target data\n     * was modified.\n     */\n    r, \n    /** The latest snapshot version seen for this target. */\n    i\n    /**\n     * The maximum snapshot version at which the associated view\n     * contained no limbo documents.\n     */ , o\n    /**\n     * An opaque, server-assigned token that allows watching a target to be\n     * resumed after disconnecting without retransmitting all the data that\n     * matches the target. The resume token essentially identifies a point in\n     * time from which the server should resume sending results.\n     */ , u) {\n        void 0 === i && (i = X.min()), void 0 === o && (o = X.min()), void 0 === u && (u = U.T), \n        this.target = t, this.targetId = e, this.Ft = n, this.sequenceNumber = r, this.Ot = i, \n        this.lastLimboFreeSnapshotVersion = o, this.resumeToken = u;\n    }\n    /** Creates a new target data instance with an updated sequence number. */    return t.prototype.kt = function(e) {\n        return new t(this.target, this.targetId, this.Ft, e, this.Ot, this.lastLimboFreeSnapshotVersion, this.resumeToken);\n    }, \n    /**\n     * Creates a new target data instance with an updated resume token and\n     * snapshot version.\n     */\n    t.prototype.Mt = function(e, n) {\n        return new t(this.target, this.targetId, this.Ft, this.sequenceNumber, n, this.lastLimboFreeSnapshotVersion, e);\n    }, \n    /**\n     * Creates a new target data instance with an updated last limbo free\n     * snapshot version number.\n     */\n    t.prototype.Lt = function(e) {\n        return new t(this.target, this.targetId, this.Ft, this.sequenceNumber, this.Ot, e, this.resumeToken);\n    }, t;\n}();\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */ function we(t, e) {\n    if (t.Bt) {\n        if (isNaN(e)) return {\n            doubleValue: \"NaN\"\n        };\n        if (e === 1 / 0) return {\n            doubleValue: \"Infinity\"\n        };\n        if (e === -1 / 0) return {\n            doubleValue: \"-Infinity\"\n        };\n    }\n    return {\n        doubleValue: pt(e) ? \"-0\" : e\n    };\n}\n\n/**\n * Returns an IntegerValue for `value`.\n */ function be(t) {\n    return {\n        integerValue: \"\" + t\n    };\n}\n\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */ function _e(t, e) {\n    return dt(e) ? be(e) : we(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ var Ie = function() {\n    // Make sure that the structural type of `TransformOperation` is unique.\n    // See https://github.com/microsoft/TypeScript/issues/5451\n    this.qt = void 0;\n};\n\n/**\n * Computes the local transform result against the provided `previousValue`,\n * optionally using the provided localWriteTime.\n */ function Ee(t, e, n) {\n    return t instanceof Ae ? function(t, e) {\n        var n = {\n            fields: {\n                __type__: {\n                    stringValue: \"server_timestamp\"\n                },\n                __local_write_time__: {\n                    timestampValue: {\n                        seconds: t.seconds,\n                        nanos: t.nanoseconds\n                    }\n                }\n            }\n        };\n        return e && (n.fields.__previous_value__ = e), {\n            mapValue: n\n        };\n    }(n, e) : t instanceof De ? Se(t, e) : t instanceof xe ? ke(t, e) : function(t, e) {\n        // PORTING NOTE: Since JavaScript's integer arithmetic is limited to 53 bit\n        // precision and resolves overflows by reducing precision, we do not\n        // manually cap overflows at 2^63.\n        var n = Ne(t, e), r = Pe(n) + Pe(t.Ut);\n        return Et(n) && Et(t.Ut) ? be(r) : we(t.Qt, r);\n    }(t, e);\n}\n\n/**\n * Computes a final transform result after the transform has been acknowledged\n * by the server, potentially using the server-provided transformResult.\n */ function Te(t, e, n) {\n    // The server just sends null as the transform result for array operations,\n    // so we have to calculate a result the same as we do for local\n    // applications.\n    return t instanceof De ? Se(t, e) : t instanceof xe ? ke(t, e) : n;\n}\n\n/**\n * If this transform operation is not idempotent, returns the base value to\n * persist for this transform. If a base value is returned, the transform\n * operation is always applied to this base value, even if document has\n * already been updated.\n *\n * Base values provide consistent behavior for non-idempotent transforms and\n * allow us to return the same latency-compensated value even if the backend\n * has already applied the transform operation. The base value is null for\n * idempotent transforms, as they can be re-played even if the backend has\n * already applied them.\n *\n * @returns a base value to store along with the mutation, or null for\n * idempotent transforms.\n */ function Ne(t, e) {\n    return t instanceof Oe ? Et(n = e) || function(t) {\n        return !!t && \"doubleValue\" in t;\n    }(n) ? e : {\n        integerValue: 0\n    } : null;\n    var n;\n}\n\n/** Transforms a value into a server-generated timestamp. */ var Ae = /** @class */ function(t) {\n    function e() {\n        return null !== t && t.apply(this, arguments) || this;\n    }\n    return m(e, t), e;\n}(Ie), De = /** @class */ function(t) {\n    function e(e) {\n        var n = this;\n        return (n = t.call(this) || this).elements = e, n;\n    }\n    return m(e, t), e;\n}(Ie);\n\n/** Transforms an array value via a union operation. */ function Se(t, e) {\n    for (var n = Ve(e), r = function(t) {\n        n.some((function(e) {\n            return yt(e, t);\n        })) || n.push(t);\n    }, i = 0, o = t.elements; i < o.length; i++) {\n        r(o[i]);\n    }\n    return {\n        arrayValue: {\n            values: n\n        }\n    };\n}\n\n/** Transforms an array value via a remove operation. */ var xe = /** @class */ function(t) {\n    function e(e) {\n        var n = this;\n        return (n = t.call(this) || this).elements = e, n;\n    }\n    return m(e, t), e;\n}(Ie);\n\nfunction ke(t, e) {\n    for (var n = Ve(e), r = function(t) {\n        n = n.filter((function(e) {\n            return !yt(e, t);\n        }));\n    }, i = 0, o = t.elements; i < o.length; i++) {\n        r(o[i]);\n    }\n    return {\n        arrayValue: {\n            values: n\n        }\n    };\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ var Oe = /** @class */ function(t) {\n    function e(e, n) {\n        var r = this;\n        return (r = t.call(this) || this).Qt = e, r.Ut = n, r;\n    }\n    return m(e, t), e;\n}(Ie);\n\nfunction Pe(t) {\n    return st(t.integerValue || t.doubleValue);\n}\n\nfunction Ve(t) {\n    return Tt(t) && t.arrayValue.values ? t.arrayValue.values.slice() : [];\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ var Ce = function(t, e) {\n    this.field = t, this.transform = e;\n};\n\n/** The result of successfully applying a mutation to the backend. */\nvar Le = function(\n/**\n     * The version at which the mutation was committed:\n     *\n     * - For most operations, this is the updateTime in the WriteResult.\n     * - For deletes, the commitTime of the WriteResponse (because deletes are\n     *   not stored and have no updateTime).\n     *\n     * Note that these versions can be different: No-op writes will not change\n     * the updateTime even though the commitTime advances.\n     */\nt, \n/**\n     * The resulting fields returned from the backend after a mutation\n     * containing field transforms has been committed. Contains one FieldValue\n     * for each FieldTransform that was in the mutation.\n     *\n     * Will be null if the mutation did not contain any field transforms.\n     */\ne) {\n    this.version = t, this.transformResults = e;\n}, Re = /** @class */ function() {\n    function t(t, e) {\n        this.updateTime = t, this.exists = e\n        /** Creates a new empty Precondition. */;\n    }\n    return t.Kt = function() {\n        return new t;\n    }, \n    /** Creates a new Precondition with an exists flag. */ t.exists = function(e) {\n        return new t(void 0, e);\n    }, \n    /** Creates a new Precondition based on a version a document exists at. */ t.updateTime = function(e) {\n        return new t(e);\n    }, Object.defineProperty(t.prototype, \"Wt\", {\n        /** Returns whether this Precondition is empty. */ get: function() {\n            return void 0 === this.updateTime && void 0 === this.exists;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), t.prototype.isEqual = function(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }, t;\n}();\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */\n/**\n * Returns true if the preconditions is valid for the given document\n * (or null if no document is available).\n */\nfunction Ue(t, e) {\n    return void 0 !== t.updateTime ? e instanceof Pt && e.version.isEqual(t.updateTime) : void 0 === t.exists || t.exists === e instanceof Pt;\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        null                  Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      null                  null\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     null                  NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we return an `UnknownDocument` and rely on Watch to send us the\n * updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Subclasses of Mutation need to implement applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document.\n */ var Me = function() {};\n\n/**\n * Applies this mutation to the given MaybeDocument or null for the purposes\n * of computing a new remote document. If the input document doesn't match the\n * expected state (e.g. it is null or outdated), an `UnknownDocument` can be\n * returned.\n *\n * @param mutation - The mutation to apply.\n * @param maybeDoc - The document to mutate. The input document can be null if\n *     the client has no knowledge of the pre-mutation state of the document.\n * @param mutationResult - The result of applying the mutation from the backend.\n * @returns The mutated document. The returned document may be an\n *     UnknownDocument if the mutation could not be applied to the locally\n *     cached base document.\n */ function qe(t, e, n) {\n    return t instanceof Be ? function(t, e, n) {\n        // Unlike applySetMutationToLocalView, if we're applying a mutation to a\n        // remote document the server has accepted the mutation so the precondition\n        // must have held.\n        var r = t.value;\n        if (n.transformResults) {\n            var i = He(t.fieldTransforms, e, n.transformResults);\n            r = Xe(t.fieldTransforms, r, i);\n        }\n        return new Pt(t.key, n.version, r, {\n            hasCommittedMutations: !0\n        });\n    }(t, e, n) : t instanceof Qe ? function(t, e, n) {\n        if (!Ue(t.jt, e)) \n        // Since the mutation was not rejected, we know that the precondition\n        // matched on the backend. We therefore must not have the expected version\n        // of the document in our cache and return an UnknownDocument with the\n        // known updateTime.\n        return new Ct(t.key, n.version);\n        var r = Ye(t, e, n.transformResults ? He(t.fieldTransforms, e, n.transformResults) : []);\n        return new Pt(t.key, n.version, r, {\n            hasCommittedMutations: !0\n        });\n    }(t, e, n) : function(t, e, n) {\n        // Unlike applyToLocalView, if we're applying a mutation to a remote\n        // document the server has accepted the mutation so the precondition must\n        // have held.\n        return new Vt(t.key, n.version, {\n            hasCommittedMutations: !0\n        });\n    }(t, 0, n);\n}\n\n/**\n * Applies this mutation to the given MaybeDocument or null for the purposes\n * of computing the new local view of a document. Both the input and returned\n * documents can be null.\n *\n * @param mutation - The mutation to apply.\n * @param maybeDoc - The document to mutate. The input document can be null if\n *     the client has no knowledge of the pre-mutation state of the document.\n * @param localWriteTime - A timestamp indicating the local write time of the\n *     batch this mutation is a part of.\n * @returns The mutated document. The returned document may be null, but only\n *     if maybeDoc was null and the mutation would not create a new document.\n */ function Fe(t, e, n) {\n    return t instanceof Be ? function(t, e, n) {\n        if (!Ue(t.jt, e)) return e;\n        var r = t.value, i = Ke(t.fieldTransforms, n, e);\n        r = Xe(t.fieldTransforms, r, i);\n        var o = Ge(e);\n        return new Pt(t.key, o, r, {\n            Vt: !0\n        });\n    }(t, e, n) : t instanceof Qe ? function(t, e, n) {\n        if (!Ue(t.jt, e)) return e;\n        var r = Ge(e), i = Ye(t, e, Ke(t.fieldTransforms, n, e));\n        return new Pt(t.key, r, i, {\n            Vt: !0\n        });\n    }(t, e, n) : function(t, e) {\n        return Ue(t.jt, e) ? new Vt(t.key, X.min()) : e;\n    }(t, e);\n}\n\n/**\n * If this mutation is not idempotent, returns the base value to persist with\n * this mutation. If a base value is returned, the mutation is always applied\n * to this base value, even if document has already been updated.\n *\n * The base value is a sparse object that consists of only the document\n * fields for which this mutation contains a non-idempotent transformation\n * (e.g. a numeric increment). The provided value guarantees consistent\n * behavior for non-idempotent transforms and allow us to return the same\n * latency-compensated value even if the backend has already applied the\n * mutation. The base value is null for idempotent mutations, as they can be\n * re-played even if the backend has already applied them.\n *\n * @returns a base value to store along with the mutation, or null for\n * idempotent mutations.\n */ function je(t, e) {\n    return function(t, e) {\n        for (var n = null, r = 0, i = t; r < i.length; r++) {\n            var o = i[r], u = e instanceof Pt ? e.field(o.field) : void 0, s = Ne(o.transform, u || null);\n            null != s && (n = null == n ? (new xt).set(o.field, s) : n.set(o.field, s));\n        }\n        return n ? n.Pt() : null;\n    }(t.fieldTransforms, e);\n}\n\nfunction ze(t, e) {\n    return t.type === e.type && !!t.key.isEqual(e.key) && !!t.jt.isEqual(e.jt) && !!function(t, e) {\n        return void 0 === t && void 0 === e || !(!t || !e) && L(t, e, (function(t, e) {\n            return function(t, e) {\n                return t.field.isEqual(e.field) && function(t, e) {\n                    return t instanceof De && e instanceof De || t instanceof xe && e instanceof xe ? L(t.elements, e.elements, yt) : t instanceof Oe && e instanceof Oe ? yt(t.Ut, e.Ut) : t instanceof Ae && e instanceof Ae;\n                }(t.transform, e.transform);\n            }(t, e);\n        }));\n    }(t.fieldTransforms, e.fieldTransforms) && (0 /* Set */ === t.type ? t.value.isEqual(e.value) : 1 /* Patch */ !== t.type || t.data.isEqual(e.data) && t.Gt.isEqual(e.Gt));\n}\n\n/**\n * Returns the version from the given document for use as the result of a\n * mutation. Mutations are defined to return the version of the base document\n * only if it is an existing document. Deleted and unknown documents have a\n * post-mutation version of SnapshotVersion.min().\n */ function Ge(t) {\n    return t instanceof Pt ? t.version : X.min();\n}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ var Be = /** @class */ function(t) {\n    function e(e, n, r, i) {\n        void 0 === i && (i = []);\n        var o = this;\n        return (o = t.call(this) || this).key = e, o.value = n, o.jt = r, o.fieldTransforms = i, \n        o.type = 0 /* Set */ , o;\n    }\n    return m(e, t), e;\n}(Me), Qe = /** @class */ function(t) {\n    function e(e, n, r, i, o) {\n        void 0 === o && (o = []);\n        var u = this;\n        return (u = t.call(this) || this).key = e, u.data = n, u.Gt = r, u.jt = i, u.fieldTransforms = o, \n        u.type = 1 /* Patch */ , u;\n    }\n    return m(e, t), e;\n}(Me);\n\nfunction Ye(t, e, n) {\n    var r;\n    return r = function(t, e) {\n        var n = new xt(e);\n        return t.Gt.fields.forEach((function(e) {\n            if (!e.et()) {\n                var r = t.data.field(e);\n                null !== r ? n.set(e, r) : n.delete(e);\n            }\n        })), n.Pt();\n    }(t, r = e instanceof Pt ? e.data() : St.empty()), r = Xe(t.fieldTransforms, r, n);\n}\n\nfunction He(t, e, n) {\n    var r = [];\n    k(t.length === n.length);\n    for (var i = 0; i < n.length; i++) {\n        var o = t[i], u = o.transform, s = null;\n        e instanceof Pt && (s = e.field(o.field)), r.push(Te(u, s, n[i]));\n    }\n    return r;\n}\n\n/**\n * Creates a list of \"transform results\" (a transform result is a field value\n * representing the result of applying a transform) for use when applying a\n * transform locally.\n *\n * @param fieldTransforms - The field transforms to apply the result to.\n * @param localWriteTime - The local time of the mutation (used to\n *     generate ServerTimestampValues).\n * @param maybeDoc - The current state of the document after applying all\n *     previous mutations.\n * @returns The transform results list.\n */ function Ke(t, e, n) {\n    for (var r = [], i = 0, o = t; i < o.length; i++) {\n        var u = o[i], s = u.transform, a = null;\n        n instanceof Pt && (a = n.field(u.field)), r.push(Ee(s, a, e));\n    }\n    return r;\n}\n\nfunction Xe(t, e, n) {\n    for (var r = new xt(e), i = 0; i < t.length; i++) {\n        var o = t[i];\n        r.set(o.field, n[i]);\n    }\n    return r.Pt();\n}\n\n/** A mutation that deletes the document at the given key. */ var We, Ze, Je = /** @class */ function(t) {\n    function e(e, n) {\n        var r = this;\n        return (r = t.call(this) || this).key = e, r.jt = n, r.type = 2 /* Delete */ , r.fieldTransforms = [], \n        r;\n    }\n    return m(e, t), e;\n}(Me), $e = /** @class */ function(t) {\n    function e(e, n) {\n        var r = this;\n        return (r = t.call(this) || this).key = e, r.jt = n, r.type = 3 /* Verify */ , r.fieldTransforms = [], \n        r;\n    }\n    return m(e, t), e;\n}(Me), tn = \n// TODO(b/33078163): just use simplest form of existence filter for now\nfunction(t) {\n    this.count = t;\n};\n\n/**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\nfunction en(t) {\n    switch (t) {\n      case M.OK:\n        return x();\n\n      case M.CANCELLED:\n      case M.UNKNOWN:\n      case M.DEADLINE_EXCEEDED:\n      case M.RESOURCE_EXHAUSTED:\n      case M.INTERNAL:\n      case M.UNAVAILABLE:\n // Unauthenticated means something went wrong with our token and we need\n        // to retry with new credentials which will happen automatically.\n              case M.UNAUTHENTICATED:\n        return !1;\n\n      case M.INVALID_ARGUMENT:\n      case M.NOT_FOUND:\n      case M.ALREADY_EXISTS:\n      case M.PERMISSION_DENIED:\n      case M.FAILED_PRECONDITION:\n // Aborted might be retried in some scenarios, but that is dependant on\n        // the context and should handled individually by the calling code.\n        // See https://cloud.google.com/apis/design/errors.\n              case M.ABORTED:\n      case M.OUT_OF_RANGE:\n      case M.UNIMPLEMENTED:\n      case M.DATA_LOSS:\n        return !0;\n\n      default:\n        return x();\n    }\n}\n\n/**\n * Determines whether an error code represents a permanent error when received\n * in response to a write operation.\n *\n * Write operations must be handled specially because as of b/119437764, ABORTED\n * errors on the write stream should be retried too (even though ABORTED errors\n * are not generally retryable).\n *\n * Note that during the initial handshake on the write stream an ABORTED error\n * signals that we should discard our stream token (i.e. it is permanent). This\n * means a handshake error should be classified with isPermanentError, above.\n */\n/**\n * Maps an error Code from GRPC status code number, like 0, 1, or 14. These\n * are not the same as HTTP status codes.\n *\n * @returns The Code equivalent to the given GRPC status code. Fails if there\n *     is no match.\n */ function nn(t) {\n    if (void 0 === t) \n    // This shouldn't normally happen, but in certain error cases (like trying\n    // to send invalid proto messages) we may get an error with no GRPC code.\n    return A(\"GRPC error has no .code\"), M.UNKNOWN;\n    switch (t) {\n      case We.OK:\n        return M.OK;\n\n      case We.CANCELLED:\n        return M.CANCELLED;\n\n      case We.UNKNOWN:\n        return M.UNKNOWN;\n\n      case We.DEADLINE_EXCEEDED:\n        return M.DEADLINE_EXCEEDED;\n\n      case We.RESOURCE_EXHAUSTED:\n        return M.RESOURCE_EXHAUSTED;\n\n      case We.INTERNAL:\n        return M.INTERNAL;\n\n      case We.UNAVAILABLE:\n        return M.UNAVAILABLE;\n\n      case We.UNAUTHENTICATED:\n        return M.UNAUTHENTICATED;\n\n      case We.INVALID_ARGUMENT:\n        return M.INVALID_ARGUMENT;\n\n      case We.NOT_FOUND:\n        return M.NOT_FOUND;\n\n      case We.ALREADY_EXISTS:\n        return M.ALREADY_EXISTS;\n\n      case We.PERMISSION_DENIED:\n        return M.PERMISSION_DENIED;\n\n      case We.FAILED_PRECONDITION:\n        return M.FAILED_PRECONDITION;\n\n      case We.ABORTED:\n        return M.ABORTED;\n\n      case We.OUT_OF_RANGE:\n        return M.OUT_OF_RANGE;\n\n      case We.UNIMPLEMENTED:\n        return M.UNIMPLEMENTED;\n\n      case We.DATA_LOSS:\n        return M.DATA_LOSS;\n\n      default:\n        return x();\n    }\n}\n\n/**\n * Converts an HTTP response's error status to the equivalent error code.\n *\n * @param status - An HTTP error response status (\"FAILED_PRECONDITION\",\n * \"UNKNOWN\", etc.)\n * @returns The equivalent Code. Non-matching responses are mapped to\n *     Code.UNKNOWN.\n */ (Ze = We || (We = {}))[Ze.OK = 0] = \"OK\", Ze[Ze.CANCELLED = 1] = \"CANCELLED\", \nZe[Ze.UNKNOWN = 2] = \"UNKNOWN\", Ze[Ze.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nZe[Ze.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", Ze[Ze.NOT_FOUND = 5] = \"NOT_FOUND\", \nZe[Ze.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", Ze[Ze.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nZe[Ze.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", Ze[Ze.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nZe[Ze.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", Ze[Ze.ABORTED = 10] = \"ABORTED\", \nZe[Ze.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", Ze[Ze.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nZe[Ze.INTERNAL = 13] = \"INTERNAL\", Ze[Ze.UNAVAILABLE = 14] = \"UNAVAILABLE\", Ze[Ze.DATA_LOSS = 15] = \"DATA_LOSS\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nvar rn = /** @class */ function() {\n    function t(t, e) {\n        this.H = t, this.root = e || un.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n        return t.prototype.zt = function(e, n) {\n        return new t(this.H, this.root.zt(e, n, this.H).copy(null, null, un.Ht, null, null));\n    }, \n    // Returns a copy of the map, with the specified key removed.\n    t.prototype.remove = function(e) {\n        return new t(this.H, this.root.remove(e, this.H).copy(null, null, un.Ht, null, null));\n    }, \n    // Returns the value of the node with the given key, or null.\n    t.prototype.get = function(t) {\n        for (var e = this.root; !e.et(); ) {\n            var n = this.H(t, e.key);\n            if (0 === n) return e.value;\n            n < 0 ? e = e.left : n > 0 && (e = e.right);\n        }\n        return null;\n    }, \n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    t.prototype.indexOf = function(t) {\n        for (\n        // Number of nodes that were pruned when descending right\n        var e = 0, n = this.root; !n.et(); ) {\n            var r = this.H(t, n.key);\n            if (0 === r) return e + n.left.size;\n            r < 0 ? n = n.left : (\n            // Count all nodes left of the node plus the node itself\n            e += n.left.size + 1, n = n.right);\n        }\n        // Node not found\n                return -1;\n    }, t.prototype.et = function() {\n        return this.root.et();\n    }, Object.defineProperty(t.prototype, \"size\", {\n        // Returns the total number of nodes in the map.\n        get: function() {\n            return this.root.size;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), \n    // Returns the minimum key in the map.\n    t.prototype.Jt = function() {\n        return this.root.Jt();\n    }, \n    // Returns the maximum key in the map.\n    t.prototype.Yt = function() {\n        return this.root.Yt();\n    }, \n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    t.prototype.Xt = function(t) {\n        return this.root.Xt(t);\n    }, t.prototype.forEach = function(t) {\n        this.Xt((function(e, n) {\n            return t(e, n), !1;\n        }));\n    }, t.prototype.toString = function() {\n        var t = [];\n        return this.Xt((function(e, n) {\n            return t.push(e + \":\" + n), !1;\n        })), \"{\" + t.join(\", \") + \"}\";\n    }, \n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    t.prototype.Zt = function(t) {\n        return this.root.Zt(t);\n    }, \n    // Returns an iterator over the SortedMap.\n    t.prototype.te = function() {\n        return new on(this.root, null, this.H, !1);\n    }, t.prototype.ee = function(t) {\n        return new on(this.root, t, this.H, !1);\n    }, t.prototype.ne = function() {\n        return new on(this.root, null, this.H, !0);\n    }, t.prototype.se = function(t) {\n        return new on(this.root, t, this.H, !0);\n    }, t;\n}(), on = /** @class */ function() {\n    function t(t, e, n, r) {\n        this.ie = r, this.re = [];\n        for (var i = 1; !t.et(); ) if (i = e ? n(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        r && (i *= -1), i < 0) \n        // This node is less than our start key. ignore it\n        t = this.ie ? t.left : t.right; else {\n            if (0 === i) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.re.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n                        this.re.push(t), t = this.ie ? t.right : t.left;\n        }\n    }\n    return t.prototype.oe = function() {\n        var t = this.re.pop(), e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.ie) for (t = t.left; !t.et(); ) this.re.push(t), t = t.right; else for (t = t.right; !t.et(); ) this.re.push(t), \n        t = t.left;\n        return e;\n    }, t.prototype.ce = function() {\n        return this.re.length > 0;\n    }, t.prototype.ae = function() {\n        if (0 === this.re.length) return null;\n        var t = this.re[this.re.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }, t;\n}(), un = /** @class */ function() {\n    function t(e, n, r, i, o) {\n        this.key = e, this.value = n, this.color = null != r ? r : t.RED, this.left = null != i ? i : t.EMPTY, \n        this.right = null != o ? o : t.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n        return t.prototype.copy = function(e, n, r, i, o) {\n        return new t(null != e ? e : this.key, null != n ? n : this.value, null != r ? r : this.color, null != i ? i : this.left, null != o ? o : this.right);\n    }, t.prototype.et = function() {\n        return !1;\n    }, \n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    t.prototype.Xt = function(t) {\n        return this.left.Xt(t) || t(this.key, this.value) || this.right.Xt(t);\n    }, \n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    t.prototype.Zt = function(t) {\n        return this.right.Zt(t) || t(this.key, this.value) || this.left.Zt(t);\n    }, \n    // Returns the minimum node in the tree.\n    t.prototype.min = function() {\n        return this.left.et() ? this : this.left.min();\n    }, \n    // Returns the maximum key in the tree.\n    t.prototype.Jt = function() {\n        return this.min().key;\n    }, \n    // Returns the maximum key in the tree.\n    t.prototype.Yt = function() {\n        return this.right.et() ? this.key : this.right.Yt();\n    }, \n    // Returns new tree, with the key/value added.\n    t.prototype.zt = function(t, e, n) {\n        var r = this, i = n(t, r.key);\n        return (r = i < 0 ? r.copy(null, null, null, r.left.zt(t, e, n), null) : 0 === i ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.zt(t, e, n))).ue();\n    }, t.prototype.he = function() {\n        if (this.left.et()) return t.EMPTY;\n        var e = this;\n        return e.left.le() || e.left.left.le() || (e = e._e()), (e = e.copy(null, null, null, e.left.he(), null)).ue();\n    }, \n    // Returns new tree, with the specified item removed.\n    t.prototype.remove = function(e, n) {\n        var r, i = this;\n        if (n(e, i.key) < 0) i.left.et() || i.left.le() || i.left.left.le() || (i = i._e()), \n        i = i.copy(null, null, null, i.left.remove(e, n), null); else {\n            if (i.left.le() && (i = i.fe()), i.right.et() || i.right.le() || i.right.left.le() || (i = i.de()), \n            0 === n(e, i.key)) {\n                if (i.right.et()) return t.EMPTY;\n                r = i.right.min(), i = i.copy(r.key, r.value, null, null, i.right.he());\n            }\n            i = i.copy(null, null, null, null, i.right.remove(e, n));\n        }\n        return i.ue();\n    }, t.prototype.le = function() {\n        return this.color;\n    }, \n    // Returns new tree after performing any needed rotations.\n    t.prototype.ue = function() {\n        var t = this;\n        return t.right.le() && !t.left.le() && (t = t.we()), t.left.le() && t.left.left.le() && (t = t.fe()), \n        t.left.le() && t.right.le() && (t = t.Ee()), t;\n    }, t.prototype._e = function() {\n        var t = this.Ee();\n        return t.right.left.le() && (t = (t = (t = t.copy(null, null, null, null, t.right.fe())).we()).Ee()), \n        t;\n    }, t.prototype.de = function() {\n        var t = this.Ee();\n        return t.left.left.le() && (t = (t = t.fe()).Ee()), t;\n    }, t.prototype.we = function() {\n        var e = this.copy(null, null, t.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, e, null);\n    }, t.prototype.fe = function() {\n        var e = this.copy(null, null, t.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, e);\n    }, t.prototype.Ee = function() {\n        var t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }, \n    // For testing.\n    t.prototype.Te = function() {\n        var t = this.Ie();\n        return Math.pow(2, t) <= this.size + 1;\n    }, \n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    t.prototype.Ie = function() {\n        if (this.le() && this.left.le()) throw x();\n        if (this.right.le()) throw x();\n        var t = this.left.Ie();\n        if (t !== this.right.Ie()) throw x();\n        return t + (this.le() ? 0 : 1);\n    }, t;\n}();\n\n// end SortedMap\n// An iterator over an LLRBNode.\n// end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nun.EMPTY = null, un.RED = !0, un.Ht = !1, \n// end LLRBEmptyNode\nun.EMPTY = new (/** @class */ function() {\n    function t() {\n        this.size = 0;\n    }\n    return Object.defineProperty(t.prototype, \"key\", {\n        get: function() {\n            throw x();\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(t.prototype, \"value\", {\n        get: function() {\n            throw x();\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(t.prototype, \"color\", {\n        get: function() {\n            throw x();\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(t.prototype, \"left\", {\n        get: function() {\n            throw x();\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(t.prototype, \"right\", {\n        get: function() {\n            throw x();\n        },\n        enumerable: !1,\n        configurable: !0\n    }), \n    // Returns a copy of the current node.\n    t.prototype.copy = function(t, e, n, r, i) {\n        return this;\n    }, \n    // Returns a copy of the tree, with the specified key/value added.\n    t.prototype.zt = function(t, e, n) {\n        return new un(t, e);\n    }, \n    // Returns a copy of the tree, with the specified key removed.\n    t.prototype.remove = function(t, e) {\n        return this;\n    }, t.prototype.et = function() {\n        return !0;\n    }, t.prototype.Xt = function(t) {\n        return !1;\n    }, t.prototype.Zt = function(t) {\n        return !1;\n    }, t.prototype.Jt = function() {\n        return null;\n    }, t.prototype.Yt = function() {\n        return null;\n    }, t.prototype.le = function() {\n        return !1;\n    }, \n    // For testing.\n    t.prototype.Te = function() {\n        return !0;\n    }, t.prototype.Ie = function() {\n        return 0;\n    }, t;\n}());\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nvar sn = /** @class */ function() {\n    function t(t) {\n        this.H = t, this.data = new rn(this.H);\n    }\n    return t.prototype.has = function(t) {\n        return null !== this.data.get(t);\n    }, t.prototype.first = function() {\n        return this.data.Jt();\n    }, t.prototype.last = function() {\n        return this.data.Yt();\n    }, Object.defineProperty(t.prototype, \"size\", {\n        get: function() {\n            return this.data.size;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), t.prototype.indexOf = function(t) {\n        return this.data.indexOf(t);\n    }, \n    /** Iterates elements in order defined by \"comparator\" */ t.prototype.forEach = function(t) {\n        this.data.Xt((function(e, n) {\n            return t(e), !1;\n        }));\n    }, \n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */ t.prototype.me = function(t, e) {\n        for (var n = this.data.ee(t[0]); n.ce(); ) {\n            var r = n.oe();\n            if (this.H(r.key, t[1]) >= 0) return;\n            e(r.key);\n        }\n    }, \n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */\n    t.prototype.Ae = function(t, e) {\n        var n;\n        for (n = void 0 !== e ? this.data.ee(e) : this.data.te(); n.ce(); ) if (!t(n.oe().key)) return;\n    }, \n    /** Finds the least element greater than or equal to `elem`. */ t.prototype.Re = function(t) {\n        var e = this.data.ee(t);\n        return e.ce() ? e.oe().key : null;\n    }, t.prototype.te = function() {\n        return new an(this.data.te());\n    }, t.prototype.ee = function(t) {\n        return new an(this.data.ee(t));\n    }, \n    /** Inserts or updates an element */ t.prototype.add = function(t) {\n        return this.copy(this.data.remove(t).zt(t, !0));\n    }, \n    /** Deletes an element */ t.prototype.delete = function(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }, t.prototype.et = function() {\n        return this.data.et();\n    }, t.prototype.Pe = function(t) {\n        var e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((function(t) {\n            e = e.add(t);\n        })), e;\n    }, t.prototype.isEqual = function(e) {\n        if (!(e instanceof t)) return !1;\n        if (this.size !== e.size) return !1;\n        for (var n = this.data.te(), r = e.data.te(); n.ce(); ) {\n            var i = n.oe().key, o = r.oe().key;\n            if (0 !== this.H(i, o)) return !1;\n        }\n        return !0;\n    }, t.prototype.it = function() {\n        var t = [];\n        return this.forEach((function(e) {\n            t.push(e);\n        })), t;\n    }, t.prototype.toString = function() {\n        var t = [];\n        return this.forEach((function(e) {\n            return t.push(e);\n        })), \"SortedSet(\" + t.toString() + \")\";\n    }, t.prototype.copy = function(e) {\n        var n = new t(this.H);\n        return n.data = e, n;\n    }, t;\n}(), an = /** @class */ function() {\n    function t(t) {\n        this.ye = t;\n    }\n    return t.prototype.oe = function() {\n        return this.ye.oe().key;\n    }, t.prototype.ce = function() {\n        return this.ye.ce();\n    }, t;\n}(), cn = new rn(tt.H);\n\nfunction hn() {\n    return cn;\n}\n\nfunction fn() {\n    return hn();\n}\n\nvar ln = new rn(tt.H);\n\nfunction pn() {\n    return ln;\n}\n\nvar dn = new rn(tt.H);\n\nfunction vn() {\n    return dn;\n}\n\nvar yn = new sn(tt.H);\n\nfunction mn() {\n    for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];\n    for (var n = yn, r = 0, i = t; r < i.length; r++) {\n        var o = i[r];\n        n = n.add(o);\n    }\n    return n;\n}\n\nvar gn = new sn(C);\n\nfunction wn() {\n    return gn;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * DocumentSet is an immutable (copy-on-write) collection that holds documents\n * in order specified by the provided comparator. We always add a document key\n * comparator on top of what is provided to guarantee document equality based on\n * the key.\n */ var bn = /** @class */ function() {\n    /** The default ordering is by key if the comparator is omitted */\n    function t(t) {\n        // We are adding document key comparator to the end as it's the only\n        // guaranteed unique property of a document.\n        this.H = t ? function(e, n) {\n            return t(e, n) || tt.H(e.key, n.key);\n        } : function(t, e) {\n            return tt.H(t.key, e.key);\n        }, this.ge = pn(), this.Ve = new rn(this.H)\n        /**\n     * Returns an empty copy of the existing DocumentSet, using the same\n     * comparator.\n     */;\n    }\n    return t.pe = function(e) {\n        return new t(e.H);\n    }, t.prototype.has = function(t) {\n        return null != this.ge.get(t);\n    }, t.prototype.get = function(t) {\n        return this.ge.get(t);\n    }, t.prototype.first = function() {\n        return this.Ve.Jt();\n    }, t.prototype.last = function() {\n        return this.Ve.Yt();\n    }, t.prototype.et = function() {\n        return this.Ve.et();\n    }, \n    /**\n     * Returns the index of the provided key in the document set, or -1 if the\n     * document key is not present in the set;\n     */\n    t.prototype.indexOf = function(t) {\n        var e = this.ge.get(t);\n        return e ? this.Ve.indexOf(e) : -1;\n    }, Object.defineProperty(t.prototype, \"size\", {\n        get: function() {\n            return this.Ve.size;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), \n    /** Iterates documents in order defined by \"comparator\" */ t.prototype.forEach = function(t) {\n        this.Ve.Xt((function(e, n) {\n            return t(e), !1;\n        }));\n    }, \n    /** Inserts or updates a document with the same key */ t.prototype.add = function(t) {\n        // First remove the element if we have it.\n        var e = this.delete(t.key);\n        return e.copy(e.ge.zt(t.key, t), e.Ve.zt(t, null));\n    }, \n    /** Deletes a document with a given key */ t.prototype.delete = function(t) {\n        var e = this.get(t);\n        return e ? this.copy(this.ge.remove(t), this.Ve.remove(e)) : this;\n    }, t.prototype.isEqual = function(e) {\n        if (!(e instanceof t)) return !1;\n        if (this.size !== e.size) return !1;\n        for (var n = this.Ve.te(), r = e.Ve.te(); n.ce(); ) {\n            var i = n.oe().key, o = r.oe().key;\n            if (!i.isEqual(o)) return !1;\n        }\n        return !0;\n    }, t.prototype.toString = function() {\n        var t = [];\n        return this.forEach((function(e) {\n            t.push(e.toString());\n        })), 0 === t.length ? \"DocumentSet ()\" : \"DocumentSet (\\n  \" + t.join(\"  \\n\") + \"\\n)\";\n    }, t.prototype.copy = function(e, n) {\n        var r = new t;\n        return r.H = this.H, r.ge = e, r.Ve = n, r;\n    }, t;\n}(), _n = /** @class */ function() {\n    function t() {\n        this.be = new rn(tt.H);\n    }\n    return t.prototype.track = function(t) {\n        var e = t.doc.key, n = this.be.get(e);\n        n ? \n        // Merge the new change with the existing change.\n        0 /* Added */ !== t.type && 3 /* Metadata */ === n.type ? this.be = this.be.zt(e, t) : 3 /* Metadata */ === t.type && 1 /* Removed */ !== n.type ? this.be = this.be.zt(e, {\n            type: n.type,\n            doc: t.doc\n        }) : 2 /* Modified */ === t.type && 2 /* Modified */ === n.type ? this.be = this.be.zt(e, {\n            type: 2 /* Modified */ ,\n            doc: t.doc\n        }) : 2 /* Modified */ === t.type && 0 /* Added */ === n.type ? this.be = this.be.zt(e, {\n            type: 0 /* Added */ ,\n            doc: t.doc\n        }) : 1 /* Removed */ === t.type && 0 /* Added */ === n.type ? this.be = this.be.remove(e) : 1 /* Removed */ === t.type && 2 /* Modified */ === n.type ? this.be = this.be.zt(e, {\n            type: 1 /* Removed */ ,\n            doc: n.doc\n        }) : 0 /* Added */ === t.type && 1 /* Removed */ === n.type ? this.be = this.be.zt(e, {\n            type: 2 /* Modified */ ,\n            doc: t.doc\n        }) : \n        // This includes these cases, which don't make sense:\n        // Added->Added\n        // Removed->Removed\n        // Modified->Added\n        // Removed->Modified\n        // Metadata->Added\n        // Removed->Metadata\n        x() : this.be = this.be.zt(e, t);\n    }, t.prototype.ve = function() {\n        var t = [];\n        return this.be.Xt((function(e, n) {\n            t.push(n);\n        })), t;\n    }, t;\n}(), In = /** @class */ function() {\n    function t(t, e, n, r, i, o, u, s) {\n        this.query = t, this.docs = e, this.Se = n, this.docChanges = r, this.De = i, this.fromCache = o, \n        this.Ce = u, this.xe = s\n        /** Returns a view snapshot as if all documents in the snapshot were added. */;\n    }\n    return t.Ne = function(e, n, r, i) {\n        var o = [];\n        return n.forEach((function(t) {\n            o.push({\n                type: 0 /* Added */ ,\n                doc: t\n            });\n        })), new t(e, n, bn.pe(n), o, r, i, \n        /* syncStateChanged= */ !0, \n        /* excludesMetadataChanges= */ !1);\n    }, Object.defineProperty(t.prototype, \"hasPendingWrites\", {\n        get: function() {\n            return !this.De.et();\n        },\n        enumerable: !1,\n        configurable: !0\n    }), t.prototype.isEqual = function(t) {\n        if (!(this.fromCache === t.fromCache && this.Ce === t.Ce && this.De.isEqual(t.De) && le(this.query, t.query) && this.docs.isEqual(t.docs) && this.Se.isEqual(t.Se))) return !1;\n        var e = this.docChanges, n = t.docChanges;\n        if (e.length !== n.length) return !1;\n        for (var r = 0; r < e.length; r++) if (e[r].type !== n[r].type || !e[r].doc.isEqual(n[r].doc)) return !1;\n        return !0;\n    }, t;\n}(), En = /** @class */ function() {\n    function t(\n    /**\n     * The snapshot version this event brings us up to, or MIN if not set.\n     */\n    t, \n    /**\n     * A map from target to changes to the target. See TargetChange.\n     */\n    e, \n    /**\n     * A set of targets that is known to be inconsistent. Listens for these\n     * targets should be re-established without resume tokens.\n     */\n    n, \n    /**\n     * A set of which documents have changed or been deleted, along with the\n     * doc's new values (if not deleted).\n     */\n    r, \n    /**\n     * A set of which document updates are due only to limbo resolution targets.\n     */\n    i) {\n        this.Ot = t, this.$e = e, this.Fe = n, this.Oe = r, this.ke = i;\n    }\n    /**\n     * HACK: Views require RemoteEvents in order to determine whether the view is\n     * CURRENT, but secondary tabs don't receive remote events. So this method is\n     * used to create a synthesized RemoteEvent that can be used to apply a\n     * CURRENT status change to a View, for queries executed in a different tab.\n     */\n    // PORTING NOTE: Multi-tab only\n        return t.Me = function(e, n) {\n        var r = new Map;\n        return r.set(e, Tn.Le(e, n)), new t(X.min(), r, wn(), hn(), mn());\n    }, t;\n}(), Tn = /** @class */ function() {\n    function t(\n    /**\n     * An opaque, server-assigned token that allows watching a query to be resumed\n     * after disconnecting without retransmitting all the data that matches the\n     * query. The resume token essentially identifies a point in time from which\n     * the server should resume sending results.\n     */\n    t, \n    /**\n     * The \"current\" (synced) status of this target. Note that \"current\"\n     * has special meaning in the RPC protocol that implies that a target is\n     * both up-to-date and consistent with the rest of the watch stream.\n     */\n    e, \n    /**\n     * The set of documents that were newly assigned to this target as part of\n     * this remote event.\n     */\n    n, \n    /**\n     * The set of documents that were already assigned to this target but received\n     * an update during this remote event.\n     */\n    r, \n    /**\n     * The set of documents that were removed from this target as part of this\n     * remote event.\n     */\n    i) {\n        this.resumeToken = t, this.Be = e, this.qe = n, this.Ue = r, this.Qe = i\n        /**\n     * This method is used to create a synthesized TargetChanges that can be used to\n     * apply a CURRENT status change to a View (for queries executed in a different\n     * tab) or for new queries (to raise snapshots with correct CURRENT status).\n     */;\n    }\n    return t.Le = function(e, n) {\n        return new t(U.T, n, mn(), mn(), mn());\n    }, t;\n}(), Nn = function(\n/** The new document applies to all of these targets. */\nt, \n/** The new document is removed from all of these targets. */\ne, \n/** The key of the document for this change. */\nn, \n/**\n     * The new document or NoDocument if it was deleted. Is null if the\n     * document went out of view without the server sending a new document.\n     */\nr) {\n    this.Ke = t, this.removedTargetIds = e, this.key = n, this.We = r;\n}, An = function(t, e) {\n    this.targetId = t, this.je = e;\n}, Dn = function(\n/** What kind of change occurred to the watch target. */\nt, \n/** The target IDs that were added/removed/set. */\ne, \n/**\n     * An opaque, server-assigned token that allows watching a target to be\n     * resumed after disconnecting without retransmitting all the data that\n     * matches the target. The resume token essentially identifies a point in\n     * time from which the server should resume sending results.\n     */\nn\n/** An RPC error indicating why the watch failed. */ , r) {\n    void 0 === n && (n = U.T), void 0 === r && (r = null), this.state = t, this.targetIds = e, \n    this.resumeToken = n, this.cause = r;\n}, Sn = /** @class */ function() {\n    function t() {\n        /**\n         * The number of pending responses (adds or removes) that we are waiting on.\n         * We only consider targets active that have no pending responses.\n         */\n        this.Ge = 0, \n        /**\n             * Keeps track of the document changes since the last raised snapshot.\n             *\n             * These changes are continuously updated as we receive document updates and\n             * always reflect the current set of changes against the last issued snapshot.\n             */\n        this.ze = On(), \n        /** See public getters for explanations of these fields. */\n        this.He = U.T, this.Je = !1, \n        /**\n             * Whether this target state should be included in the next snapshot. We\n             * initialize to true so that newly-added targets are included in the next\n             * RemoteEvent.\n             */\n        this.Ye = !0;\n    }\n    return Object.defineProperty(t.prototype, \"Be\", {\n        /**\n         * Whether this target has been marked 'current'.\n         *\n         * 'Current' has special meaning in the RPC protocol: It implies that the\n         * Watch backend has sent us all changes up to the point at which the target\n         * was added and that the target is consistent with the rest of the watch\n         * stream.\n         */\n        get: function() {\n            return this.Je;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(t.prototype, \"resumeToken\", {\n        /** The last resume token sent to us for this target. */ get: function() {\n            return this.He;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(t.prototype, \"Xe\", {\n        /** Whether this target has pending target adds or target removes. */ get: function() {\n            return 0 !== this.Ge;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(t.prototype, \"Ze\", {\n        /** Whether we have modified any state that should trigger a snapshot. */ get: function() {\n            return this.Ye;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), \n    /**\n     * Applies the resume token to the TargetChange, but only when it has a new\n     * value. Empty resumeTokens are discarded.\n     */\n    t.prototype.tn = function(t) {\n        t.l() > 0 && (this.Ye = !0, this.He = t);\n    }, \n    /**\n     * Creates a target change from the current set of changes.\n     *\n     * To reset the document changes after raising this snapshot, call\n     * `clearPendingChanges()`.\n     */\n    t.prototype.en = function() {\n        var t = mn(), e = mn(), n = mn();\n        return this.ze.forEach((function(r, i) {\n            switch (i) {\n              case 0 /* Added */ :\n                t = t.add(r);\n                break;\n\n              case 2 /* Modified */ :\n                e = e.add(r);\n                break;\n\n              case 1 /* Removed */ :\n                n = n.add(r);\n                break;\n\n              default:\n                x();\n            }\n        })), new Tn(this.He, this.Je, t, e, n);\n    }, \n    /**\n     * Resets the document changes and sets `hasPendingChanges` to false.\n     */\n    t.prototype.nn = function() {\n        this.Ye = !1, this.ze = On();\n    }, t.prototype.sn = function(t, e) {\n        this.Ye = !0, this.ze = this.ze.zt(t, e);\n    }, t.prototype.rn = function(t) {\n        this.Ye = !0, this.ze = this.ze.remove(t);\n    }, t.prototype.on = function() {\n        this.Ge += 1;\n    }, t.prototype.cn = function() {\n        this.Ge -= 1;\n    }, t.prototype.an = function() {\n        this.Ye = !0, this.Je = !0;\n    }, t;\n}(), xn = /** @class */ function() {\n    function t(t) {\n        this.un = t, \n        /** The internal state of all tracked targets. */\n        this.hn = new Map, \n        /** Keeps track of the documents to update since the last raised snapshot. */\n        this.ln = hn(), \n        /** A mapping of document keys to their set of target IDs. */\n        this._n = kn(), \n        /**\n             * A list of targets with existence filter mismatches. These targets are\n             * known to be inconsistent and their listens needs to be re-established by\n             * RemoteStore.\n             */\n        this.fn = new sn(C)\n        /**\n     * Processes and adds the DocumentWatchChange to the current set of changes.\n     */;\n    }\n    return t.prototype.dn = function(t) {\n        for (var e = 0, n = t.Ke; e < n.length; e++) {\n            var r = n[e];\n            t.We instanceof Pt ? this.wn(r, t.We) : t.We instanceof Vt && this.En(r, t.key, t.We);\n        }\n        for (var i = 0, o = t.removedTargetIds; i < o.length; i++) {\n            r = o[i];\n            this.En(r, t.key, t.We);\n        }\n    }, \n    /** Processes and adds the WatchTargetChange to the current set of changes. */ t.prototype.Tn = function(t) {\n        var e = this;\n        this.In(t, (function(n) {\n            var r = e.mn(n);\n            switch (t.state) {\n              case 0 /* NoChange */ :\n                e.An(n) && r.tn(t.resumeToken);\n                break;\n\n              case 1 /* Added */ :\n                // We need to decrement the number of pending acks needed from watch\n                // for this targetId.\n                r.cn(), r.Xe || \n                // We have a freshly added target, so we need to reset any state\n                // that we had previously. This can happen e.g. when remove and add\n                // back a target for existence filter mismatches.\n                r.nn(), r.tn(t.resumeToken);\n                break;\n\n              case 2 /* Removed */ :\n                // We need to keep track of removed targets to we can post-filter and\n                // remove any target changes.\n                // We need to decrement the number of pending acks needed from watch\n                // for this targetId.\n                r.cn(), r.Xe || e.removeTarget(n);\n                break;\n\n              case 3 /* Current */ :\n                e.An(n) && (r.an(), r.tn(t.resumeToken));\n                break;\n\n              case 4 /* Reset */ :\n                e.An(n) && (\n                // Reset the target and synthesizes removes for all existing\n                // documents. The backend will re-add any documents that still\n                // match the target before it sends the next global snapshot.\n                e.Rn(n), r.tn(t.resumeToken));\n                break;\n\n              default:\n                x();\n            }\n        }));\n    }, \n    /**\n     * Iterates over all targetIds that the watch change applies to: either the\n     * targetIds explicitly listed in the change or the targetIds of all currently\n     * active targets.\n     */\n    t.prototype.In = function(t, e) {\n        var n = this;\n        t.targetIds.length > 0 ? t.targetIds.forEach(e) : this.hn.forEach((function(t, r) {\n            n.An(r) && e(r);\n        }));\n    }, \n    /**\n     * Handles existence filters and synthesizes deletes for filter mismatches.\n     * Targets that are invalidated by filter mismatches are added to\n     * `pendingTargetResets`.\n     */\n    t.prototype.Pn = function(t) {\n        var e = t.targetId, n = t.je.count, r = this.yn(e);\n        if (r) {\n            var i = r.target;\n            if (qt(i)) if (0 === n) {\n                // The existence filter told us the document does not exist. We deduce\n                // that this document does not exist and apply a deleted document to\n                // our updates. Without applying this deleted document there might be\n                // another query that will raise this document as part of a snapshot\n                // until it is resolved, essentially exposing inconsistency between\n                // queries.\n                var o = new tt(i.path);\n                this.En(e, o, new Vt(o, X.min()));\n            } else k(1 === n); else this.gn(e) !== n && (\n            // Existence filter mismatch: We reset the mapping and raise a new\n            // snapshot with `isFromCache:true`.\n            this.Rn(e), this.fn = this.fn.add(e));\n        }\n    }, \n    /**\n     * Converts the currently accumulated state into a remote event at the\n     * provided snapshot version. Resets the accumulated changes before returning.\n     */\n    t.prototype.Vn = function(t) {\n        var e = this, n = new Map;\n        this.hn.forEach((function(r, i) {\n            var o = e.yn(i);\n            if (o) {\n                if (r.Be && qt(o.target)) {\n                    // Document queries for document that don't exist can produce an empty\n                    // result set. To update our local cache, we synthesize a document\n                    // delete if we have not previously received the document. This\n                    // resolves the limbo state of the document, removing it from\n                    // limboDocumentRefs.\n                    // TODO(dimond): Ideally we would have an explicit lookup target\n                    // instead resulting in an explicit delete message and we could\n                    // remove this special logic.\n                    var u = new tt(o.target.path);\n                    null !== e.ln.get(u) || e.pn(i, u) || e.En(i, u, new Vt(u, t));\n                }\n                r.Ze && (n.set(i, r.en()), r.nn());\n            }\n        }));\n        var r = mn();\n        // We extract the set of limbo-only document updates as the GC logic\n        // special-cases documents that do not appear in the target cache.\n        // TODO(gsoltis): Expand on this comment once GC is available in the JS\n        // client.\n                this._n.forEach((function(t, n) {\n            var i = !0;\n            n.Ae((function(t) {\n                var n = e.yn(t);\n                return !n || 2 /* LimboResolution */ === n.Ft || (i = !1, !1);\n            })), i && (r = r.add(t));\n        }));\n        var i = new En(t, n, this.fn, this.ln, r);\n        return this.ln = hn(), this._n = kn(), this.fn = new sn(C), i;\n    }, \n    /**\n     * Adds the provided document to the internal list of document updates and\n     * its document key to the given target's mapping.\n     */\n    // Visible for testing.\n    t.prototype.wn = function(t, e) {\n        if (this.An(t)) {\n            var n = this.pn(t, e.key) ? 2 /* Modified */ : 0 /* Added */;\n            this.mn(t).sn(e.key, n), this.ln = this.ln.zt(e.key, e), this._n = this._n.zt(e.key, this.bn(e.key).add(t));\n        }\n    }, \n    /**\n     * Removes the provided document from the target mapping. If the\n     * document no longer matches the target, but the document's state is still\n     * known (e.g. we know that the document was deleted or we received the change\n     * that caused the filter mismatch), the new document can be provided\n     * to update the remote document cache.\n     */\n    // Visible for testing.\n    t.prototype.En = function(t, e, n) {\n        if (this.An(t)) {\n            var r = this.mn(t);\n            this.pn(t, e) ? r.sn(e, 1 /* Removed */) : \n            // The document may have entered and left the target before we raised a\n            // snapshot, so we can just ignore the change.\n            r.rn(e), this._n = this._n.zt(e, this.bn(e).delete(t)), n && (this.ln = this.ln.zt(e, n));\n        }\n    }, t.prototype.removeTarget = function(t) {\n        this.hn.delete(t);\n    }, \n    /**\n     * Returns the current count of documents in the target. This includes both\n     * the number of documents that the LocalStore considers to be part of the\n     * target as well as any accumulated changes.\n     */\n    t.prototype.gn = function(t) {\n        var e = this.mn(t).en();\n        return this.un.vn(t).size + e.qe.size - e.Qe.size;\n    }, \n    /**\n     * Increment the number of acks needed from watch before we can consider the\n     * server to be 'in-sync' with the client's active targets.\n     */\n    t.prototype.on = function(t) {\n        this.mn(t).on();\n    }, t.prototype.mn = function(t) {\n        var e = this.hn.get(t);\n        return e || (e = new Sn, this.hn.set(t, e)), e;\n    }, t.prototype.bn = function(t) {\n        var e = this._n.get(t);\n        return e || (e = new sn(C), this._n = this._n.zt(t, e)), e;\n    }, \n    /**\n     * Verifies that the user is still interested in this target (by calling\n     * `getTargetDataForTarget()`) and that we are not waiting for pending ADDs\n     * from watch.\n     */\n    t.prototype.An = function(t) {\n        var e = null !== this.yn(t);\n        return e || N(\"WatchChangeAggregator\", \"Detected inactive target\", t), e;\n    }, \n    /**\n     * Returns the TargetData for an active target (i.e. a target that the user\n     * is still interested in that has no outstanding target change requests).\n     */\n    t.prototype.yn = function(t) {\n        var e = this.hn.get(t);\n        return e && e.Xe ? null : this.un.Sn(t);\n    }, \n    /**\n     * Resets the state of a Watch target to its initial state (e.g. sets\n     * 'current' to false, clears the resume token and removes its target mapping\n     * from all documents).\n     */\n    t.prototype.Rn = function(t) {\n        var e = this;\n        this.hn.set(t, new Sn), this.un.vn(t).forEach((function(n) {\n            e.En(t, n, /*updatedDocument=*/ null);\n        }));\n    }, \n    /**\n     * Returns whether the LocalStore considers the document to be part of the\n     * specified target.\n     */\n    t.prototype.pn = function(t, e) {\n        return this.un.vn(t).has(e);\n    }, t;\n}();\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * DocumentChangeSet keeps track of a set of changes to docs in a query, merging\n * duplicate events for the same doc.\n */ function kn() {\n    return new rn(tt.H);\n}\n\nfunction On() {\n    return new rn(tt.H);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ var Pn = {\n    asc: \"ASCENDING\",\n    desc: \"DESCENDING\"\n}, Vn = {\n    \"<\": \"LESS_THAN\",\n    \"<=\": \"LESS_THAN_OR_EQUAL\",\n    \">\": \"GREATER_THAN\",\n    \">=\": \"GREATER_THAN_OR_EQUAL\",\n    \"==\": \"EQUAL\",\n    \"!=\": \"NOT_EQUAL\",\n    \"array-contains\": \"ARRAY_CONTAINS\",\n    in: \"IN\",\n    \"not-in\": \"NOT_IN\",\n    \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n}, Cn = function(t, e) {\n    this.t = t, this.Bt = e;\n};\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction Ln(t, e) {\n    return t.Bt ? new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\") + \".\" + (\"000000000\" + e.nanoseconds).slice(-9) + \"Z\" : {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */ function Rn(t, e) {\n    return t.Bt ? e.toBase64() : e.toUint8Array();\n}\n\n/**\n * Returns a ByteString based on the proto string value.\n */ function Un(t, e) {\n    return Ln(t, e.j());\n}\n\nfunction Mn(t) {\n    return k(!!t), X.K(function(t) {\n        var e = ut(t);\n        return new K(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction qn(t, e) {\n    return function(t) {\n        return new Z([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).rt();\n}\n\nfunction Fn(t) {\n    var e = Z.ot(t);\n    return k(hr(e)), e;\n}\n\nfunction jn(t, e) {\n    return qn(t.t, e.path);\n}\n\nfunction zn(t, e) {\n    var n = Fn(e);\n    if (n.get(1) !== t.t.projectId) throw new q(M.INVALID_ARGUMENT, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.t.projectId);\n    if (n.get(3) !== t.t.database) throw new q(M.INVALID_ARGUMENT, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.t.database);\n    return new tt(Yn(n));\n}\n\nfunction Gn(t, e) {\n    return qn(t.t, e);\n}\n\nfunction Bn(t) {\n    var e = Fn(t);\n    // In v1beta1 queries for collections at the root did not have a trailing\n    // \"/documents\". In v1 all resource paths contain \"/documents\". Preserve the\n    // ability to read the v1beta1 form for compatibility with queries persisted\n    // in the local target cache.\n        return 4 === e.length ? Z.ct() : Yn(e);\n}\n\nfunction Qn(t) {\n    return new Z([ \"projects\", t.t.projectId, \"databases\", t.t.database ]).rt();\n}\n\nfunction Yn(t) {\n    return k(t.length > 4 && \"documents\" === t.get(4)), t.Y(5)\n    /** Creates a Document proto from key and fields (but no create/update time) */;\n}\n\nfunction Hn(t, e, n) {\n    return {\n        name: jn(t, e),\n        fields: n.proto.mapValue.fields\n    };\n}\n\nfunction Kn(t, e, n) {\n    var r = zn(t, e.name), i = Mn(e.updateTime), o = new St({\n        mapValue: {\n            fields: e.fields\n        }\n    });\n    return new Pt(r, i, o, {\n        hasCommittedMutations: !!n\n    });\n}\n\nfunction Xn(t, e) {\n    var n;\n    if (e instanceof Be) n = {\n        update: Hn(t, e.key, e.value)\n    }; else if (e instanceof Je) n = {\n        delete: jn(t, e.key)\n    }; else if (e instanceof Qe) n = {\n        update: Hn(t, e.key, e.data),\n        updateMask: cr(e.Gt)\n    }; else {\n        if (!(e instanceof $e)) return x();\n        n = {\n            verify: jn(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((function(t) {\n        return function(t, e) {\n            var n = e.transform;\n            if (n instanceof Ae) return {\n                fieldPath: e.field.rt(),\n                setToServerValue: \"REQUEST_TIME\"\n            };\n            if (n instanceof De) return {\n                fieldPath: e.field.rt(),\n                appendMissingElements: {\n                    values: n.elements\n                }\n            };\n            if (n instanceof xe) return {\n                fieldPath: e.field.rt(),\n                removeAllFromArray: {\n                    values: n.elements\n                }\n            };\n            if (n instanceof Oe) return {\n                fieldPath: e.field.rt(),\n                increment: n.Ut\n            };\n            throw x();\n        }(0, t);\n    }))), e.jt.Wt || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: Un(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : x();\n    }(t, e.jt)), n;\n}\n\nfunction Wn(t, e) {\n    var n = e.currentDocument ? function(t) {\n        return void 0 !== t.updateTime ? Re.updateTime(Mn(t.updateTime)) : void 0 !== t.exists ? Re.exists(t.exists) : Re.Kt();\n    }(e.currentDocument) : Re.Kt(), r = e.updateTransforms ? e.updateTransforms.map((function(e) {\n        return function(t, e) {\n            var n = null;\n            if (\"setToServerValue\" in e) k(\"REQUEST_TIME\" === e.setToServerValue), n = new Ae; else if (\"appendMissingElements\" in e) {\n                var r = e.appendMissingElements.values || [];\n                n = new De(r);\n            } else if (\"removeAllFromArray\" in e) {\n                var i = e.removeAllFromArray.values || [];\n                n = new xe(i);\n            } else \"increment\" in e ? n = new Oe(t, e.increment) : x();\n            var o = $.lt(e.fieldPath);\n            return new Ce(o, n);\n        }(t, e);\n    })) : [];\n    if (e.update) {\n        e.update.name;\n        var i = zn(t, e.update.name), o = new St({\n            mapValue: {\n                fields: e.update.fields\n            }\n        });\n        if (e.updateMask) {\n            var u = function(t) {\n                var e = t.fieldPaths || [];\n                return new it(e.map((function(t) {\n                    return $.lt(t);\n                })));\n            }(e.updateMask);\n            return new Qe(i, o, u, n, r);\n        }\n        return new Be(i, o, n, r);\n    }\n    if (e.delete) {\n        var s = zn(t, e.delete);\n        return new Je(s, n);\n    }\n    if (e.verify) {\n        var a = zn(t, e.verify);\n        return new $e(a, n);\n    }\n    return x();\n}\n\nfunction Zn(t, e) {\n    return {\n        documents: [ Gn(t, e.path) ]\n    };\n}\n\nfunction Jn(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    var n = {\n        structuredQuery: {}\n    }, r = e.path;\n    null !== e.collectionGroup ? (n.parent = Gn(t, r), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = Gn(t, r.X()), n.structuredQuery.from = [ {\n        collectionId: r.tt()\n    } ]);\n    var i = function(t) {\n        if (0 !== t.length) {\n            var e = t.map((function(t) {\n                // visible for testing\n                return function(t) {\n                    if (\"==\" /* EQUAL */ === t.op) {\n                        if (At(t.value)) return {\n                            unaryFilter: {\n                                field: or(t.field),\n                                op: \"IS_NAN\"\n                            }\n                        };\n                        if (Nt(t.value)) return {\n                            unaryFilter: {\n                                field: or(t.field),\n                                op: \"IS_NULL\"\n                            }\n                        };\n                    } else if (\"!=\" /* NOT_EQUAL */ === t.op) {\n                        if (At(t.value)) return {\n                            unaryFilter: {\n                                field: or(t.field),\n                                op: \"IS_NOT_NAN\"\n                            }\n                        };\n                        if (Nt(t.value)) return {\n                            unaryFilter: {\n                                field: or(t.field),\n                                op: \"IS_NOT_NULL\"\n                            }\n                        };\n                    }\n                    return {\n                        fieldFilter: {\n                            field: or(t.field),\n                            op: ir(t.op),\n                            value: t.value\n                        }\n                    };\n                }(t);\n            }));\n            return 1 === e.length ? e[0] : {\n                compositeFilter: {\n                    op: \"AND\",\n                    filters: e\n                }\n            };\n        }\n    }(e.filters);\n    i && (n.structuredQuery.where = i);\n    var o = function(t) {\n        if (0 !== t.length) return t.map((function(t) {\n            // visible for testing\n            return function(t) {\n                return {\n                    field: or(t.field),\n                    direction: rr(t.dir)\n                };\n            }(t);\n        }));\n    }(e.orderBy);\n    o && (n.structuredQuery.orderBy = o);\n    var u = function(t, e) {\n        return t.Bt || lt(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    return null !== u && (n.structuredQuery.limit = u), e.startAt && (n.structuredQuery.startAt = er(e.startAt)), \n    e.endAt && (n.structuredQuery.endAt = er(e.endAt)), n;\n}\n\nfunction $n(t) {\n    var e = Bn(t.parent), n = t.structuredQuery, r = n.from ? n.from.length : 0, i = null;\n    if (r > 0) {\n        k(1 === r);\n        var o = n.from[0];\n        o.allDescendants ? i = o.collectionId : e = e.child(o.collectionId);\n    }\n    var u = [];\n    n.where && (u = tr(n.where));\n    var s = [];\n    n.orderBy && (s = n.orderBy.map((function(t) {\n        return function(t) {\n            return new Zt(ur(t.field), \n            // visible for testing\n            function(t) {\n                switch (t) {\n                  case \"ASCENDING\":\n                    return \"asc\" /* ASCENDING */;\n\n                  case \"DESCENDING\":\n                    return \"desc\" /* DESCENDING */;\n\n                  default:\n                    return;\n                }\n            }(t.direction));\n        }(t);\n    })));\n    var a = null;\n    n.limit && (a = function(t) {\n        var e;\n        return lt(e = \"object\" == typeof t ? t.value : t) ? null : e;\n    }(n.limit));\n    var c = null;\n    n.startAt && (c = nr(n.startAt));\n    var h = null;\n    return n.endAt && (h = nr(n.endAt)), ne(e, i, s, u, a, \"F\" /* First */ , c, h);\n}\n\nfunction tr(t) {\n    return t ? void 0 !== t.unaryFilter ? [ ar(t) ] : void 0 !== t.fieldFilter ? [ sr(t) ] : void 0 !== t.compositeFilter ? t.compositeFilter.filters.map((function(t) {\n        return tr(t);\n    })).reduce((function(t, e) {\n        return t.concat(e);\n    })) : x() : [];\n}\n\nfunction er(t) {\n    return {\n        before: t.before,\n        values: t.position\n    };\n}\n\nfunction nr(t) {\n    var e = !!t.before, n = t.values || [];\n    return new Xt(n, e);\n}\n\n// visible for testing\nfunction rr(t) {\n    return Pn[t];\n}\n\nfunction ir(t) {\n    return Vn[t];\n}\n\nfunction or(t) {\n    return {\n        fieldPath: t.rt()\n    };\n}\n\nfunction ur(t) {\n    return $.lt(t.fieldPath);\n}\n\nfunction sr(t) {\n    return Ft.create(ur(t.fieldFilter.field), function(t) {\n        switch (t) {\n          case \"EQUAL\":\n            return \"==\" /* EQUAL */;\n\n          case \"NOT_EQUAL\":\n            return \"!=\" /* NOT_EQUAL */;\n\n          case \"GREATER_THAN\":\n            return \">\" /* GREATER_THAN */;\n\n          case \"GREATER_THAN_OR_EQUAL\":\n            return \">=\" /* GREATER_THAN_OR_EQUAL */;\n\n          case \"LESS_THAN\":\n            return \"<\" /* LESS_THAN */;\n\n          case \"LESS_THAN_OR_EQUAL\":\n            return \"<=\" /* LESS_THAN_OR_EQUAL */;\n\n          case \"ARRAY_CONTAINS\":\n            return \"array-contains\" /* ARRAY_CONTAINS */;\n\n          case \"IN\":\n            return \"in\" /* IN */;\n\n          case \"NOT_IN\":\n            return \"not-in\" /* NOT_IN */;\n\n          case \"ARRAY_CONTAINS_ANY\":\n            return \"array-contains-any\" /* ARRAY_CONTAINS_ANY */;\n\n          case \"OPERATOR_UNSPECIFIED\":\n          default:\n            return x();\n        }\n    }(t.fieldFilter.op), t.fieldFilter.value);\n}\n\nfunction ar(t) {\n    switch (t.unaryFilter.op) {\n      case \"IS_NAN\":\n        var e = ur(t.unaryFilter.field);\n        return Ft.create(e, \"==\" /* EQUAL */ , {\n            doubleValue: NaN\n        });\n\n      case \"IS_NULL\":\n        var n = ur(t.unaryFilter.field);\n        return Ft.create(n, \"==\" /* EQUAL */ , {\n            nullValue: \"NULL_VALUE\"\n        });\n\n      case \"IS_NOT_NAN\":\n        var r = ur(t.unaryFilter.field);\n        return Ft.create(r, \"!=\" /* NOT_EQUAL */ , {\n            doubleValue: NaN\n        });\n\n      case \"IS_NOT_NULL\":\n        var i = ur(t.unaryFilter.field);\n        return Ft.create(i, \"!=\" /* NOT_EQUAL */ , {\n            nullValue: \"NULL_VALUE\"\n        });\n\n      case \"OPERATOR_UNSPECIFIED\":\n      default:\n        return x();\n    }\n}\n\nfunction cr(t) {\n    var e = [];\n    return t.fields.forEach((function(t) {\n        return e.push(t.rt());\n    })), {\n        fieldPaths: e\n    };\n}\n\nfunction hr(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ var fr = function() {\n    var t = this;\n    this.promise = new Promise((function(e, n) {\n        t.resolve = e, t.reject = n;\n    }));\n}, lr = /** @class */ function() {\n    function t(t) {\n        var e = this;\n        // NOTE: next/catchCallback will always point to our own wrapper functions,\n        // not the user's raw next() or catch() callbacks.\n                this.Dn = null, this.Cn = null, \n        // When the operation resolves, we'll set result or error and mark isDone.\n        this.result = void 0, this.error = void 0, this.xn = !1, \n        // Set to true when .then() or .catch() are called and prevents additional\n        // chaining.\n        this.Nn = !1, t((function(t) {\n            e.xn = !0, e.result = t, e.Dn && \n            // value should be defined unless T is Void, but we can't express\n            // that in the type system.\n            e.Dn(t);\n        }), (function(t) {\n            e.xn = !0, e.error = t, e.Cn && e.Cn(t);\n        }));\n    }\n    return t.prototype.catch = function(t) {\n        return this.next(void 0, t);\n    }, t.prototype.next = function(e, n) {\n        var r = this;\n        return this.Nn && x(), this.Nn = !0, this.xn ? this.error ? this.$n(n, this.error) : this.Fn(e, this.result) : new t((function(t, i) {\n            r.Dn = function(n) {\n                r.Fn(e, n).next(t, i);\n            }, r.Cn = function(e) {\n                r.$n(n, e).next(t, i);\n            };\n        }));\n    }, t.prototype.On = function() {\n        var t = this;\n        return new Promise((function(e, n) {\n            t.next(e, n);\n        }));\n    }, t.prototype.kn = function(e) {\n        try {\n            var n = e();\n            return n instanceof t ? n : t.resolve(n);\n        } catch (e) {\n            return t.reject(e);\n        }\n    }, t.prototype.Fn = function(e, n) {\n        return e ? this.kn((function() {\n            return e(n);\n        })) : t.resolve(n);\n    }, t.prototype.$n = function(e, n) {\n        return e ? this.kn((function() {\n            return e(n);\n        })) : t.reject(n);\n    }, t.resolve = function(e) {\n        return new t((function(t, n) {\n            t(e);\n        }));\n    }, t.reject = function(e) {\n        return new t((function(t, n) {\n            n(e);\n        }));\n    }, t.Mn = function(\n    // Accept all Promise types in waitFor().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    e) {\n        return new t((function(t, n) {\n            var r = 0, i = 0, o = !1;\n            e.forEach((function(e) {\n                ++r, e.next((function() {\n                    ++i, o && i === r && t();\n                }), (function(t) {\n                    return n(t);\n                }));\n            })), o = !0, i === r && t();\n        }));\n    }, \n    /**\n     * Given an array of predicate functions that asynchronously evaluate to a\n     * boolean, implements a short-circuiting `or` between the results. Predicates\n     * will be evaluated until one of them returns `true`, then stop. The final\n     * result will be whether any of them returned `true`.\n     */\n    t.Ln = function(e) {\n        for (var n = t.resolve(!1), r = function(e) {\n            n = n.next((function(n) {\n                return n ? t.resolve(n) : e();\n            }));\n        }, i = 0, o = e; i < o.length; i++) {\n            r(o[i]);\n        }\n        return n;\n    }, t.forEach = function(t, e) {\n        var n = this, r = [];\n        return t.forEach((function(t, i) {\n            r.push(e.call(n, t, i));\n        })), this.Mn(r);\n    }, t;\n}(), pr = /** @class */ function() {\n    function t(t, e) {\n        var n = this;\n        this.action = t, this.transaction = e, this.aborted = !1, \n        /**\n             * A promise that resolves with the result of the IndexedDb transaction.\n             */\n        this.Bn = new fr, this.transaction.oncomplete = function() {\n            n.Bn.resolve();\n        }, this.transaction.onabort = function() {\n            e.error ? n.Bn.reject(new yr(t, e.error)) : n.Bn.resolve();\n        }, this.transaction.onerror = function(e) {\n            var r = _r(e.target.error);\n            n.Bn.reject(new yr(t, r));\n        };\n    }\n    return t.open = function(e, n, r, i) {\n        try {\n            return new t(n, e.transaction(i, r));\n        } catch (e) {\n            throw new yr(n, e);\n        }\n    }, Object.defineProperty(t.prototype, \"qn\", {\n        get: function() {\n            return this.Bn.promise;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), t.prototype.abort = function(t) {\n        t && this.Bn.reject(t), this.aborted || (N(\"SimpleDb\", \"Aborting transaction:\", t ? t.message : \"Client-initiated abort\"), \n        this.aborted = !0, this.transaction.abort());\n    }, \n    /**\n     * Returns a SimpleDbStore<KeyType, ValueType> for the specified store. All\n     * operations performed on the SimpleDbStore happen within the context of this\n     * transaction and it cannot be used anymore once the transaction is\n     * completed.\n     *\n     * Note that we can't actually enforce that the KeyType and ValueType are\n     * correct, but they allow type safety through the rest of the consuming code.\n     */\n    t.prototype.store = function(t) {\n        var e = this.transaction.objectStore(t);\n        return new gr(e);\n    }, t;\n}(), dr = /** @class */ function() {\n    /*\n     * Creates a new SimpleDb wrapper for IndexedDb database `name`.\n     *\n     * Note that `version` must not be a downgrade. IndexedDB does not support\n     * downgrading the schema version. We currently do not support any way to do\n     * versioning outside of IndexedDB's versioning mechanism, as only\n     * version-upgrade transactions are allowed to do things like create\n     * objectstores.\n     */\n    function t(e, r, i) {\n        this.name = e, this.version = r, this.Un = i, \n        // NOTE: According to https://bugs.webkit.org/show_bug.cgi?id=197050, the\n        // bug we're checking for should exist in iOS >= 12.2 and < 13, but for\n        // whatever reason it's much harder to hit after 12.2 so we only proactively\n        // log on 12.2.\n        12.2 === t.Qn(n()) && A(\"Firestore persistence suffers from a bug in iOS 12.2 Safari that may cause your app to stop working. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.\");\n    }\n    /** Deletes the specified database. */    return t.delete = function(t) {\n        return N(\"SimpleDb\", \"Removing database:\", t), wr(window.indexedDB.deleteDatabase(t)).On();\n    }, \n    /** Returns true if IndexedDB is available in the current environment. */ t.Kn = function() {\n        if (\"undefined\" == typeof indexedDB) return !1;\n        if (t.Wn()) return !0;\n        // We extensively use indexed array values and compound keys,\n        // which IE and Edge do not support. However, they still have indexedDB\n        // defined on the window, so we need to check for them here and make sure\n        // to return that persistence is not enabled for those browsers.\n        // For tracking support of this feature, see here:\n        // https://developer.microsoft.com/en-us/microsoft-edge/platform/status/indexeddbarraysandmultientrysupport/\n        // Check the UA string to find out the browser.\n                var e = n(), r = t.Qn(e), i = 0 < r && r < 10, o = t.jn(e), u = 0 < o && o < 4.5;\n        // IE 10\n        // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';\n        // IE 11\n        // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';\n        // Edge\n        // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML,\n        // like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';\n        // iOS Safari: Disable for users running iOS version < 10.\n                return !(e.indexOf(\"MSIE \") > 0 || e.indexOf(\"Trident/\") > 0 || e.indexOf(\"Edge/\") > 0 || i || u);\n    }, \n    /**\n     * Returns true if the backing IndexedDB store is the Node IndexedDBShim\n     * (see https://github.com/axemclion/IndexedDBShim).\n     */\n    t.Wn = function() {\n        var t;\n        return \"undefined\" != typeof process && \"YES\" === (null === (t = process.env) || void 0 === t ? void 0 : t.Gn);\n    }, \n    /** Helper to get a typed SimpleDbStore from a transaction. */ t.zn = function(t, e) {\n        return t.store(e);\n    }, \n    // visible for testing\n    /** Parse User Agent to determine iOS version. Returns -1 if not found. */\n    t.Qn = function(t) {\n        var e = t.match(/i(?:phone|pad|pod) os ([\\d_]+)/i), n = e ? e[1].split(\"_\").slice(0, 2).join(\".\") : \"-1\";\n        return Number(n);\n    }, \n    // visible for testing\n    /** Parse User Agent to determine Android version. Returns -1 if not found. */\n    t.jn = function(t) {\n        var e = t.match(/Android ([\\d.]+)/i), n = e ? e[1].split(\".\").slice(0, 2).join(\".\") : \"-1\";\n        return Number(n);\n    }, \n    /**\n     * Opens the specified database, creating or upgrading it if necessary.\n     */\n    t.prototype.Hn = function(t) {\n        return g(this, void 0, void 0, (function() {\n            var e, n = this;\n            return w(this, (function(r) {\n                switch (r.label) {\n                  case 0:\n                    return this.db ? [ 3 /*break*/ , 2 ] : (N(\"SimpleDb\", \"Opening database:\", this.name), \n                    e = this, [ 4 /*yield*/ , new Promise((function(e, r) {\n                        // TODO(mikelehen): Investigate browser compatibility.\n                        // https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB\n                        // suggests IE9 and older WebKit browsers handle upgrade\n                        // differently. They expect setVersion, as described here:\n                        // https://developer.mozilla.org/en-US/docs/Web/API/IDBVersionChangeRequest/setVersion\n                        var i = indexedDB.open(n.name, n.version);\n                        i.onsuccess = function(t) {\n                            var n = t.target.result;\n                            e(n);\n                        }, i.onblocked = function() {\n                            r(new yr(t, \"Cannot upgrade IndexedDB schema while another tab is open. Close all tabs that access Firestore and reload this page to proceed.\"));\n                        }, i.onerror = function(e) {\n                            var n = e.target.error;\n                            \"VersionError\" === n.name ? r(new q(M.FAILED_PRECONDITION, \"A newer version of the Firestore SDK was previously used and so the persisted data is not compatible with the version of the SDK you are now using. The SDK will operate with persistence disabled. If you need persistence, please re-upgrade to a newer version of the SDK or else clear the persisted IndexedDB data for your app to start fresh.\")) : r(new yr(t, n));\n                        }, i.onupgradeneeded = function(t) {\n                            N(\"SimpleDb\", 'Database \"' + n.name + '\" requires upgrade from version:', t.oldVersion);\n                            var e = t.target.result;\n                            n.Un.Jn(e, i.transaction, t.oldVersion, n.version).next((function() {\n                                N(\"SimpleDb\", \"Database upgrade to version \" + n.version + \" complete\");\n                            }));\n                        };\n                    })) ]);\n\n                  case 1:\n                    e.db = r.sent(), r.label = 2;\n\n                  case 2:\n                    return [ 2 /*return*/ , (this.Yn && (this.db.onversionchange = function(t) {\n                        return n.Yn(t);\n                    }), this.db) ];\n                }\n            }));\n        }));\n    }, t.prototype.Xn = function(t) {\n        this.Yn = t, this.db && (this.db.onversionchange = function(e) {\n            return t(e);\n        });\n    }, t.prototype.runTransaction = function(t, e, n, r) {\n        return g(this, void 0, void 0, (function() {\n            var i, o, u, s, a;\n            return w(this, (function(c) {\n                switch (c.label) {\n                  case 0:\n                    i = \"readonly\" === e, o = 0, u = function() {\n                        var e, u, a, c, h;\n                        return w(this, (function(f) {\n                            switch (f.label) {\n                              case 0:\n                                ++o, f.label = 1;\n\n                              case 1:\n                                return f.trys.push([ 1, 4, , 5 ]), [ 4 /*yield*/ , s.Hn(t) ];\n\n                              case 2:\n                                // Wait for the transaction to complete (i.e. IndexedDb's onsuccess event to\n                                // fire), but still return the original transactionFnResult back to the\n                                // caller.\n                                return s.db = f.sent(), e = pr.open(s.db, t, i ? \"readonly\" : \"readwrite\", n), u = r(e).catch((function(t) {\n                                    // Abort the transaction if there was an error.\n                                    return e.abort(t), lr.reject(t);\n                                })).On(), a = {}, u.catch((function() {})), [ 4 /*yield*/ , e.qn ];\n\n                              case 3:\n                                return [ 2 /*return*/ , (a.value = (\n                                // Wait for the transaction to complete (i.e. IndexedDb's onsuccess event to\n                                // fire), but still return the original transactionFnResult back to the\n                                // caller.\n                                f.sent(), u), a) ];\n\n                              case 4:\n                                return c = f.sent(), h = \"FirebaseError\" !== c.name && o < 3, N(\"SimpleDb\", \"Transaction failed with error:\", c.message, \"Retrying:\", h), \n                                s.close(), h ? [ 3 /*break*/ , 5 ] : [ 2 /*return*/ , {\n                                    value: Promise.reject(c)\n                                } ];\n\n                              case 5:\n                                return [ 2 /*return*/ ];\n                            }\n                        }));\n                    }, s = this, c.label = 1;\n\n                  case 1:\n                    return [ 5 /*yield**/ , u() ];\n\n                  case 2:\n                    if (\"object\" == typeof (a = c.sent())) return [ 2 /*return*/ , a.value ];\n                    c.label = 3;\n\n                  case 3:\n                    return [ 3 /*break*/ , 1 ];\n\n                  case 4:\n                    return [ 2 /*return*/ ];\n                }\n            }));\n        }));\n    }, t.prototype.close = function() {\n        this.db && this.db.close(), this.db = void 0;\n    }, t;\n}(), vr = /** @class */ function() {\n    function t(t) {\n        this.Zn = t, this.ts = !1, this.es = null;\n    }\n    return Object.defineProperty(t.prototype, \"xn\", {\n        get: function() {\n            return this.ts;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(t.prototype, \"ns\", {\n        get: function() {\n            return this.es;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(t.prototype, \"cursor\", {\n        set: function(t) {\n            this.Zn = t;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), \n    /**\n     * This function can be called to stop iteration at any point.\n     */\n    t.prototype.done = function() {\n        this.ts = !0;\n    }, \n    /**\n     * This function can be called to skip to that next key, which could be\n     * an index or a primary key.\n     */\n    t.prototype.ss = function(t) {\n        this.es = t;\n    }, \n    /**\n     * Delete the current cursor value from the object store.\n     *\n     * NOTE: You CANNOT do this with a keysOnly query.\n     */\n    t.prototype.delete = function() {\n        return wr(this.Zn.delete());\n    }, t;\n}(), yr = /** @class */ function(t) {\n    function e(e, n) {\n        var r = this;\n        return (r = t.call(this, M.UNAVAILABLE, \"IndexedDB transaction '\" + e + \"' failed: \" + n) || this).name = \"IndexedDbTransactionError\", \n        r;\n    }\n    return m(e, t), e;\n}(q);\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * PersistencePromise is essentially a re-implementation of Promise except\n * it has a .next() method instead of .then() and .next() and .catch() callbacks\n * are executed synchronously when a PersistencePromise resolves rather than\n * asynchronously (Promise implementations use setImmediate() or similar).\n *\n * This is necessary to interoperate with IndexedDB which will automatically\n * commit transactions if control is returned to the event loop without\n * synchronously initiating another operation on the transaction.\n *\n * NOTE: .then() and .catch() only allow a single consumer, unlike normal\n * Promises.\n */\n/** Verifies whether `e` is an IndexedDbTransactionError. */ function mr(t) {\n    // Use name equality, as instanceof checks on errors don't work with errors\n    // that wrap other errors.\n    return \"IndexedDbTransactionError\" === t.name;\n}\n\n/**\n * A wrapper around an IDBObjectStore providing an API that:\n *\n * 1) Has generic KeyType / ValueType parameters to provide strongly-typed\n * methods for acting against the object store.\n * 2) Deals with IndexedDB's onsuccess / onerror event callbacks, making every\n * method return a PersistencePromise instead.\n * 3) Provides a higher-level API to avoid needing to do excessive wrapping of\n * intermediate IndexedDB types (IDBCursorWithValue, etc.)\n */ var gr = /** @class */ function() {\n    function t(t) {\n        this.store = t;\n    }\n    return t.prototype.put = function(t, e) {\n        var n;\n        return void 0 !== e ? (N(\"SimpleDb\", \"PUT\", this.store.name, t, e), n = this.store.put(e, t)) : (N(\"SimpleDb\", \"PUT\", this.store.name, \"<auto-key>\", t), \n        n = this.store.put(t)), wr(n);\n    }, \n    /**\n     * Adds a new value into an Object Store and returns the new key. Similar to\n     * IndexedDb's `add()`, this method will fail on primary key collisions.\n     *\n     * @param value - The object to write.\n     * @returns The key of the value to add.\n     */\n    t.prototype.add = function(t) {\n        return N(\"SimpleDb\", \"ADD\", this.store.name, t, t), wr(this.store.add(t));\n    }, \n    /**\n     * Gets the object with the specified key from the specified store, or null\n     * if no object exists with the specified key.\n     *\n     * @key The key of the object to get.\n     * @returns The object with the specified key or null if no object exists.\n     */\n    t.prototype.get = function(t) {\n        var e = this;\n        // We're doing an unsafe cast to ValueType.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                return wr(this.store.get(t)).next((function(n) {\n            // Normalize nonexistence to null.\n            return void 0 === n && (n = null), N(\"SimpleDb\", \"GET\", e.store.name, t, n), n;\n        }));\n    }, t.prototype.delete = function(t) {\n        return N(\"SimpleDb\", \"DELETE\", this.store.name, t), wr(this.store.delete(t));\n    }, \n    /**\n     * If we ever need more of the count variants, we can add overloads. For now,\n     * all we need is to count everything in a store.\n     *\n     * Returns the number of rows in the store.\n     */\n    t.prototype.count = function() {\n        return N(\"SimpleDb\", \"COUNT\", this.store.name), wr(this.store.count());\n    }, t.prototype.rs = function(t, e) {\n        var n = this.cursor(this.options(t, e)), r = [];\n        return this.os(n, (function(t, e) {\n            r.push(e);\n        })).next((function() {\n            return r;\n        }));\n    }, t.prototype.cs = function(t, e) {\n        N(\"SimpleDb\", \"DELETE ALL\", this.store.name);\n        var n = this.options(t, e);\n        n.us = !1;\n        var r = this.cursor(n);\n        return this.os(r, (function(t, e, n) {\n            return n.delete();\n        }));\n    }, t.prototype.hs = function(t, e) {\n        var n;\n        e ? n = t : (n = {}, e = t);\n        var r = this.cursor(n);\n        return this.os(r, e);\n    }, \n    /**\n     * Iterates over a store, but waits for the given callback to complete for\n     * each entry before iterating the next entry. This allows the callback to do\n     * asynchronous work to determine if this iteration should continue.\n     *\n     * The provided callback should return `true` to continue iteration, and\n     * `false` otherwise.\n     */\n    t.prototype.ls = function(t) {\n        var e = this.cursor({});\n        return new lr((function(n, r) {\n            e.onerror = function(t) {\n                var e = _r(t.target.error);\n                r(e);\n            }, e.onsuccess = function(e) {\n                var r = e.target.result;\n                r ? t(r.primaryKey, r.value).next((function(t) {\n                    t ? r.continue() : n();\n                })) : n();\n            };\n        }));\n    }, t.prototype.os = function(t, e) {\n        var n = [];\n        return new lr((function(r, i) {\n            t.onerror = function(t) {\n                i(t.target.error);\n            }, t.onsuccess = function(t) {\n                var i = t.target.result;\n                if (i) {\n                    var o = new vr(i), u = e(i.primaryKey, i.value, o);\n                    if (u instanceof lr) {\n                        var s = u.catch((function(t) {\n                            return o.done(), lr.reject(t);\n                        }));\n                        n.push(s);\n                    }\n                    o.xn ? r() : null === o.ns ? i.continue() : i.continue(o.ns);\n                } else r();\n            };\n        })).next((function() {\n            return lr.Mn(n);\n        }));\n    }, t.prototype.options = function(t, e) {\n        var n;\n        return void 0 !== t && (\"string\" == typeof t ? n = t : e = t), {\n            index: n,\n            range: e\n        };\n    }, t.prototype.cursor = function(t) {\n        var e = \"next\";\n        if (t.reverse && (e = \"prev\"), t.index) {\n            var n = this.store.index(t.index);\n            return t.us ? n.openKeyCursor(t.range, e) : n.openCursor(t.range, e);\n        }\n        return this.store.openCursor(t.range, e);\n    }, t;\n}();\n\n/**\n * Wraps an IDBRequest in a PersistencePromise, using the onsuccess / onerror\n * handlers to resolve / reject the PersistencePromise as appropriate.\n */ function wr(t) {\n    return new lr((function(e, n) {\n        t.onsuccess = function(t) {\n            var n = t.target.result;\n            e(n);\n        }, t.onerror = function(t) {\n            var e = _r(t.target.error);\n            n(e);\n        };\n    }));\n}\n\n// Guard so we only report the error once.\nvar br = !1;\n\nfunction _r(t) {\n    var e = dr.Qn(n());\n    if (e >= 12.2 && e < 13) {\n        var r = \"An internal error was encountered in the Indexed Database server\";\n        if (t.message.indexOf(r) >= 0) {\n            // Wrap error in a more descriptive one.\n            var i = new q(\"internal\", \"IOS_INDEXEDDB_BUG1: IndexedDb has thrown '\" + r + \"'. This is likely due to an unavoidable bug in iOS. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.\");\n            return br || (br = !0, \n            // Throw a global exception outside of this promise chain, for the user to\n            // potentially catch.\n            setTimeout((function() {\n                throw i;\n            }), 0)), i;\n        }\n    }\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ var Ir = /** @class */ function() {\n    function t(t, e, n, r, i) {\n        this._s = t, this.fs = e, this.ds = n, this.op = r, this.ws = i, this.Es = new fr, \n        this.then = this.Es.promise.then.bind(this.Es.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.Es.promise.catch((function(t) {}))\n        /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */;\n    }\n    return t.Ts = function(e, n, r, i, o) {\n        var u = new t(e, n, Date.now() + r, i, o);\n        return u.start(r), u;\n    }, \n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */\n    t.prototype.start = function(t) {\n        var e = this;\n        this.Is = setTimeout((function() {\n            return e.As();\n        }), t);\n    }, \n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */\n    t.prototype.Rs = function() {\n        return this.As();\n    }, \n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */\n    t.prototype.cancel = function(t) {\n        null !== this.Is && (this.clearTimeout(), this.Es.reject(new q(M.CANCELLED, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }, t.prototype.As = function() {\n        var t = this;\n        this._s.Ps((function() {\n            return null !== t.Is ? (t.clearTimeout(), t.op().then((function(e) {\n                return t.Es.resolve(e);\n            }))) : Promise.resolve();\n        }));\n    }, t.prototype.clearTimeout = function() {\n        null !== this.Is && (this.ws(this), clearTimeout(this.Is), this.Is = null);\n    }, t;\n}();\n\n/**\n * Returns a FirestoreError that can be surfaced to the user if the provided\n * error is an IndexedDbTransactionError. Re-throws the error otherwise.\n */ function Er(t, e) {\n    if (A(\"AsyncQueue\", e + \": \" + t), mr(t)) return new q(M.UNAVAILABLE, e + \": \" + t);\n    throw t;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ var Tr = \"The current tab is not in the required state to perform this operation. It might be necessary to refresh the browser tab.\", Nr = /** @class */ function() {\n    function t() {\n        this.ys = [];\n    }\n    return t.prototype.gs = function(t) {\n        this.ys.push(t);\n    }, t.prototype.Vs = function() {\n        this.ys.forEach((function(t) {\n            return t();\n        }));\n    }, t;\n}();\n\n/**\n * A base class representing a persistence transaction, encapsulating both the\n * transaction's sequence numbers as well as a list of onCommitted listeners.\n *\n * When you call Persistence.runTransaction(), it will create a transaction and\n * pass it to your callback. You then pass it to any method that operates\n * on persistence.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Encodes a resource path into a IndexedDb-compatible string form.\n */\nfunction Ar(t) {\n    for (var e = \"\", n = 0; n < t.length; n++) e.length > 0 && (e = Sr(e)), e = Dr(t.get(n), e);\n    return Sr(e);\n}\n\n/** Encodes a single segment of a resource path into the given result */ function Dr(t, e) {\n    for (var n = e, r = t.length, i = 0; i < r; i++) {\n        var o = t.charAt(i);\n        switch (o) {\n          case \"\\0\":\n            n += \"\u0001\u0010\";\n            break;\n\n          case \"\u0001\":\n            n += \"\u0001\u0011\";\n            break;\n\n          default:\n            n += o;\n        }\n    }\n    return n;\n}\n\n/** Encodes a path separator into the given result */ function Sr(t) {\n    return t + \"\u0001\u0001\";\n}\n\n/**\n * Decodes the given IndexedDb-compatible string form of a resource path into\n * a ResourcePath instance. Note that this method is not suitable for use with\n * decoding resource names from the server; those are One Platform format\n * strings.\n */ function xr(t) {\n    // Event the empty path must encode as a path of at least length 2. A path\n    // with exactly 2 must be the empty path.\n    var e = t.length;\n    if (k(e >= 2), 2 === e) return k(\"\u0001\" === t.charAt(0) && \"\u0001\" === t.charAt(1)), Z.ct();\n    // Escape characters cannot exist past the second-to-last position in the\n    // source value.\n        for (var n = e - 2, r = [], i = \"\", o = 0; o < e; ) {\n        // The last two characters of a valid encoded path must be a separator, so\n        // there must be an end to this segment.\n        var u = t.indexOf(\"\u0001\", o);\n        switch ((u < 0 || u > n) && x(), t.charAt(u + 1)) {\n          case \"\u0001\":\n            var s = t.substring(o, u), a = void 0;\n            0 === i.length ? \n            // Avoid copying for the common case of a segment that excludes \\0\n            // and \\001\n            a = s : (a = i += s, i = \"\"), r.push(a);\n            break;\n\n          case \"\u0010\":\n            i += t.substring(o, u), i += \"\\0\";\n            break;\n\n          case \"\u0011\":\n            // The escape character can be used in the output to encode itself.\n            i += t.substring(o, u + 1);\n            break;\n\n          default:\n            x();\n        }\n        o = u + 2;\n    }\n    return new Z(r);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Schema Version for the Web client:\n * 1.  Initial version including Mutation Queue, Query Cache, and Remote\n *     Document Cache\n * 2.  Used to ensure a targetGlobal object exists and add targetCount to it. No\n *     longer required because migration 3 unconditionally clears it.\n * 3.  Dropped and re-created Query Cache to deal with cache corruption related\n *     to limbo resolution. Addresses\n *     https://github.com/firebase/firebase-ios-sdk/issues/1548\n * 4.  Multi-Tab Support.\n * 5.  Removal of held write acks.\n * 6.  Create document global for tracking document cache size.\n * 7.  Ensure every cached document has a sentinel row with a sequence number.\n * 8.  Add collection-parent index for Collection Group queries.\n * 9.  Change RemoteDocumentChanges store to be keyed by readTime rather than\n *     an auto-incrementing ID. This is required for Index-Free queries.\n * 10. Rewrite the canonical IDs to the explicit Protobuf-based format.\n * 11. Add bundles and named_queries for bundle support.\n */\n/**\n * Wrapper class to store timestamps (seconds and nanos) in IndexedDb objects.\n */ var kr = function(t, e) {\n    this.seconds = t, this.nanoseconds = e;\n}, Or = function(t, \n/** Whether to allow shared access from multiple tabs. */\ne, n) {\n    this.ownerId = t, this.allowTabSynchronization = e, this.leaseTimestampMs = n;\n};\n\n/**\n * A singleton object to be stored in the 'owner' store in IndexedDb.\n *\n * A given database can have a single primary tab assigned at a given time. That\n * tab must validate that it is still holding the primary lease before every\n * operation that requires locked access. The primary tab should regularly\n * write an updated timestamp to this lease to prevent other tabs from\n * \"stealing\" the primary lease\n */\n/**\n * Name of the IndexedDb object store.\n *\n * Note that the name 'owner' is chosen to ensure backwards compatibility with\n * older clients that only supported single locked access to the persistence\n * layer.\n */\nOr.store = \"owner\", \n/**\n     * The key string used for the single object that exists in the\n     * DbPrimaryClient store.\n     */\nOr.key = \"owner\";\n\n/**\n * An object to be stored in the 'mutationQueues' store in IndexedDb.\n *\n * Each user gets a single queue of MutationBatches to apply to the server.\n * DbMutationQueue tracks the metadata about the queue.\n */\nvar Pr = function(\n/**\n     * The normalized user ID to which this queue belongs.\n     */\nt, \n/**\n     * An identifier for the highest numbered batch that has been acknowledged\n     * by the server. All MutationBatches in this queue with batchIds less\n     * than or equal to this value are considered to have been acknowledged by\n     * the server.\n     *\n     * NOTE: this is deprecated and no longer used by the code.\n     */\ne, \n/**\n     * A stream token that was previously sent by the server.\n     *\n     * See StreamingWriteRequest in datastore.proto for more details about\n     * usage.\n     *\n     * After sending this token, earlier tokens may not be used anymore so\n     * only a single stream token is retained.\n     *\n     * NOTE: this is deprecated and no longer used by the code.\n     */\nn) {\n    this.userId = t, this.lastAcknowledgedBatchId = e, this.lastStreamToken = n;\n};\n\n/** Name of the IndexedDb object store.  */ Pr.store = \"mutationQueues\", \n/** Keys are automatically assigned via the userId property. */\nPr.keyPath = \"userId\";\n\n/**\n * An object to be stored in the 'mutations' store in IndexedDb.\n *\n * Represents a batch of user-level mutations intended to be sent to the server\n * in a single write. Each user-level batch gets a separate DbMutationBatch\n * with a new batchId.\n */\nvar Vr = function(\n/**\n     * The normalized user ID to which this batch belongs.\n     */\nt, \n/**\n     * An identifier for this batch, allocated using an auto-generated key.\n     */\ne, \n/**\n     * The local write time of the batch, stored as milliseconds since the\n     * epoch.\n     */\nn, \n/**\n     * A list of \"mutations\" that represent a partial base state from when this\n     * write batch was initially created. During local application of the write\n     * batch, these baseMutations are applied prior to the real writes in order\n     * to override certain document fields from the remote document cache. This\n     * is necessary in the case of non-idempotent writes (e.g. `increment()`\n     * transforms) to make sure that the local view of the modified documents\n     * doesn't flicker if the remote document cache receives the result of the\n     * non-idempotent write before the write is removed from the queue.\n     *\n     * These mutations are never sent to the backend.\n     */\nr, \n/**\n     * A list of mutations to apply. All mutations will be applied atomically.\n     *\n     * Mutations are serialized via toMutation().\n     */\ni) {\n    this.userId = t, this.batchId = e, this.localWriteTimeMs = n, this.baseMutations = r, \n    this.mutations = i;\n};\n\n/** Name of the IndexedDb object store.  */ Vr.store = \"mutations\", \n/** Keys are automatically assigned via the userId, batchId properties. */\nVr.keyPath = \"batchId\", \n/** The index name for lookup of mutations by user. */\nVr.userMutationsIndex = \"userMutationsIndex\", \n/** The user mutations index is keyed by [userId, batchId] pairs. */\nVr.userMutationsKeyPath = [ \"userId\", \"batchId\" ];\n\n/**\n * An object to be stored in the 'documentMutations' store in IndexedDb.\n *\n * A manually maintained index of all the mutation batches that affect a given\n * document key. The rows in this table are references based on the contents of\n * DbMutationBatch.mutations.\n */\nvar Cr = /** @class */ function() {\n    function t() {}\n    /**\n     * Creates a [userId] key for use in the DbDocumentMutations index to iterate\n     * over all of a user's document mutations.\n     */    return t.prefixForUser = function(t) {\n        return [ t ];\n    }, \n    /**\n     * Creates a [userId, encodedPath] key for use in the DbDocumentMutations\n     * index to iterate over all at document mutations for a given path or lower.\n     */\n    t.prefixForPath = function(t, e) {\n        return [ t, Ar(e) ];\n    }, \n    /**\n     * Creates a full index key of [userId, encodedPath, batchId] for inserting\n     * and deleting into the DbDocumentMutations index.\n     */\n    t.key = function(t, e, n) {\n        return [ t, Ar(e), n ];\n    }, t;\n}();\n\nCr.store = \"documentMutations\", \n/**\n     * Because we store all the useful information for this store in the key,\n     * there is no useful information to store as the value. The raw (unencoded)\n     * path cannot be stored because IndexedDb doesn't store prototype\n     * information.\n     */\nCr.PLACEHOLDER = new Cr;\n\n/**\n * Represents the known absence of a document at a particular version.\n * Stored in IndexedDb as part of a DbRemoteDocument object.\n */\nvar Lr = function(t, e) {\n    this.path = t, this.readTime = e;\n}, Rr = function(t, e) {\n    this.path = t, this.version = e;\n}, Ur = \n// TODO: We are currently storing full document keys almost three times\n// (once as part of the primary key, once - partly - as `parentPath` and once\n// inside the encoded documents). During our next migration, we should\n// rewrite the primary key as parentPath + document ID which would allow us\n// to drop one value.\nfunction(\n/**\n     * Set to an instance of DbUnknownDocument if the data for a document is\n     * not known, but it is known that a document exists at the specified\n     * version (e.g. it had a successful update applied to it)\n     */\nt, \n/**\n     * Set to an instance of a DbNoDocument if it is known that no document\n     * exists.\n     */\ne, \n/**\n     * Set to an instance of a Document if there's a cached version of the\n     * document.\n     */\nn, \n/**\n     * Documents that were written to the remote document store based on\n     * a write acknowledgment are marked with `hasCommittedMutations`. These\n     * documents are potentially inconsistent with the backend's copy and use\n     * the write's commit version as their document version.\n     */\nr, \n/**\n     * When the document was read from the backend. Undefined for data written\n     * prior to schema version 9.\n     */\ni, \n/**\n     * The path of the collection this document is part of. Undefined for data\n     * written prior to schema version 9.\n     */\no) {\n    this.unknownDocument = t, this.noDocument = e, this.document = n, this.hasCommittedMutations = r, \n    this.readTime = i, this.parentPath = o;\n};\n\n/**\n * Represents a document that is known to exist but whose data is unknown.\n * Stored in IndexedDb as part of a DbRemoteDocument object.\n */ Ur.store = \"remoteDocuments\", \n/**\n     * An index that provides access to all entries sorted by read time (which\n     * corresponds to the last modification time of each row).\n     *\n     * This index is used to provide a changelog for Multi-Tab.\n     */\nUr.readTimeIndex = \"readTimeIndex\", Ur.readTimeIndexPath = \"readTime\", \n/**\n     * An index that provides access to documents in a collection sorted by read\n     * time.\n     *\n     * This index is used to allow the RemoteDocumentCache to fetch newly changed\n     * documents in a collection.\n     */\nUr.collectionReadTimeIndex = \"collectionReadTimeIndex\", Ur.collectionReadTimeIndexPath = [ \"parentPath\", \"readTime\" ];\n\n/**\n * Contains a single entry that has metadata about the remote document cache.\n */\nvar Mr = \n/**\n     * @param byteSize - Approximately the total size in bytes of all the\n     * documents in the document cache.\n     */\nfunction(t) {\n    this.byteSize = t;\n};\n\nMr.store = \"remoteDocumentGlobal\", Mr.key = \"remoteDocumentGlobalKey\";\n\n/**\n * An object to be stored in the 'targets' store in IndexedDb.\n *\n * This is based on and should be kept in sync with the proto used in the iOS\n * client.\n *\n * Each query the client listens to against the server is tracked on disk so\n * that the query can be efficiently resumed on restart.\n */\nvar qr = function(\n/**\n     * An auto-generated sequential numeric identifier for the query.\n     *\n     * Queries are stored using their canonicalId as the key, but these\n     * canonicalIds can be quite long so we additionally assign a unique\n     * queryId which can be used by referenced data structures (e.g.\n     * indexes) to minimize the on-disk cost.\n     */\nt, \n/**\n     * The canonical string representing this query. This is not unique.\n     */\ne, \n/**\n     * The last readTime received from the Watch Service for this query.\n     *\n     * This is the same value as TargetChange.read_time in the protos.\n     */\nn, \n/**\n     * An opaque, server-assigned token that allows watching a query to be\n     * resumed after disconnecting without retransmitting all the data\n     * that matches the query. The resume token essentially identifies a\n     * point in time from which the server should resume sending results.\n     *\n     * This is related to the snapshotVersion in that the resumeToken\n     * effectively also encodes that value, but the resumeToken is opaque\n     * and sometimes encodes additional information.\n     *\n     * A consequence of this is that the resumeToken should be used when\n     * asking the server to reason about where this client is in the watch\n     * stream, but the client should use the snapshotVersion for its own\n     * purposes.\n     *\n     * This is the same value as TargetChange.resume_token in the protos.\n     */\nr, \n/**\n     * A sequence number representing the last time this query was\n     * listened to, used for garbage collection purposes.\n     *\n     * Conventionally this would be a timestamp value, but device-local\n     * clocks are unreliable and they must be able to create new listens\n     * even while disconnected. Instead this should be a monotonically\n     * increasing number that's incremented on each listen call.\n     *\n     * This is different from the queryId since the queryId is an\n     * immutable identifier assigned to the Query on first use while\n     * lastListenSequenceNumber is updated every time the query is\n     * listened to.\n     */\ni, \n/**\n     * Denotes the maximum snapshot version at which the associated query view\n     * contained no limbo documents.  Undefined for data written prior to\n     * schema version 9.\n     */\no, \n/**\n     * The query for this target.\n     *\n     * Because canonical ids are not unique we must store the actual query. We\n     * use the proto to have an object we can persist without having to\n     * duplicate translation logic to and from a `Query` object.\n     */\nu) {\n    this.targetId = t, this.canonicalId = e, this.readTime = n, this.resumeToken = r, \n    this.lastListenSequenceNumber = i, this.lastLimboFreeSnapshotVersion = o, this.query = u;\n};\n\nqr.store = \"targets\", \n/** Keys are automatically assigned via the targetId property. */\nqr.keyPath = \"targetId\", \n/** The name of the queryTargets index. */\nqr.queryTargetsIndexName = \"queryTargetsIndex\", \n/**\n     * The index of all canonicalIds to the targets that they match. This is not\n     * a unique mapping because canonicalId does not promise a unique name for all\n     * possible queries, so we append the targetId to make the mapping unique.\n     */\nqr.queryTargetsKeyPath = [ \"canonicalId\", \"targetId\" ];\n\n/**\n * An object representing an association between a target and a document, or a\n * sentinel row marking the last sequence number at which a document was used.\n * Each document cached must have a corresponding sentinel row before lru\n * garbage collection is enabled.\n *\n * The target associations and sentinel rows are co-located so that orphaned\n * documents and their sequence numbers can be identified efficiently via a scan\n * of this store.\n */\nvar Fr = function(\n/**\n     * The targetId identifying a target or 0 for a sentinel row.\n     */\nt, \n/**\n     * The path to the document, as encoded in the key.\n     */\ne, \n/**\n     * If this is a sentinel row, this should be the sequence number of the last\n     * time the document specified by `path` was used. Otherwise, it should be\n     * `undefined`.\n     */\nn) {\n    this.targetId = t, this.path = e, this.sequenceNumber = n;\n};\n\n/** Name of the IndexedDb object store.  */ Fr.store = \"targetDocuments\", \n/** Keys are automatically assigned via the targetId, path properties. */\nFr.keyPath = [ \"targetId\", \"path\" ], \n/** The index name for the reverse index. */\nFr.documentTargetsIndex = \"documentTargetsIndex\", \n/** We also need to create the reverse index for these properties. */\nFr.documentTargetsKeyPath = [ \"path\", \"targetId\" ];\n\n/**\n * A record of global state tracked across all Targets, tracked separately\n * to avoid the need for extra indexes.\n *\n * This should be kept in-sync with the proto used in the iOS client.\n */\nvar jr = function(\n/**\n     * The highest numbered target id across all targets.\n     *\n     * See DbTarget.targetId.\n     */\nt, \n/**\n     * The highest numbered lastListenSequenceNumber across all targets.\n     *\n     * See DbTarget.lastListenSequenceNumber.\n     */\ne, \n/**\n     * A global snapshot version representing the last consistent snapshot we\n     * received from the backend. This is monotonically increasing and any\n     * snapshots received from the backend prior to this version (e.g. for\n     * targets resumed with a resumeToken) should be suppressed (buffered)\n     * until the backend has caught up to this snapshot version again. This\n     * prevents our cache from ever going backwards in time.\n     */\nn, \n/**\n     * The number of targets persisted.\n     */\nr) {\n    this.highestTargetId = t, this.highestListenSequenceNumber = e, this.lastRemoteSnapshotVersion = n, \n    this.targetCount = r;\n};\n\n/**\n * The key string used for the single object that exists in the\n * DbTargetGlobal store.\n */ jr.key = \"targetGlobalKey\", jr.store = \"targetGlobal\";\n\n/**\n * An object representing an association between a Collection id (e.g. 'messages')\n * to a parent path (e.g. '/chats/123') that contains it as a (sub)collection.\n * This is used to efficiently find all collections to query when performing\n * a Collection Group query.\n */\nvar zr = function(\n/**\n     * The collectionId (e.g. 'messages')\n     */\nt, \n/**\n     * The path to the parent (either a document location or an empty path for\n     * a root-level collection).\n     */\ne) {\n    this.collectionId = t, this.parent = e;\n};\n\n/** Name of the IndexedDb object store. */ zr.store = \"collectionParents\", \n/** Keys are automatically assigned via the collectionId, parent properties. */\nzr.keyPath = [ \"collectionId\", \"parent\" ];\n\n/**\n * A record of the metadata state of each client.\n *\n * PORTING NOTE: This is used to synchronize multi-tab state and does not need\n * to be ported to iOS or Android.\n */\nvar Gr = function(\n// Note: Previous schema versions included a field\n// \"lastProcessedDocumentChangeId\". Don't use anymore.\n/** The auto-generated client id assigned at client startup. */\nt, \n/** The last time this state was updated. */\ne, \n/** Whether the client's network connection is enabled. */\nn, \n/** Whether this client is running in a foreground tab. */\nr) {\n    this.clientId = t, this.updateTimeMs = e, this.networkEnabled = n, this.inForeground = r;\n};\n\n/** Name of the IndexedDb object store. */ Gr.store = \"clientMetadata\", \n/** Keys are automatically assigned via the clientId properties. */\nGr.keyPath = \"clientId\";\n\n/**\n * A object representing a bundle loaded by the SDK.\n */\nvar Br = function(\n/** The ID of the loaded bundle. */\nt, \n/** The create time of the loaded bundle. */\ne, \n/** The schema version of the loaded bundle. */\nn) {\n    this.bundleId = t, this.createTime = e, this.version = n;\n};\n\n/** Name of the IndexedDb object store. */ Br.store = \"bundles\", Br.keyPath = \"bundleId\";\n\n/**\n * A object representing a named query loaded by the SDK via a bundle.\n */\nvar Qr = function(\n/** The name of the query. */\nt, \n/** The read time of the results saved in the bundle from the named query. */\ne, \n/** The query saved in the bundle. */\nn) {\n    this.name = t, this.readTime = e, this.bundledQuery = n;\n};\n\n/** Name of the IndexedDb object store. */ Qr.store = \"namedQueries\", Qr.keyPath = \"name\";\n\n// Visible for testing\nvar Yr = b(b(b(b([ Pr.store, Vr.store, Cr.store, Ur.store, qr.store, Or.store, jr.store, Fr.store ], [ Gr.store ]), [ Mr.store ]), [ zr.store ]), [ Br.store, Qr.store ]), Hr = /** @class */ function(t) {\n    function e(e, n) {\n        var r = this;\n        return (r = t.call(this) || this).ps = e, r.bs = n, r;\n    }\n    return m(e, t), e;\n}(Nr);\n\n// V2 is no longer usable (see comment at top of file)\n// Visible for testing\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function Kr(t, e) {\n    var n = O(t);\n    return dr.zn(n.ps, e);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A batch of mutations that will be sent as one unit to the backend.\n */ var Xr = /** @class */ function() {\n    /**\n     * @param batchId - The unique ID of this mutation batch.\n     * @param localWriteTime - The original write time of this mutation.\n     * @param baseMutations - Mutations that are used to populate the base\n     * values when this mutation is applied locally. This can be used to locally\n     * overwrite values that are persisted in the remote document cache. Base\n     * mutations are never sent to the backend.\n     * @param mutations - The user-provided mutations in this mutation batch.\n     * User-provided mutations are applied both locally and remotely on the\n     * backend.\n     */\n    function t(t, e, n, r) {\n        this.batchId = t, this.vs = e, this.baseMutations = n, this.mutations = r\n        /**\n     * Applies all the mutations in this MutationBatch to the specified document\n     * to create a new remote document\n     *\n     * @param docKey - The key of the document to apply mutations to.\n     * @param maybeDoc - The document to apply mutations to.\n     * @param batchResult - The result of applying the MutationBatch to the\n     * backend.\n     */;\n    }\n    return t.prototype.Ss = function(t, e, n) {\n        for (var r = n.Ds, i = 0; i < this.mutations.length; i++) {\n            var o = this.mutations[i];\n            o.key.isEqual(t) && (e = qe(o, e, r[i]));\n        }\n        return e;\n    }, \n    /**\n     * Computes the local view of a document given all the mutations in this\n     * batch.\n     *\n     * @param docKey - The key of the document to apply mutations to.\n     * @param maybeDoc - The document to apply mutations to.\n     */\n    t.prototype.Cs = function(t, e) {\n        // First, apply the base state. This allows us to apply non-idempotent\n        // transform against a consistent set of values.\n        for (var n = 0, r = this.baseMutations; n < r.length; n++) {\n            (u = r[n]).key.isEqual(t) && (e = Fe(u, e, this.vs));\n        }\n        // Second, apply all user-provided mutations.\n                for (var i = 0, o = this.mutations; i < o.length; i++) {\n            var u;\n            (u = o[i]).key.isEqual(t) && (e = Fe(u, e, this.vs));\n        }\n        return e;\n    }, \n    /**\n     * Computes the local view for all provided documents given the mutations in\n     * this batch.\n     */\n    t.prototype.xs = function(t) {\n        var e = this, n = t;\n        // TODO(mrschmidt): This implementation is O(n^2). If we apply the mutations\n        // directly (as done in `applyToLocalView()`), we can reduce the complexity\n        // to O(n).\n                return this.mutations.forEach((function(r) {\n            var i = e.Cs(r.key, t.get(r.key));\n            i && (n = n.zt(r.key, i));\n        })), n;\n    }, t.prototype.keys = function() {\n        return this.mutations.reduce((function(t, e) {\n            return t.add(e.key);\n        }), mn());\n    }, t.prototype.isEqual = function(t) {\n        return this.batchId === t.batchId && L(this.mutations, t.mutations, (function(t, e) {\n            return ze(t, e);\n        })) && L(this.baseMutations, t.baseMutations, (function(t, e) {\n            return ze(t, e);\n        }));\n    }, t;\n}(), Wr = /** @class */ function() {\n    function t(t, e, n, \n    /**\n     * A pre-computed mapping from each mutated document to the resulting\n     * version.\n     */\n    r) {\n        this.batch = t, this.Ns = e, this.Ds = n, this.$s = r\n        /**\n     * Creates a new MutationBatchResult for the given batch and results. There\n     * must be one result for each mutation in the batch. This static factory\n     * caches a document=&gt;version mapping (docVersions).\n     */;\n    }\n    return t.from = function(e, n, r) {\n        k(e.mutations.length === r.length);\n        for (var i = vn(), o = e.mutations, u = 0; u < o.length; u++) i = i.zt(o[u].key, r[u].version);\n        return new t(e, n, r, i);\n    }, t;\n}(), Zr = function(t) {\n    this.Fs = t;\n};\n\n/** The result of applying a mutation batch to the backend. */\n/** Decodes a remote document from storage locally to a Document. */ function Jr(t, e) {\n    if (e.document) return Kn(t.Fs, e.document, !!e.hasCommittedMutations);\n    if (e.noDocument) {\n        var n = tt.Et(e.noDocument.path), r = ri(e.noDocument.readTime);\n        return new Vt(n, r, {\n            hasCommittedMutations: !!e.hasCommittedMutations\n        });\n    }\n    if (e.unknownDocument) {\n        var i = tt.Et(e.unknownDocument.path);\n        r = ri(e.unknownDocument.version);\n        return new Ct(i, r);\n    }\n    return x();\n}\n\n/** Encodes a document for storage locally. */ function $r(t, e, n) {\n    var r = ti(n), i = e.key.path.X().it();\n    if (e instanceof Pt) {\n        var o = function(t, e) {\n            return {\n                name: jn(t, e.key),\n                fields: e.bt().mapValue.fields,\n                updateTime: Ln(t, e.version.j())\n            };\n        }(t.Fs, e), u = e.hasCommittedMutations;\n        return new Ur(\n        /* unknownDocument= */ null, \n        /* noDocument= */ null, o, u, r, i);\n    }\n    if (e instanceof Vt) {\n        var s = e.key.path.it(), a = ni(e.version);\n        u = e.hasCommittedMutations;\n        return new Ur(\n        /* unknownDocument= */ null, new Lr(s, a), \n        /* document= */ null, u, r, i);\n    }\n    if (e instanceof Ct) {\n        var c = e.key.path.it(), h = ni(e.version);\n        return new Ur(new Rr(c, h), \n        /* noDocument= */ null, \n        /* document= */ null, \n        /* hasCommittedMutations= */ !0, r, i);\n    }\n    return x();\n}\n\nfunction ti(t) {\n    var e = t.j();\n    return [ e.seconds, e.nanoseconds ];\n}\n\nfunction ei(t) {\n    var e = new K(t[0], t[1]);\n    return X.K(e);\n}\n\nfunction ni(t) {\n    var e = t.j();\n    return new kr(e.seconds, e.nanoseconds);\n}\n\nfunction ri(t) {\n    var e = new K(t.seconds, t.nanoseconds);\n    return X.K(e);\n}\n\n/** Encodes a batch of mutations into a DbMutationBatch for local storage. */\n/** Decodes a DbMutationBatch into a MutationBatch */ function ii(t, e) {\n    // Squash old transform mutations into existing patch or set mutations.\n    // The replacement of representing `transforms` with `update_transforms`\n    // on the SDK means that old `transform` mutations stored in IndexedDB need\n    // to be updated to `update_transforms`.\n    // TODO(b/174608374): Remove this code once we perform a schema migration.\n    for (var n = (e.baseMutations || []).map((function(e) {\n        return Wn(t.Fs, e);\n    })), r = 0; r < e.mutations.length - 1; ++r) {\n        var i = e.mutations[r];\n        if (r + 1 < e.mutations.length && void 0 !== e.mutations[r + 1].transform) {\n            var o = e.mutations[r + 1];\n            i.updateTransforms = o.transform.fieldTransforms, e.mutations.splice(r + 1, 1), \n            ++r;\n        }\n    }\n    var u = e.mutations.map((function(e) {\n        return Wn(t.Fs, e);\n    })), s = K.fromMillis(e.localWriteTimeMs);\n    return new Xr(e.batchId, s, n, u);\n}\n\n/** Decodes a DbTarget into TargetData */ function oi(t) {\n    var e, n, r = ri(t.readTime), i = void 0 !== t.lastLimboFreeSnapshotVersion ? ri(t.lastLimboFreeSnapshotVersion) : X.min();\n    return void 0 !== t.query.documents ? (k(1 === (n = t.query).documents.length), \n    e = he(re(Bn(n.documents[0])))) : e = function(t) {\n        return he($n(t));\n    }(t.query), new ge(e, t.targetId, 0 /* Listen */ , t.lastListenSequenceNumber, r, i, U.fromBase64String(t.resumeToken))\n    /** Encodes TargetData into a DbTarget for storage locally. */;\n}\n\nfunction ui(t, e) {\n    var n, r = ni(e.Ot), i = ni(e.lastLimboFreeSnapshotVersion);\n    n = qt(e.target) ? Zn(t.Fs, e.target) : Jn(t.Fs, e.target);\n    // We can't store the resumeToken as a ByteString in IndexedDb, so we\n    // convert it to a base64 string for storage.\n    var o = e.resumeToken.toBase64();\n    // lastListenSequenceNumber is always 0 until we do real GC.\n        return new qr(e.targetId, Ut(e.target), r, o, e.sequenceNumber, i, n);\n}\n\n/**\n * A helper function for figuring out what kind of query has been stored.\n */\n/**\n * Encodes a `BundledQuery` from bundle proto to a Query object.\n *\n * This reconstructs the original query used to build the bundle being loaded,\n * including features exists only in SDKs (for example: limit-to-last).\n */ function si(t) {\n    var e = $n({\n        parent: t.parent,\n        structuredQuery: t.structuredQuery\n    });\n    return \"LAST\" === t.limitType ? fe(e, e.limit, \"L\" /* Last */) : e;\n}\n\n/** Encodes a NamedQuery proto object to a NamedQuery model object. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ var ai = /** @class */ function() {\n    function t() {}\n    return t.prototype.Os = function(t, e) {\n        return ci(t).get(e).next((function(t) {\n            if (t) return {\n                id: (e = t).bundleId,\n                createTime: ri(e.createTime),\n                version: e.version\n            };\n            /** Encodes a DbBundle to a BundleMetadata object. */            var e;\n            /** Encodes a BundleMetadata to a DbBundle. */        }));\n    }, t.prototype.ks = function(t, e) {\n        return ci(t).put({\n            bundleId: (n = e).id,\n            createTime: ni(Mn(n.createTime)),\n            version: n.version\n        });\n        var n;\n        /** Encodes a DbNamedQuery to a NamedQuery. */    }, t.prototype.Ms = function(t, e) {\n        return hi(t).get(e).next((function(t) {\n            if (t) return {\n                name: (e = t).name,\n                query: si(e.bundledQuery),\n                readTime: ri(e.readTime)\n            };\n            var e;\n            /** Encodes a NamedQuery from a bundle proto to a DbNamedQuery. */        }));\n    }, t.prototype.Ls = function(t, e) {\n        return hi(t).put(function(t) {\n            return {\n                name: t.name,\n                readTime: ni(Mn(t.readTime)),\n                bundledQuery: t.bundledQuery\n            };\n        }(e));\n    }, t;\n}();\n\n/**\n * Helper to get a typed SimpleDbStore for the bundles object store.\n */ function ci(t) {\n    return Kr(t, Br.store);\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the namedQueries object store.\n */ function hi(t) {\n    return Kr(t, Qr.store);\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An in-memory implementation of IndexManager.\n */ var fi = /** @class */ function() {\n    function t() {\n        this.Bs = new li;\n    }\n    return t.prototype.qs = function(t, e) {\n        return this.Bs.add(e), lr.resolve();\n    }, t.prototype.Us = function(t, e) {\n        return lr.resolve(this.Bs.getEntries(e));\n    }, t;\n}(), li = /** @class */ function() {\n    function t() {\n        this.index = {};\n    }\n    // Returns false if the entry already existed.\n        return t.prototype.add = function(t) {\n        var e = t.tt(), n = t.X(), r = this.index[e] || new sn(Z.H), i = !r.has(n);\n        return this.index[e] = r.add(n), i;\n    }, t.prototype.has = function(t) {\n        var e = t.tt(), n = t.X(), r = this.index[e];\n        return r && r.has(n);\n    }, t.prototype.getEntries = function(t) {\n        return (this.index[t] || new sn(Z.H)).it();\n    }, t;\n}(), pi = /** @class */ function() {\n    function t() {\n        /**\n         * An in-memory copy of the index entries we've already written since the SDK\n         * launched. Used to avoid re-writing the same entry repeatedly.\n         *\n         * This is *NOT* a complete cache of what's in persistence and so can never be used to\n         * satisfy reads.\n         */\n        this.Qs = new li;\n    }\n    /**\n     * Adds a new entry to the collection parent index.\n     *\n     * Repeated calls for the same collectionPath should be avoided within a\n     * transaction as IndexedDbIndexManager only caches writes once a transaction\n     * has been committed.\n     */    return t.prototype.qs = function(t, e) {\n        var n = this;\n        if (!this.Qs.has(e)) {\n            var r = e.tt(), i = e.X();\n            t.gs((function() {\n                // Add the collection to the in memory cache only if the transaction was\n                // successfully committed.\n                n.Qs.add(e);\n            }));\n            var o = {\n                collectionId: r,\n                parent: Ar(i)\n            };\n            return di(t).put(o);\n        }\n        return lr.resolve();\n    }, t.prototype.Us = function(t, e) {\n        var n = [], r = IDBKeyRange.bound([ e, \"\" ], [ R(e), \"\" ], \n        /*lowerOpen=*/ !1, \n        /*upperOpen=*/ !0);\n        return di(t).rs(r).next((function(t) {\n            for (var r = 0, i = t; r < i.length; r++) {\n                var o = i[r];\n                // This collectionId guard shouldn't be necessary (and isn't as long\n                // as we're running in a real browser), but there's a bug in\n                // indexeddbshim that breaks our range in our tests running in node:\n                // https://github.com/axemclion/IndexedDBShim/issues/334\n                                if (o.collectionId !== e) break;\n                n.push(xr(o.parent));\n            }\n            return n;\n        }));\n    }, t;\n}();\n\n/**\n * Internal implementation of the collection-parent index exposed by MemoryIndexManager.\n * Also used for in-memory caching by IndexedDbIndexManager and initial index population\n * in indexeddb_schema.ts\n */\n/**\n * Helper to get a typed SimpleDbStore for the collectionParents\n * document store.\n */\nfunction di(t) {\n    return Kr(t, zr.store);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ var vi = {\n    Ks: !1,\n    Ws: 0,\n    js: 0,\n    Gs: 0\n}, yi = /** @class */ function() {\n    function t(\n    // When we attempt to collect, we will only do so if the cache size is greater than this\n    // threshold. Passing `COLLECTION_DISABLED` here will cause collection to always be skipped.\n    t, \n    // The percentage of sequence numbers that we will attempt to collect\n    e, \n    // A cap on the total number of sequence numbers that will be collected. This prevents\n    // us from collecting a huge number of sequence numbers if the cache has grown very large.\n    n) {\n        this.zs = t, this.Hs = e, this.Js = n;\n    }\n    return t.Ys = function(e) {\n        return new t(e, t.Xs, t.Zs);\n    }, t;\n}();\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Verifies the error thrown by a LocalStore operation. If a LocalStore\n * operation fails because the primary lease has been taken by another client,\n * we ignore the error (the persistence layer will immediately call\n * `applyPrimaryLease` to propagate the primary state change). All other errors\n * are re-thrown.\n *\n * @param err - An error returned by a LocalStore operation.\n * @returns A Promise that resolves after we recovered, or the original error.\n */\nfunction mi(t) {\n    return g(this, void 0, void 0, (function() {\n        return w(this, (function(e) {\n            if (t.code !== M.FAILED_PRECONDITION || t.message !== Tr) throw t;\n            return N(\"LocalStore\", \"Unexpectedly lost primary lease\"), [ 2 /*return*/ ];\n        }));\n    }));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A map implementation that uses objects as keys. Objects must have an\n * associated equals function and must be immutable. Entries in the map are\n * stored together with the key being produced from the mapKeyFn. This map\n * automatically handles collisions of keys.\n */ yi.Xs = 10, yi.Zs = 1e3, yi.ti = new yi(41943040, yi.Xs, yi.Zs), yi.ei = new yi(-1, 0, 0);\n\nvar gi = /** @class */ function() {\n    function t(t, e) {\n        this.ni = t, this.si = e, \n        /**\n             * The inner map for a key/value pair. Due to the possibility of collisions we\n             * keep a list of entries that we do a linear search through to find an actual\n             * match. Note that collisions should be rare, so we still expect near\n             * constant time lookups in practice.\n             */\n        this.ii = {}\n        /** Get a value for this key, or undefined if it does not exist. */;\n    }\n    return t.prototype.get = function(t) {\n        var e = this.ni(t), n = this.ii[e];\n        if (void 0 !== n) for (var r = 0, i = n; r < i.length; r++) {\n            var o = i[r], u = o[0], s = o[1];\n            if (this.si(u, t)) return s;\n        }\n    }, t.prototype.has = function(t) {\n        return void 0 !== this.get(t);\n    }, \n    /** Put this key and value in the map. */ t.prototype.set = function(t, e) {\n        var n = this.ni(t), r = this.ii[n];\n        if (void 0 !== r) {\n            for (var i = 0; i < r.length; i++) if (this.si(r[i][0], t)) return void (r[i] = [ t, e ]);\n            r.push([ t, e ]);\n        } else this.ii[n] = [ [ t, e ] ];\n    }, \n    /**\n     * Remove this key from the map. Returns a boolean if anything was deleted.\n     */\n    t.prototype.delete = function(t) {\n        var e = this.ni(t), n = this.ii[e];\n        if (void 0 === n) return !1;\n        for (var r = 0; r < n.length; r++) if (this.si(n[r][0], t)) return 1 === n.length ? delete this.ii[e] : n.splice(r, 1), \n        !0;\n        return !1;\n    }, t.prototype.forEach = function(t) {\n        nt(this.ii, (function(e, n) {\n            for (var r = 0, i = n; r < i.length; r++) {\n                var o = i[r], u = o[0], s = o[1];\n                t(u, s);\n            }\n        }));\n    }, t.prototype.et = function() {\n        return rt(this.ii);\n    }, t;\n}(), wi = /** @class */ function() {\n    function t() {\n        // A mapping of document key to the new cache entry that should be written (or null if any\n        // existing cache entry should be removed).\n        this.ri = new gi((function(t) {\n            return t.toString();\n        }), (function(t, e) {\n            return t.isEqual(e);\n        })), this.oi = !1;\n    }\n    return t.prototype.ci = function(t) {\n        var e = this.ri.get(t);\n        return e ? e.readTime : X.min();\n    }, \n    /**\n     * Buffers a `RemoteDocumentCache.addEntry()` call.\n     *\n     * You can only modify documents that have already been retrieved via\n     * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).\n     */\n    t.prototype.ai = function(t, e) {\n        this.ui(), this.ri.set(t.key, {\n            hi: t,\n            readTime: e\n        });\n    }, \n    /**\n     * Buffers a `RemoteDocumentCache.removeEntry()` call.\n     *\n     * You can only remove documents that have already been retrieved via\n     * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).\n     */\n    t.prototype.li = function(t, e) {\n        void 0 === e && (e = null), this.ui(), this.ri.set(t, {\n            hi: null,\n            readTime: e\n        });\n    }, \n    /**\n     * Looks up an entry in the cache. The buffered changes will first be checked,\n     * and if no buffered change applies, this will forward to\n     * `RemoteDocumentCache.getEntry()`.\n     *\n     * @param transaction - The transaction in which to perform any persistence\n     *     operations.\n     * @param documentKey - The key of the entry to look up.\n     * @returns The cached Document or NoDocument entry, or null if we have\n     *     nothing cached.\n     */\n    t.prototype._i = function(t, e) {\n        this.ui();\n        var n = this.ri.get(e);\n        return void 0 !== n ? lr.resolve(n.hi) : this.fi(t, e);\n    }, \n    /**\n     * Looks up several entries in the cache, forwarding to\n     * `RemoteDocumentCache.getEntry()`.\n     *\n     * @param transaction - The transaction in which to perform any persistence\n     *     operations.\n     * @param documentKeys - The keys of the entries to look up.\n     * @returns A map of cached `Document`s or `NoDocument`s, indexed by key. If\n     *     an entry cannot be found, the corresponding key will be mapped to a\n     *     null value.\n     */\n    t.prototype.getEntries = function(t, e) {\n        return this.di(t, e);\n    }, \n    /**\n     * Applies buffered changes to the underlying RemoteDocumentCache, using\n     * the provided transaction.\n     */\n    t.prototype.apply = function(t) {\n        return this.ui(), this.oi = !0, this.wi(t);\n    }, \n    /** Helper to assert this.changes is not null  */ t.prototype.ui = function() {}, \n    t;\n}();\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An in-memory buffer of entries to be written to a RemoteDocumentCache.\n * It can be used to batch up a set of changes to be written to the cache, but\n * additionally supports reading entries back with the `getEntry()` method,\n * falling back to the underlying RemoteDocumentCache if no entry is\n * buffered.\n *\n * Entries added to the cache *must* be read first. This is to facilitate\n * calculating the size delta of the pending changes.\n *\n * PORTING NOTE: This class was implemented then removed from other platforms.\n * If byte-counting ends up being needed on the other platforms, consider\n * porting this class as part of that implementation work.\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Delete a mutation batch and the associated document mutations.\n * @returns A PersistencePromise of the document mutations that were removed.\n */\nfunction bi(t, e, n) {\n    var r = t.store(Vr.store), i = t.store(Cr.store), o = [], u = IDBKeyRange.only(n.batchId), s = 0, a = r.hs({\n        range: u\n    }, (function(t, e, n) {\n        return s++, n.delete();\n    }));\n    o.push(a.next((function() {\n        k(1 === s);\n    })));\n    for (var c = [], h = 0, f = n.mutations; h < f.length; h++) {\n        var l = f[h], p = Cr.key(e, l.key.path, n.batchId);\n        o.push(i.delete(p)), c.push(l.key);\n    }\n    return lr.Mn(o).next((function() {\n        return c;\n    }));\n}\n\n/**\n * Returns an approximate size for the given document.\n */ function _i(t) {\n    var e;\n    if (t.document) e = t.document; else if (t.unknownDocument) e = t.unknownDocument; else {\n        if (!t.noDocument) throw x();\n        e = t.noDocument;\n    }\n    return JSON.stringify(e).length;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A mutation queue for a specific user, backed by IndexedDB. */ var Ii = /** @class */ function() {\n    function t(\n    /**\n     * The normalized userId (e.g. null UID => \"\" userId) used to store /\n     * retrieve mutations.\n     */\n    t, e, n, r) {\n        this.userId = t, this.Qt = e, this.Ei = n, this.Ti = r, \n        /**\n             * Caches the document keys for pending mutation batches. If the mutation\n             * has been removed from IndexedDb, the cached value may continue to\n             * be used to retrieve the batch's document keys. To remove a cached value\n             * locally, `removeCachedMutationKeys()` should be invoked either directly\n             * or through `removeMutationBatches()`.\n             *\n             * With multi-tab, when the primary client acknowledges or rejects a mutation,\n             * this cache is used by secondary clients to invalidate the local\n             * view of the documents that were previously affected by the mutation.\n             */\n        // PORTING NOTE: Multi-tab only.\n        this.Ii = {}\n        /**\n     * Creates a new mutation queue for the given user.\n     * @param user - The user for which to create a mutation queue.\n     * @param serializer - The serializer to use when persisting to IndexedDb.\n     */;\n    }\n    return t.mi = function(e, n, r, i) {\n        // TODO(mcg): Figure out what constraints there are on userIDs\n        // In particular, are there any reserved characters? are empty ids allowed?\n        // For the moment store these together in the same mutations table assuming\n        // that empty userIDs aren't allowed.\n        return k(\"\" !== e.uid), new t(e.m() ? e.uid : \"\", n, r, i);\n    }, t.prototype.Ai = function(t) {\n        var e = !0, n = IDBKeyRange.bound([ this.userId, Number.NEGATIVE_INFINITY ], [ this.userId, Number.POSITIVE_INFINITY ]);\n        return Ti(t).hs({\n            index: Vr.userMutationsIndex,\n            range: n\n        }, (function(t, n, r) {\n            e = !1, r.done();\n        })).next((function() {\n            return e;\n        }));\n    }, t.prototype.Ri = function(t, e, n, r) {\n        var i = this, o = Ni(t), u = Ti(t);\n        // The IndexedDb implementation in Chrome (and Firefox) does not handle\n        // compound indices that include auto-generated keys correctly. To ensure\n        // that the index entry is added correctly in all browsers, we perform two\n        // writes: The first write is used to retrieve the next auto-generated Batch\n        // ID, and the second write populates the index and stores the actual\n        // mutation batch.\n        // See: https://bugs.chromium.org/p/chromium/issues/detail?id=701972\n        // We write an empty object to obtain key\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return u.add({}).next((function(s) {\n            k(\"number\" == typeof s);\n            for (var a = new Xr(s, e, n, r), c = function(t, e, n) {\n                var r = n.baseMutations.map((function(e) {\n                    return Xn(t.Fs, e);\n                })), i = n.mutations.map((function(e) {\n                    return Xn(t.Fs, e);\n                }));\n                return new Vr(e, n.batchId, n.vs.toMillis(), r, i);\n            }(i.Qt, i.userId, a), h = [], f = new sn((function(t, e) {\n                return C(t.rt(), e.rt());\n            })), l = 0, p = r; l < p.length; l++) {\n                var d = p[l], v = Cr.key(i.userId, d.key.path, s);\n                f = f.add(d.key.path.X()), h.push(u.put(c)), h.push(o.put(v, Cr.PLACEHOLDER));\n            }\n            return f.forEach((function(e) {\n                h.push(i.Ei.qs(t, e));\n            })), t.gs((function() {\n                i.Ii[s] = a.keys();\n            })), lr.Mn(h).next((function() {\n                return a;\n            }));\n        }));\n    }, t.prototype.Pi = function(t, e) {\n        var n = this;\n        return Ti(t).get(e).next((function(t) {\n            return t ? (k(t.userId === n.userId), ii(n.Qt, t)) : null;\n        }));\n    }, \n    /**\n     * Returns the document keys for the mutation batch with the given batchId.\n     * For primary clients, this method returns `null` after\n     * `removeMutationBatches()` has been called. Secondary clients return a\n     * cached result until `removeCachedMutationKeys()` is invoked.\n     */\n    // PORTING NOTE: Multi-tab only.\n    t.prototype.yi = function(t, e) {\n        var n = this;\n        return this.Ii[e] ? lr.resolve(this.Ii[e]) : this.Pi(t, e).next((function(t) {\n            if (t) {\n                var r = t.keys();\n                return n.Ii[e] = r, r;\n            }\n            return null;\n        }));\n    }, t.prototype.gi = function(t, e) {\n        var n = this, r = e + 1, i = IDBKeyRange.lowerBound([ this.userId, r ]), o = null;\n        return Ti(t).hs({\n            index: Vr.userMutationsIndex,\n            range: i\n        }, (function(t, e, i) {\n            e.userId === n.userId && (k(e.batchId >= r), o = ii(n.Qt, e)), i.done();\n        })).next((function() {\n            return o;\n        }));\n    }, t.prototype.Vi = function(t) {\n        var e = IDBKeyRange.upperBound([ this.userId, Number.POSITIVE_INFINITY ]), n = -1;\n        return Ti(t).hs({\n            index: Vr.userMutationsIndex,\n            range: e,\n            reverse: !0\n        }, (function(t, e, r) {\n            n = e.batchId, r.done();\n        })).next((function() {\n            return n;\n        }));\n    }, t.prototype.pi = function(t) {\n        var e = this, n = IDBKeyRange.bound([ this.userId, -1 ], [ this.userId, Number.POSITIVE_INFINITY ]);\n        return Ti(t).rs(Vr.userMutationsIndex, n).next((function(t) {\n            return t.map((function(t) {\n                return ii(e.Qt, t);\n            }));\n        }));\n    }, t.prototype.bi = function(t, e) {\n        var n = this, r = Cr.prefixForPath(this.userId, e.path), i = IDBKeyRange.lowerBound(r), o = [];\n        // Scan the document-mutation index starting with a prefix starting with\n        // the given documentKey.\n                return Ni(t).hs({\n            range: i\n        }, (function(r, i, u) {\n            var s = r[0], a = r[1], c = r[2], h = xr(a);\n            // Only consider rows matching exactly the specific key of\n            // interest. Note that because we order by path first, and we\n            // order terminators before path separators, we'll encounter all\n            // the index rows for documentKey contiguously. In particular, all\n            // the rows for documentKey will occur before any rows for\n            // documents nested in a subcollection beneath documentKey so we\n            // can stop as soon as we hit any such row.\n                        if (s === n.userId && e.path.isEqual(h)) \n            // Look up the mutation batch in the store.\n            return Ti(t).get(c).next((function(t) {\n                if (!t) throw x();\n                k(t.userId === n.userId), o.push(ii(n.Qt, t));\n            }));\n            u.done();\n        })).next((function() {\n            return o;\n        }));\n    }, t.prototype.vi = function(t, e) {\n        var n = this, r = new sn(C), i = [];\n        return e.forEach((function(e) {\n            var o = Cr.prefixForPath(n.userId, e.path), u = IDBKeyRange.lowerBound(o), s = Ni(t).hs({\n                range: u\n            }, (function(t, i, o) {\n                var u = t[0], s = t[1], a = t[2], c = xr(s);\n                // Only consider rows matching exactly the specific key of\n                // interest. Note that because we order by path first, and we\n                // order terminators before path separators, we'll encounter all\n                // the index rows for documentKey contiguously. In particular, all\n                // the rows for documentKey will occur before any rows for\n                // documents nested in a subcollection beneath documentKey so we\n                // can stop as soon as we hit any such row.\n                                u === n.userId && e.path.isEqual(c) ? r = r.add(a) : o.done();\n            }));\n            i.push(s);\n        })), lr.Mn(i).next((function() {\n            return n.Si(t, r);\n        }));\n    }, t.prototype.Di = function(t, e) {\n        var n = this, r = e.path, i = r.length + 1, o = Cr.prefixForPath(this.userId, r), u = IDBKeyRange.lowerBound(o), s = new sn(C);\n        return Ni(t).hs({\n            range: u\n        }, (function(t, e, o) {\n            var u = t[0], a = t[1], c = t[2], h = xr(a);\n            u === n.userId && r.nt(h) ? \n            // Rows with document keys more than one segment longer than the\n            // query path can't be matches. For example, a query on 'rooms'\n            // can't match the document /rooms/abc/messages/xyx.\n            // TODO(mcg): we'll need a different scanner when we implement\n            // ancestor queries.\n            h.length === i && (s = s.add(c)) : o.done();\n        })).next((function() {\n            return n.Si(t, s);\n        }));\n    }, t.prototype.Si = function(t, e) {\n        var n = this, r = [], i = [];\n        // TODO(rockwood): Implement this using iterate.\n        return e.forEach((function(e) {\n            i.push(Ti(t).get(e).next((function(t) {\n                if (null === t) throw x();\n                k(t.userId === n.userId), r.push(ii(n.Qt, t));\n            })));\n        })), lr.Mn(i).next((function() {\n            return r;\n        }));\n    }, t.prototype.Ci = function(t, e) {\n        var n = this;\n        return bi(t.ps, this.userId, e).next((function(r) {\n            return t.gs((function() {\n                n.xi(e.batchId);\n            })), lr.forEach(r, (function(e) {\n                return n.Ti.Ni(t, e);\n            }));\n        }));\n    }, \n    /**\n     * Clears the cached keys for a mutation batch. This method should be\n     * called by secondary clients after they process mutation updates.\n     *\n     * Note that this method does not have to be called from primary clients as\n     * the corresponding cache entries are cleared when an acknowledged or\n     * rejected batch is removed from the mutation queue.\n     */\n    // PORTING NOTE: Multi-tab only\n    t.prototype.xi = function(t) {\n        delete this.Ii[t];\n    }, t.prototype.$i = function(t) {\n        var e = this;\n        return this.Ai(t).next((function(n) {\n            if (!n) return lr.resolve();\n            // Verify that there are no entries in the documentMutations index if\n            // the queue is empty.\n                        var r = IDBKeyRange.lowerBound(Cr.prefixForUser(e.userId)), i = [];\n            return Ni(t).hs({\n                range: r\n            }, (function(t, n, r) {\n                if (t[0] === e.userId) {\n                    var o = xr(t[1]);\n                    i.push(o);\n                } else r.done();\n            })).next((function() {\n                k(0 === i.length);\n            }));\n        }));\n    }, t.prototype.Fi = function(t, e) {\n        return Ei(t, this.userId, e);\n    }, \n    // PORTING NOTE: Multi-tab only (state is held in memory in other clients).\n    /** Returns the mutation queue's metadata from IndexedDb. */\n    t.prototype.Oi = function(t) {\n        var e = this;\n        return Ai(t).get(this.userId).next((function(t) {\n            return t || new Pr(e.userId, -1, \n            /*lastStreamToken=*/ \"\");\n        }));\n    }, t;\n}();\n\n/**\n * @returns true if the mutation queue for the given user contains a pending\n *         mutation for the given key.\n */ function Ei(t, e, n) {\n    var r = Cr.prefixForPath(e, n.path), i = r[1], o = IDBKeyRange.lowerBound(r), u = !1;\n    return Ni(t).hs({\n        range: o,\n        us: !0\n    }, (function(t, n, r) {\n        var o = t[0], s = t[1];\n        t[2];\n        o === e && s === i && (u = !0), r.done();\n    })).next((function() {\n        return u;\n    }));\n}\n\n/** Returns true if any mutation queue contains the given document. */\n/**\n * Helper to get a typed SimpleDbStore for the mutations object store.\n */ function Ti(t) {\n    return Kr(t, Vr.store);\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the mutationQueues object store.\n */ function Ni(t) {\n    return Kr(t, Cr.store);\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the mutationQueues object store.\n */ function Ai(t) {\n    return Kr(t, Pr.store);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Offset to ensure non-overlapping target ids. */\n/**\n * Generates monotonically increasing target IDs for sending targets to the\n * watch stream.\n *\n * The client constructs two generators, one for the target cache, and one for\n * for the sync engine (to generate limbo documents targets). These\n * generators produce non-overlapping IDs (by using even and odd IDs\n * respectively).\n *\n * By separating the target ID space, the query cache can generate target IDs\n * that persist across client restarts, while sync engine can independently\n * generate in-memory target IDs that are transient and can be reused after a\n * restart.\n */ var Di = /** @class */ function() {\n    function t(t) {\n        this.ki = t;\n    }\n    return t.prototype.next = function() {\n        return this.ki += 2, this.ki;\n    }, t.Mi = function() {\n        // The target cache generator must return '2' in its first call to `next()`\n        // as there is no differentiation in the protocol layer between an unset\n        // number and the number '0'. If we were to sent a target with target ID\n        // '0', the backend would consider it unset and replace it with its own ID.\n        return new t(0);\n    }, t.Li = function() {\n        // Sync engine assigns target IDs for limbo document detection.\n        return new t(-1);\n    }, t;\n}(), Si = /** @class */ function() {\n    function t(t, e) {\n        this.Ti = t, this.Qt = e;\n    }\n    // PORTING NOTE: We don't cache global metadata for the target cache, since\n    // some of it (in particular `highestTargetId`) can be modified by secondary\n    // tabs. We could perhaps be more granular (and e.g. still cache\n    // `lastRemoteSnapshotVersion` in memory) but for simplicity we currently go\n    // to IndexedDb whenever we need to read metadata. We can revisit if it turns\n    // out to have a meaningful performance impact.\n        return t.prototype.Bi = function(t) {\n        var e = this;\n        return this.qi(t).next((function(n) {\n            var r = new Di(n.highestTargetId);\n            return n.highestTargetId = r.next(), e.Ui(t, n).next((function() {\n                return n.highestTargetId;\n            }));\n        }));\n    }, t.prototype.Qi = function(t) {\n        return this.qi(t).next((function(t) {\n            return X.K(new K(t.lastRemoteSnapshotVersion.seconds, t.lastRemoteSnapshotVersion.nanoseconds));\n        }));\n    }, t.prototype.Ki = function(t) {\n        return this.qi(t).next((function(t) {\n            return t.highestListenSequenceNumber;\n        }));\n    }, t.prototype.Wi = function(t, e, n) {\n        var r = this;\n        return this.qi(t).next((function(i) {\n            return i.highestListenSequenceNumber = e, n && (i.lastRemoteSnapshotVersion = n.j()), \n            e > i.highestListenSequenceNumber && (i.highestListenSequenceNumber = e), r.Ui(t, i);\n        }));\n    }, t.prototype.ji = function(t, e) {\n        var n = this;\n        return this.Gi(t, e).next((function() {\n            return n.qi(t).next((function(r) {\n                return r.targetCount += 1, n.zi(e, r), n.Ui(t, r);\n            }));\n        }));\n    }, t.prototype.Hi = function(t, e) {\n        return this.Gi(t, e);\n    }, t.prototype.Ji = function(t, e) {\n        var n = this;\n        return this.Yi(t, e.targetId).next((function() {\n            return xi(t).delete(e.targetId);\n        })).next((function() {\n            return n.qi(t);\n        })).next((function(e) {\n            return k(e.targetCount > 0), e.targetCount -= 1, n.Ui(t, e);\n        }));\n    }, \n    /**\n     * Drops any targets with sequence number less than or equal to the upper bound, excepting those\n     * present in `activeTargetIds`. Document associations for the removed targets are also removed.\n     * Returns the number of targets removed.\n     */\n    t.prototype.Xi = function(t, e, n) {\n        var r = this, i = 0, o = [];\n        return xi(t).hs((function(u, s) {\n            var a = oi(s);\n            a.sequenceNumber <= e && null === n.get(a.targetId) && (i++, o.push(r.Ji(t, a)));\n        })).next((function() {\n            return lr.Mn(o);\n        })).next((function() {\n            return i;\n        }));\n    }, \n    /**\n     * Call provided function with each `TargetData` that we have cached.\n     */\n    t.prototype.In = function(t, e) {\n        return xi(t).hs((function(t, n) {\n            var r = oi(n);\n            e(r);\n        }));\n    }, t.prototype.qi = function(t) {\n        return ki(t).get(jr.key).next((function(t) {\n            return k(null !== t), t;\n        }));\n    }, t.prototype.Ui = function(t, e) {\n        return ki(t).put(jr.key, e);\n    }, t.prototype.Gi = function(t, e) {\n        return xi(t).put(ui(this.Qt, e));\n    }, \n    /**\n     * In-place updates the provided metadata to account for values in the given\n     * TargetData. Saving is done separately. Returns true if there were any\n     * changes to the metadata.\n     */\n    t.prototype.zi = function(t, e) {\n        var n = !1;\n        return t.targetId > e.highestTargetId && (e.highestTargetId = t.targetId, n = !0), \n        t.sequenceNumber > e.highestListenSequenceNumber && (e.highestListenSequenceNumber = t.sequenceNumber, \n        n = !0), n;\n    }, t.prototype.Zi = function(t) {\n        return this.qi(t).next((function(t) {\n            return t.targetCount;\n        }));\n    }, t.prototype.tr = function(t, e) {\n        // Iterating by the canonicalId may yield more than one result because\n        // canonicalId values are not required to be unique per target. This query\n        // depends on the queryTargets index to be efficient.\n        var n = Ut(e), r = IDBKeyRange.bound([ n, Number.NEGATIVE_INFINITY ], [ n, Number.POSITIVE_INFINITY ]), i = null;\n        return xi(t).hs({\n            range: r,\n            index: qr.queryTargetsIndexName\n        }, (function(t, n, r) {\n            var o = oi(n);\n            // After finding a potential match, check that the target is\n            // actually equal to the requested target.\n                        Mt(e, o.target) && (i = o, r.done());\n        })).next((function() {\n            return i;\n        }));\n    }, t.prototype.er = function(t, e, n) {\n        var r = this, i = [], o = Oi(t);\n        // PORTING NOTE: The reverse index (documentsTargets) is maintained by\n        // IndexedDb.\n                return e.forEach((function(e) {\n            var u = Ar(e.path);\n            i.push(o.put(new Fr(n, u))), i.push(r.Ti.nr(t, n, e));\n        })), lr.Mn(i);\n    }, t.prototype.sr = function(t, e, n) {\n        var r = this, i = Oi(t);\n        // PORTING NOTE: The reverse index (documentsTargets) is maintained by\n        // IndexedDb.\n                return lr.forEach(e, (function(e) {\n            var o = Ar(e.path);\n            return lr.Mn([ i.delete([ n, o ]), r.Ti.ir(t, n, e) ]);\n        }));\n    }, t.prototype.Yi = function(t, e) {\n        var n = Oi(t), r = IDBKeyRange.bound([ e ], [ e + 1 ], \n        /*lowerOpen=*/ !1, \n        /*upperOpen=*/ !0);\n        return n.delete(r);\n    }, t.prototype.rr = function(t, e) {\n        var n = IDBKeyRange.bound([ e ], [ e + 1 ], \n        /*lowerOpen=*/ !1, \n        /*upperOpen=*/ !0), r = Oi(t), i = mn();\n        return r.hs({\n            range: n,\n            us: !0\n        }, (function(t, e, n) {\n            var r = xr(t[1]), o = new tt(r);\n            i = i.add(o);\n        })).next((function() {\n            return i;\n        }));\n    }, t.prototype.Fi = function(t, e) {\n        var n = Ar(e.path), r = IDBKeyRange.bound([ n ], [ R(n) ], \n        /*lowerOpen=*/ !1, \n        /*upperOpen=*/ !0), i = 0;\n        return Oi(t).hs({\n            index: Fr.documentTargetsIndex,\n            us: !0,\n            range: r\n        }, (function(t, e, n) {\n            var r = t[0];\n            // Having a sentinel row for a document does not count as containing that document;\n            // For the target cache, containing the document means the document is part of some\n            // target.\n                        t[1];\n            0 !== r && (i++, n.done());\n        })).next((function() {\n            return i > 0;\n        }));\n    }, \n    /**\n     * Looks up a TargetData entry by target ID.\n     *\n     * @param targetId - The target ID of the TargetData entry to look up.\n     * @returns The cached TargetData entry, or null if the cache has no entry for\n     * the target.\n     */\n    // PORTING NOTE: Multi-tab only.\n    t.prototype.Sn = function(t, e) {\n        return xi(t).get(e).next((function(t) {\n            return t ? oi(t) : null;\n        }));\n    }, t;\n}();\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Helper to get a typed SimpleDbStore for the queries object store.\n */\nfunction xi(t) {\n    return Kr(t, qr.store);\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the target globals object store.\n */ function ki(t) {\n    return Kr(t, jr.store);\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the document target object store.\n */ function Oi(t) {\n    return Kr(t, Fr.store);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function Pi(t, e) {\n    var n = t[0], r = t[1], i = e[0], o = e[1], u = C(n, i);\n    return 0 === u ? C(r, o) : u;\n}\n\n/**\n * Used to calculate the nth sequence number. Keeps a rolling buffer of the\n * lowest n values passed to `addElement`, and finally reports the largest of\n * them in `maxValue`.\n */ var Vi = /** @class */ function() {\n    function t(t) {\n        this.cr = t, this.buffer = new sn(Pi), this.ar = 0;\n    }\n    return t.prototype.ur = function() {\n        return ++this.ar;\n    }, t.prototype.hr = function(t) {\n        var e = [ t, this.ur() ];\n        if (this.buffer.size < this.cr) this.buffer = this.buffer.add(e); else {\n            var n = this.buffer.last();\n            Pi(e, n) < 0 && (this.buffer = this.buffer.delete(n).add(e));\n        }\n    }, Object.defineProperty(t.prototype, \"maxValue\", {\n        get: function() {\n            // Guaranteed to be non-empty. If we decide we are not collecting any\n            // sequence numbers, nthSequenceNumber below short-circuits. If we have\n            // decided that we are collecting n sequence numbers, it's because n is some\n            // percentage of the existing sequence numbers. That means we should never\n            // be in a situation where we are collecting sequence numbers but don't\n            // actually have any.\n            return this.buffer.last()[0];\n        },\n        enumerable: !1,\n        configurable: !0\n    }), t;\n}(), Ci = /** @class */ function() {\n    function t(t, e) {\n        this.lr = t, this._s = e, this._r = !1, this.dr = null;\n    }\n    return t.prototype.start = function(t) {\n        -1 !== this.lr.params.zs && this.wr(t);\n    }, t.prototype.stop = function() {\n        this.dr && (this.dr.cancel(), this.dr = null);\n    }, Object.defineProperty(t.prototype, \"Er\", {\n        get: function() {\n            return null !== this.dr;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), t.prototype.wr = function(t) {\n        var e = this, n = this._r ? 3e5 : 6e4;\n        N(\"LruGarbageCollector\", \"Garbage collection scheduled in \" + n + \"ms\"), this.dr = this._s.Tr(\"lru_garbage_collection\" /* LruGarbageCollection */ , n, (function() {\n            return g(e, void 0, void 0, (function() {\n                var e;\n                return w(this, (function(n) {\n                    switch (n.label) {\n                      case 0:\n                        this.dr = null, this._r = !0, n.label = 1;\n\n                      case 1:\n                        return n.trys.push([ 1, 3, , 7 ]), [ 4 /*yield*/ , t.Ir(this.lr) ];\n\n                      case 2:\n                        return n.sent(), [ 3 /*break*/ , 7 ];\n\n                      case 3:\n                        return mr(e = n.sent()) ? (N(\"LruGarbageCollector\", \"Ignoring IndexedDB error during garbage collection: \", e), \n                        [ 3 /*break*/ , 6 ]) : [ 3 /*break*/ , 4 ];\n\n                      case 4:\n                        return [ 4 /*yield*/ , mi(e) ];\n\n                      case 5:\n                        n.sent(), n.label = 6;\n\n                      case 6:\n                        return [ 3 /*break*/ , 7 ];\n\n                      case 7:\n                        return [ 4 /*yield*/ , this.wr(t) ];\n\n                      case 8:\n                        return n.sent(), [ 2 /*return*/ ];\n                    }\n                }));\n            }));\n        }));\n    }, t;\n}(), Li = /** @class */ function() {\n    function t(t, e) {\n        this.mr = t, this.params = e;\n    }\n    return t.prototype.Ar = function(t, e) {\n        return this.mr.Rr(t).next((function(t) {\n            return Math.floor(e / 100 * t);\n        }));\n    }, t.prototype.Pr = function(t, e) {\n        var n = this;\n        if (0 === e) return lr.resolve(H.q);\n        var r = new Vi(e);\n        return this.mr.In(t, (function(t) {\n            return r.hr(t.sequenceNumber);\n        })).next((function() {\n            return n.mr.yr(t, (function(t) {\n                return r.hr(t);\n            }));\n        })).next((function() {\n            return r.maxValue;\n        }));\n    }, t.prototype.Xi = function(t, e, n) {\n        return this.mr.Xi(t, e, n);\n    }, t.prototype.gr = function(t, e) {\n        return this.mr.gr(t, e);\n    }, t.prototype.Vr = function(t, e) {\n        var n = this;\n        return -1 === this.params.zs ? (N(\"LruGarbageCollector\", \"Garbage collection skipped; disabled\"), \n        lr.resolve(vi)) : this.pr(t).next((function(r) {\n            return r < n.params.zs ? (N(\"LruGarbageCollector\", \"Garbage collection skipped; Cache size \" + r + \" is lower than threshold \" + n.params.zs), \n            vi) : n.br(t, e);\n        }));\n    }, t.prototype.pr = function(t) {\n        return this.mr.pr(t);\n    }, t.prototype.br = function(t, n) {\n        var r, i, o, u, s, a, c, h = this, f = Date.now();\n        return this.Ar(t, this.params.Hs).next((function(e) {\n            // Cap at the configured max\n            return e > h.params.Js ? (N(\"LruGarbageCollector\", \"Capping sequence numbers to collect down to the maximum of \" + h.params.Js + \" from \" + e), \n            i = h.params.Js) : i = e, u = Date.now(), h.Pr(t, i);\n        })).next((function(e) {\n            return r = e, s = Date.now(), h.Xi(t, r, n);\n        })).next((function(e) {\n            return o = e, a = Date.now(), h.gr(t, r);\n        })).next((function(t) {\n            return c = Date.now(), T() <= e.DEBUG && N(\"LruGarbageCollector\", \"LRU Garbage Collection\\n\\tCounted targets in \" + (u - f) + \"ms\\n\\tDetermined least recently used \" + i + \" in \" + (s - u) + \"ms\\n\\tRemoved \" + o + \" targets in \" + (a - s) + \"ms\\n\\tRemoved \" + t + \" documents in \" + (c - a) + \"ms\\nTotal Duration: \" + (c - f) + \"ms\"), \n            lr.resolve({\n                Ks: !0,\n                Ws: i,\n                js: o,\n                Gs: t\n            });\n        }));\n    }, t;\n}(), Ri = /** @class */ function() {\n    function t(t, e) {\n        this.db = t, this.lr = function(t, e) {\n            return new Li(t, e);\n        }(this, e);\n    }\n    return t.prototype.Rr = function(t) {\n        var e = this.vr(t);\n        return this.db.Sr().Zi(t).next((function(t) {\n            return e.next((function(e) {\n                return t + e;\n            }));\n        }));\n    }, t.prototype.vr = function(t) {\n        var e = 0;\n        return this.yr(t, (function(t) {\n            e++;\n        })).next((function() {\n            return e;\n        }));\n    }, t.prototype.In = function(t, e) {\n        return this.db.Sr().In(t, e);\n    }, t.prototype.yr = function(t, e) {\n        return this.Dr(t, (function(t, n) {\n            return e(n);\n        }));\n    }, t.prototype.nr = function(t, e, n) {\n        return Ui(t, n);\n    }, t.prototype.ir = function(t, e, n) {\n        return Ui(t, n);\n    }, t.prototype.Xi = function(t, e, n) {\n        return this.db.Sr().Xi(t, e, n);\n    }, t.prototype.Ni = function(t, e) {\n        return Ui(t, e);\n    }, \n    /**\n     * Returns true if anything would prevent this document from being garbage\n     * collected, given that the document in question is not present in any\n     * targets and has a sequence number less than or equal to the upper bound for\n     * the collection run.\n     */\n    t.prototype.Cr = function(t, e) {\n        return function(t, e) {\n            var n = !1;\n            return Ai(t).ls((function(r) {\n                return Ei(t, r, e).next((function(t) {\n                    return t && (n = !0), lr.resolve(!t);\n                }));\n            })).next((function() {\n                return n;\n            }));\n        }(t, e);\n    }, t.prototype.gr = function(t, e) {\n        var n = this, r = this.db.$r().Nr(), i = [], o = 0;\n        return this.Dr(t, (function(u, s) {\n            if (s <= e) {\n                var a = n.Cr(t, u).next((function(e) {\n                    if (!e) \n                    // Our size accounting requires us to read all documents before\n                    // removing them.\n                    return o++, r._i(t, u).next((function() {\n                        return r.li(u), Oi(t).delete([ 0, Ar(u.path) ]);\n                    }));\n                }));\n                i.push(a);\n            }\n        })).next((function() {\n            return lr.Mn(i);\n        })).next((function() {\n            return r.apply(t);\n        })).next((function() {\n            return o;\n        }));\n    }, t.prototype.removeTarget = function(t, e) {\n        var n = e.kt(t.bs);\n        return this.db.Sr().Hi(t, n);\n    }, t.prototype.Fr = function(t, e) {\n        return Ui(t, e);\n    }, \n    /**\n     * Call provided function for each document in the cache that is 'orphaned'. Orphaned\n     * means not a part of any target, so the only entry in the target-document index for\n     * that document will be the sentinel row (targetId 0), which will also have the sequence\n     * number for the last time the document was accessed.\n     */\n    t.prototype.Dr = function(t, e) {\n        var n, r = Oi(t), i = H.q;\n        return r.hs({\n            index: Fr.documentTargetsIndex\n        }, (function(t, r) {\n            var o = t[0], u = (t[1], r.path), s = r.sequenceNumber;\n            0 === o ? (\n            // if nextToReport is valid, report it, this is a new key so the\n            // last one must not be a member of any targets.\n            i !== H.q && e(new tt(xr(n)), i), \n            // set nextToReport to be this sequence number. It's the next one we\n            // might report, if we don't find any targets for this document.\n            // Note that the sequence number must be defined when the targetId\n            // is 0.\n            i = s, n = u) : \n            // set nextToReport to be invalid, we know we don't need to report\n            // this one since we found a target for it.\n            i = H.q;\n        })).next((function() {\n            // Since we report sequence numbers after getting to the next key, we\n            // need to check if the last key we iterated over was an orphaned\n            // document and report it.\n            i !== H.q && e(new tt(xr(n)), i);\n        }));\n    }, t.prototype.pr = function(t) {\n        return this.db.$r().Or(t);\n    }, t;\n}();\n\n/**\n * This class is responsible for the scheduling of LRU garbage collection. It handles checking\n * whether or not GC is enabled, as well as which delay to use before the next run.\n */ function Ui(t, e) {\n    return Oi(t).put(\n    /**\n * @returns A value suitable for writing a sentinel row in the target-document\n * store.\n */\n    function(t, e) {\n        return new Fr(0, Ar(t.path), e);\n    }(e, t.bs));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The RemoteDocumentCache for IndexedDb. To construct, invoke\n * `newIndexedDbRemoteDocumentCache()`.\n */ var Mi = /** @class */ function() {\n    /**\n     * @param serializer - The document serializer.\n     * @param indexManager - The query indexes that need to be maintained.\n     */\n    function t(t, e) {\n        this.Qt = t, this.Ei = e\n        /**\n     * Adds the supplied entries to the cache.\n     *\n     * All calls of `addEntry` are required to go through the RemoteDocumentChangeBuffer\n     * returned by `newChangeBuffer()` to ensure proper accounting of metadata.\n     */;\n    }\n    return t.prototype.ai = function(t, e, n) {\n        return ji(t).put(zi(e), n);\n    }, \n    /**\n     * Removes a document from the cache.\n     *\n     * All calls of `removeEntry`  are required to go through the RemoteDocumentChangeBuffer\n     * returned by `newChangeBuffer()` to ensure proper accounting of metadata.\n     */\n    t.prototype.li = function(t, e) {\n        var n = ji(t), r = zi(e);\n        return n.delete(r);\n    }, \n    /**\n     * Updates the current cache size.\n     *\n     * Callers to `addEntry()` and `removeEntry()` *must* call this afterwards to update the\n     * cache's metadata.\n     */\n    t.prototype.updateMetadata = function(t, e) {\n        var n = this;\n        return this.getMetadata(t).next((function(r) {\n            return r.byteSize += e, n.kr(t, r);\n        }));\n    }, t.prototype._i = function(t, e) {\n        var n = this;\n        return ji(t).get(zi(e)).next((function(t) {\n            return n.Mr(t);\n        }));\n    }, \n    /**\n     * Looks up an entry in the cache.\n     *\n     * @param documentKey - The key of the entry to look up.\n     * @returns The cached MaybeDocument entry and its size, or null if we have\n     * nothing cached.\n     */\n    t.prototype.Lr = function(t, e) {\n        var n = this;\n        return ji(t).get(zi(e)).next((function(t) {\n            var e = n.Mr(t);\n            return e ? {\n                hi: e,\n                size: _i(t)\n            } : null;\n        }));\n    }, t.prototype.getEntries = function(t, e) {\n        var n = this, r = fn();\n        return this.Br(t, e, (function(t, e) {\n            var i = n.Mr(e);\n            r = r.zt(t, i);\n        })).next((function() {\n            return r;\n        }));\n    }, \n    /**\n     * Looks up several entries in the cache.\n     *\n     * @param documentKeys - The set of keys entries to look up.\n     * @returns A map of MaybeDocuments indexed by key (if a document cannot be\n     *     found, the key will be mapped to null) and a map of sizes indexed by\n     *     key (zero if the key cannot be found).\n     */\n    t.prototype.qr = function(t, e) {\n        var n = this, r = fn(), i = new rn(tt.H);\n        return this.Br(t, e, (function(t, e) {\n            var o = n.Mr(e);\n            o ? (r = r.zt(t, o), i = i.zt(t, _i(e))) : (r = r.zt(t, null), i = i.zt(t, 0));\n        })).next((function() {\n            return {\n                Ur: r,\n                Qr: i\n            };\n        }));\n    }, t.prototype.Br = function(t, e, n) {\n        if (e.et()) return lr.resolve();\n        var r = IDBKeyRange.bound(e.first().path.it(), e.last().path.it()), i = e.te(), o = i.oe();\n        return ji(t).hs({\n            range: r\n        }, (function(t, e, r) {\n            // Go through keys not found in cache.\n            for (var u = tt.Et(t); o && tt.H(o, u) < 0; ) n(o, null), o = i.oe();\n            o && o.isEqual(u) && (\n            // Key found in cache.\n            n(o, e), o = i.ce() ? i.oe() : null), \n            // Skip to the next key (if there is one).\n            o ? r.ss(o.path.it()) : r.done();\n        })).next((function() {\n            // The rest of the keys are not in the cache. One case where `iterate`\n            // above won't go through them is when the cache is empty.\n            for (;o; ) n(o, null), o = i.ce() ? i.oe() : null;\n        }));\n    }, t.prototype.Kr = function(t, e, n) {\n        var r = this, i = pn(), o = e.path.length + 1, u = {};\n        if (n.isEqual(X.min())) {\n            // Documents are ordered by key, so we can use a prefix scan to narrow\n            // down the documents we need to match the query against.\n            var s = e.path.it();\n            u.range = IDBKeyRange.lowerBound(s);\n        } else {\n            // Execute an index-free query and filter by read time. This is safe\n            // since all document changes to queries that have a\n            // lastLimboFreeSnapshotVersion (`sinceReadTime`) have a read time set.\n            var a = e.path.it(), c = ti(n);\n            u.range = IDBKeyRange.lowerBound([ a, c ], \n            /* open= */ !0), u.index = Ur.collectionReadTimeIndex;\n        }\n        return ji(t).hs(u, (function(t, n, u) {\n            // The query is actually returning any path that starts with the query\n            // path prefix which may include documents in subcollections. For\n            // example, a query on 'rooms' will return rooms/abc/messages/xyx but we\n            // shouldn't match it. Fix this by discarding rows with document keys\n            // more than one segment longer than the query path.\n            if (t.length === o) {\n                var s = Jr(r.Qt, n);\n                e.path.nt(s.key.path) ? s instanceof Pt && ve(e, s) && (i = i.zt(s.key, s)) : u.done();\n            }\n        })).next((function() {\n            return i;\n        }));\n    }, t.prototype.Nr = function(t) {\n        return new qi(this, !!t && t.Wr);\n    }, t.prototype.Or = function(t) {\n        return this.getMetadata(t).next((function(t) {\n            return t.byteSize;\n        }));\n    }, t.prototype.getMetadata = function(t) {\n        return Fi(t).get(Mr.key).next((function(t) {\n            return k(!!t), t;\n        }));\n    }, t.prototype.kr = function(t, e) {\n        return Fi(t).put(Mr.key, e);\n    }, \n    /**\n     * Decodes `remoteDoc` and returns the document (or null, if the document\n     * corresponds to the format used for sentinel deletes).\n     */\n    t.prototype.Mr = function(t) {\n        if (t) {\n            var e = Jr(this.Qt, t);\n            return e instanceof Vt && e.version.isEqual(X.min()) ? null : e;\n        }\n        return null;\n    }, t;\n}(), qi = /** @class */ function(t) {\n    /**\n     * @param documentCache - The IndexedDbRemoteDocumentCache to apply the changes to.\n     * @param trackRemovals - Whether to create sentinel deletes that can be tracked by\n     * `getNewDocumentChanges()`.\n     */\n    function e(e, n) {\n        var r = this;\n        return (r = t.call(this) || this).jr = e, r.Wr = n, \n        // A map of document sizes prior to applying the changes in this buffer.\n        r.Gr = new gi((function(t) {\n            return t.toString();\n        }), (function(t, e) {\n            return t.isEqual(e);\n        })), r;\n    }\n    return m(e, t), e.prototype.wi = function(t) {\n        var e = this, n = [], r = 0, i = new sn((function(t, e) {\n            return C(t.rt(), e.rt());\n        }));\n        return this.ri.forEach((function(o, u) {\n            var s = e.Gr.get(o);\n            if (u.hi) {\n                var a = $r(e.jr.Qt, u.hi, e.ci(o));\n                i = i.add(o.path.X());\n                var c = _i(a);\n                r += c - s, n.push(e.jr.ai(t, o, a));\n            } else if (r -= s, e.Wr) {\n                // In order to track removals, we store a \"sentinel delete\" in the\n                // RemoteDocumentCache. This entry is represented by a NoDocument\n                // with a version of 0 and ignored by `maybeDecodeDocument()` but\n                // preserved in `getNewDocumentChanges()`.\n                var h = $r(e.jr.Qt, new Vt(o, X.min()), e.ci(o));\n                n.push(e.jr.ai(t, o, h));\n            } else n.push(e.jr.li(t, o));\n        })), i.forEach((function(r) {\n            n.push(e.jr.Ei.qs(t, r));\n        })), n.push(this.jr.updateMetadata(t, r)), lr.Mn(n);\n    }, e.prototype.fi = function(t, e) {\n        var n = this;\n        // Record the size of everything we load from the cache so we can compute a delta later.\n                return this.jr.Lr(t, e).next((function(t) {\n            return null === t ? (n.Gr.set(e, 0), null) : (n.Gr.set(e, t.size), t.hi);\n        }));\n    }, e.prototype.di = function(t, e) {\n        var n = this;\n        // Record the size of everything we load from the cache so we can compute\n        // a delta later.\n                return this.jr.qr(t, e).next((function(t) {\n            var e = t.Ur;\n            // Note: `getAllFromCache` returns two maps instead of a single map from\n            // keys to `DocumentSizeEntry`s. This is to allow returning the\n            // `NullableMaybeDocumentMap` directly, without a conversion.\n            return t.Qr.forEach((function(t, e) {\n                n.Gr.set(t, e);\n            })), e;\n        }));\n    }, e;\n}(wi);\n\n/**\n * Creates a new IndexedDbRemoteDocumentCache.\n *\n * @param serializer - The document serializer.\n * @param indexManager - The query indexes that need to be maintained.\n */\n/**\n * Handles the details of adding and updating documents in the IndexedDbRemoteDocumentCache.\n *\n * Unlike the MemoryRemoteDocumentChangeBuffer, the IndexedDb implementation computes the size\n * delta for all submitted changes. This avoids having to re-read all documents from IndexedDb\n * when we apply the changes.\n */ function Fi(t) {\n    return Kr(t, Mr.store);\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the remoteDocuments object store.\n */ function ji(t) {\n    return Kr(t, Ur.store);\n}\n\nfunction zi(t) {\n    return t.path.it();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Performs database creation and schema upgrades. */ var Gi = /** @class */ function() {\n    function t(t) {\n        this.Qt = t;\n    }\n    /**\n     * Performs database creation and schema upgrades.\n     *\n     * Note that in production, this method is only ever used to upgrade the schema\n     * to SCHEMA_VERSION. Different values of toVersion are only used for testing\n     * and local feature development.\n     */    return t.prototype.Jn = function(t, e, n, r) {\n        var i = this;\n        k(n < r && n >= 0 && r <= 11);\n        var o = new pr(\"createOrUpgrade\", e);\n        n < 1 && r >= 1 && (function(t) {\n            t.createObjectStore(Or.store);\n        }(t), function(t) {\n            t.createObjectStore(Pr.store, {\n                keyPath: Pr.keyPath\n            }), t.createObjectStore(Vr.store, {\n                keyPath: Vr.keyPath,\n                autoIncrement: !0\n            }).createIndex(Vr.userMutationsIndex, Vr.userMutationsKeyPath, {\n                unique: !0\n            }), t.createObjectStore(Cr.store);\n        }(t), Bi(t), function(t) {\n            t.createObjectStore(Ur.store);\n        }(t));\n        // Migration 2 to populate the targetGlobal object no longer needed since\n        // migration 3 unconditionally clears it.\n        var u = lr.resolve();\n        return n < 3 && r >= 3 && (\n        // Brand new clients don't need to drop and recreate--only clients that\n        // potentially have corrupt data.\n        0 !== n && (function(t) {\n            t.deleteObjectStore(Fr.store), t.deleteObjectStore(qr.store), t.deleteObjectStore(jr.store);\n        }(t), Bi(t)), u = u.next((function() {\n            /**\n     * Creates the target global singleton row.\n     *\n     * @param txn - The version upgrade transaction for indexeddb\n     */\n            return function(t) {\n                var e = t.store(jr.store), n = new jr(\n                /*highestTargetId=*/ 0, \n                /*lastListenSequenceNumber=*/ 0, X.min().j(), \n                /*targetCount=*/ 0);\n                return e.put(jr.key, n);\n            }(o);\n        }))), n < 4 && r >= 4 && (0 !== n && (\n        // Schema version 3 uses auto-generated keys to generate globally unique\n        // mutation batch IDs (this was previously ensured internally by the\n        // client). To migrate to the new schema, we have to read all mutations\n        // and write them back out. We preserve the existing batch IDs to guarantee\n        // consistency with other object stores. Any further mutation batch IDs will\n        // be auto-generated.\n        u = u.next((function() {\n            return function(t, e) {\n                return e.store(Vr.store).rs().next((function(n) {\n                    t.deleteObjectStore(Vr.store), t.createObjectStore(Vr.store, {\n                        keyPath: Vr.keyPath,\n                        autoIncrement: !0\n                    }).createIndex(Vr.userMutationsIndex, Vr.userMutationsKeyPath, {\n                        unique: !0\n                    });\n                    var r = e.store(Vr.store), i = n.map((function(t) {\n                        return r.put(t);\n                    }));\n                    return lr.Mn(i);\n                }));\n            }(t, o);\n        }))), u = u.next((function() {\n            !function(t) {\n                t.createObjectStore(Gr.store, {\n                    keyPath: Gr.keyPath\n                });\n            }(t);\n        }))), n < 5 && r >= 5 && (u = u.next((function() {\n            return i.zr(o);\n        }))), n < 6 && r >= 6 && (u = u.next((function() {\n            return function(t) {\n                t.createObjectStore(Mr.store);\n            }(t), i.Hr(o);\n        }))), n < 7 && r >= 7 && (u = u.next((function() {\n            return i.Jr(o);\n        }))), n < 8 && r >= 8 && (u = u.next((function() {\n            return i.Yr(t, o);\n        }))), n < 9 && r >= 9 && (u = u.next((function() {\n            // Multi-Tab used to manage its own changelog, but this has been moved\n            // to the DbRemoteDocument object store itself. Since the previous change\n            // log only contained transient data, we can drop its object store.\n            !function(t) {\n                t.objectStoreNames.contains(\"remoteDocumentChanges\") && t.deleteObjectStore(\"remoteDocumentChanges\");\n            }(t), function(t) {\n                var e = t.objectStore(Ur.store);\n                e.createIndex(Ur.readTimeIndex, Ur.readTimeIndexPath, {\n                    unique: !1\n                }), e.createIndex(Ur.collectionReadTimeIndex, Ur.collectionReadTimeIndexPath, {\n                    unique: !1\n                });\n            }(e);\n        }))), n < 10 && r >= 10 && (u = u.next((function() {\n            return i.Xr(o);\n        }))), n < 11 && r >= 11 && (u = u.next((function() {\n            !function(t) {\n                t.createObjectStore(Br.store, {\n                    keyPath: Br.keyPath\n                });\n            }(t), function(t) {\n                t.createObjectStore(Qr.store, {\n                    keyPath: Qr.keyPath\n                });\n            }(t);\n        }))), u;\n    }, t.prototype.Hr = function(t) {\n        var e = 0;\n        return t.store(Ur.store).hs((function(t, n) {\n            e += _i(n);\n        })).next((function() {\n            var n = new Mr(e);\n            return t.store(Mr.store).put(Mr.key, n);\n        }));\n    }, t.prototype.zr = function(t) {\n        var e = this, n = t.store(Pr.store), r = t.store(Vr.store);\n        return n.rs().next((function(n) {\n            return lr.forEach(n, (function(n) {\n                var i = IDBKeyRange.bound([ n.userId, -1 ], [ n.userId, n.lastAcknowledgedBatchId ]);\n                return r.rs(Vr.userMutationsIndex, i).next((function(r) {\n                    return lr.forEach(r, (function(r) {\n                        k(r.userId === n.userId);\n                        var i = ii(e.Qt, r);\n                        return bi(t, n.userId, i).next((function() {}));\n                    }));\n                }));\n            }));\n        }));\n    }, \n    /**\n     * Ensures that every document in the remote document cache has a corresponding sentinel row\n     * with a sequence number. Missing rows are given the most recently used sequence number.\n     */\n    t.prototype.Jr = function(t) {\n        var e = t.store(Fr.store), n = t.store(Ur.store);\n        return t.store(jr.store).get(jr.key).next((function(t) {\n            var r = [];\n            return n.hs((function(n, i) {\n                var o = new Z(n), u = function(t) {\n                    return [ 0, Ar(t) ];\n                }(o);\n                r.push(e.get(u).next((function(n) {\n                    return n ? lr.resolve() : function(n) {\n                        return e.put(new Fr(0, Ar(n), t.highestListenSequenceNumber));\n                    }(o);\n                })));\n            })).next((function() {\n                return lr.Mn(r);\n            }));\n        }));\n    }, t.prototype.Yr = function(t, e) {\n        // Create the index.\n        t.createObjectStore(zr.store, {\n            keyPath: zr.keyPath\n        });\n        var n = e.store(zr.store), r = new li, i = function(t) {\n            if (r.add(t)) {\n                var e = t.tt(), i = t.X();\n                return n.put({\n                    collectionId: e,\n                    parent: Ar(i)\n                });\n            }\n        };\n        // Helper to add an index entry iff we haven't already written it.\n        // Index existing remote documents.\n                return e.store(Ur.store).hs({\n            us: !0\n        }, (function(t, e) {\n            var n = new Z(t);\n            return i(n.X());\n        })).next((function() {\n            return e.store(Cr.store).hs({\n                us: !0\n            }, (function(t, e) {\n                t[0];\n                var n = t[1], r = (t[2], xr(n));\n                return i(r.X());\n            }));\n        }));\n    }, t.prototype.Xr = function(t) {\n        var e = this, n = t.store(qr.store);\n        return n.hs((function(t, r) {\n            var i = oi(r), o = ui(e.Qt, i);\n            return n.put(o);\n        }));\n    }, t;\n}();\n\nfunction Bi(t) {\n    t.createObjectStore(Fr.store, {\n        keyPath: Fr.keyPath\n    }).createIndex(Fr.documentTargetsIndex, Fr.documentTargetsKeyPath, {\n        unique: !0\n    }), \n    // NOTE: This is unique only because the TargetId is the suffix.\n    t.createObjectStore(qr.store, {\n        keyPath: qr.keyPath\n    }).createIndex(qr.queryTargetsIndexName, qr.queryTargetsKeyPath, {\n        unique: !0\n    }), t.createObjectStore(jr.store);\n}\n\nvar Qi = \"Failed to obtain exclusive access to the persistence layer. To allow shared access, multi-tab synchronization has to be enabled in all tabs. If you are using `experimentalForceOwningTab:true`, make sure that only one tab has persistence enabled at any given time.\", Yi = /** @class */ function() {\n    function t(\n    /**\n     * Whether to synchronize the in-memory state of multiple tabs and share\n     * access to local persistence.\n     */\n    e, n, r, i, o, u, s, a, c, \n    /**\n     * If set to true, forcefully obtains database access. Existing tabs will\n     * no longer be able to access IndexedDB.\n     */\n    h) {\n        if (this.allowTabSynchronization = e, this.persistenceKey = n, this.clientId = r, \n        this.Zr = o, this.window = u, this.document = s, this.eo = c, this.no = h, this.so = null, \n        this.io = !1, this.isPrimary = !1, this.networkEnabled = !0, \n        /** Our window.unload handler, if registered. */\n        this.ro = null, this.inForeground = !1, \n        /** Our 'visibilitychange' listener if registered. */\n        this.oo = null, \n        /** The client metadata refresh task. */\n        this.co = null, \n        /** The last time we garbage collected the client metadata object store. */\n        this.ao = Number.NEGATIVE_INFINITY, \n        /** A listener to notify on primary state changes. */\n        this.uo = function(t) {\n            return Promise.resolve();\n        }, !t.Kn()) throw new q(M.UNIMPLEMENTED, \"This platform is either missing IndexedDB or is known to have an incomplete implementation. Offline persistence has been disabled.\");\n        this.Ti = new Ri(this, i), this.ho = n + \"main\", this.Qt = new Zr(a), this.lo = new dr(this.ho, 11, new Gi(this.Qt)), \n        this._o = new Si(this.Ti, this.Qt), this.Ei = new pi, this.fo = function(t, e) {\n            return new Mi(t, e);\n        }(this.Qt, this.Ei), this.wo = new ai, this.window && this.window.localStorage ? this.Eo = this.window.localStorage : (this.Eo = null, \n        !1 === h && A(\"IndexedDbPersistence\", \"LocalStorage is unavailable. As a result, persistence may not work reliably. In particular enablePersistence() could fail immediately after refreshing the page.\"));\n    }\n    /**\n     * Attempt to start IndexedDb persistence.\n     *\n     * @returns Whether persistence was enabled.\n     */    return t.prototype.start = function() {\n        var t = this;\n        // NOTE: This is expected to fail sometimes (in the case of another tab\n        // already having the persistence lock), so it's the first thing we should\n        // do.\n                return this.To().then((function() {\n            if (!t.isPrimary && !t.allowTabSynchronization) \n            // Fail `start()` if `synchronizeTabs` is disabled and we cannot\n            // obtain the primary lease.\n            throw new q(M.FAILED_PRECONDITION, Qi);\n            return t.Io(), t.mo(), t.Ao(), t.runTransaction(\"getHighestListenSequenceNumber\", \"readonly\", (function(e) {\n                return t._o.Ki(e);\n            }));\n        })).then((function(e) {\n            t.so = new H(e, t.eo);\n        })).then((function() {\n            t.io = !0;\n        })).catch((function(e) {\n            return t.lo && t.lo.close(), Promise.reject(e);\n        }));\n    }, \n    /**\n     * Registers a listener that gets called when the primary state of the\n     * instance changes. Upon registering, this listener is invoked immediately\n     * with the current primary state.\n     *\n     * PORTING NOTE: This is only used for Web multi-tab.\n     */\n    t.prototype.Ro = function(t) {\n        var e = this;\n        return this.uo = function(n) {\n            return g(e, void 0, void 0, (function() {\n                return w(this, (function(e) {\n                    return this.Er ? [ 2 /*return*/ , t(n) ] : [ 2 /*return*/ ];\n                }));\n            }));\n        }, t(this.isPrimary);\n    }, \n    /**\n     * Registers a listener that gets called when the database receives a\n     * version change event indicating that it has deleted.\n     *\n     * PORTING NOTE: This is only used for Web multi-tab.\n     */\n    t.prototype.Po = function(t) {\n        var e = this;\n        this.lo.Xn((function(n) {\n            return g(e, void 0, void 0, (function() {\n                return w(this, (function(e) {\n                    switch (e.label) {\n                      case 0:\n                        return null === n.newVersion ? [ 4 /*yield*/ , t() ] : [ 3 /*break*/ , 2 ];\n\n                      case 1:\n                        e.sent(), e.label = 2;\n\n                      case 2:\n                        return [ 2 /*return*/ ];\n                    }\n                }));\n            }));\n        }));\n    }, \n    /**\n     * Adjusts the current network state in the client's metadata, potentially\n     * affecting the primary lease.\n     *\n     * PORTING NOTE: This is only used for Web multi-tab.\n     */\n    t.prototype.yo = function(t) {\n        var e = this;\n        this.networkEnabled !== t && (this.networkEnabled = t, \n        // Schedule a primary lease refresh for immediate execution. The eventual\n        // lease update will be propagated via `primaryStateListener`.\n        this.Zr.Ps((function() {\n            return g(e, void 0, void 0, (function() {\n                return w(this, (function(t) {\n                    switch (t.label) {\n                      case 0:\n                        return this.Er ? [ 4 /*yield*/ , this.To() ] : [ 3 /*break*/ , 2 ];\n\n                      case 1:\n                        t.sent(), t.label = 2;\n\n                      case 2:\n                        return [ 2 /*return*/ ];\n                    }\n                }));\n            }));\n        })));\n    }, \n    /**\n     * Updates the client metadata in IndexedDb and attempts to either obtain or\n     * extend the primary lease for the local client. Asynchronously notifies the\n     * primary state listener if the client either newly obtained or released its\n     * primary lease.\n     */\n    t.prototype.To = function() {\n        var t = this;\n        return this.runTransaction(\"updateClientMetadataAndTryBecomePrimary\", \"readwrite\", (function(e) {\n            return Ki(e).put(new Gr(t.clientId, Date.now(), t.networkEnabled, t.inForeground)).next((function() {\n                if (t.isPrimary) return t.Vo(e).next((function(e) {\n                    e || (t.isPrimary = !1, t.Zr.po((function() {\n                        return t.uo(!1);\n                    })));\n                }));\n            })).next((function() {\n                return t.bo(e);\n            })).next((function(n) {\n                return t.isPrimary && !n ? t.vo(e).next((function() {\n                    return !1;\n                })) : !!n && t.So(e).next((function() {\n                    return !0;\n                }));\n            }));\n        })).catch((function(e) {\n            if (mr(e)) \n            // Proceed with the existing state. Any subsequent access to\n            // IndexedDB will verify the lease.\n            return N(\"IndexedDbPersistence\", \"Failed to extend owner lease: \", e), t.isPrimary;\n            if (!t.allowTabSynchronization) throw e;\n            return N(\"IndexedDbPersistence\", \"Releasing owner lease after error during lease refresh\", e), \n            /* isPrimary= */ !1;\n        })).then((function(e) {\n            t.isPrimary !== e && t.Zr.po((function() {\n                return t.uo(e);\n            })), t.isPrimary = e;\n        }));\n    }, t.prototype.Vo = function(t) {\n        var e = this;\n        return Hi(t).get(Or.key).next((function(t) {\n            return lr.resolve(e.Do(t));\n        }));\n    }, t.prototype.Co = function(t) {\n        return Ki(t).delete(this.clientId);\n    }, \n    /**\n     * If the garbage collection threshold has passed, prunes the\n     * RemoteDocumentChanges and the ClientMetadata store based on the last update\n     * time of all clients.\n     */\n    t.prototype.xo = function() {\n        return g(this, void 0, void 0, (function() {\n            var t, e, n, r, i = this;\n            return w(this, (function(o) {\n                switch (o.label) {\n                  case 0:\n                    return !this.isPrimary || this.No(this.ao, 18e5) ? [ 3 /*break*/ , 2 ] : (this.ao = Date.now(), \n                    [ 4 /*yield*/ , this.runTransaction(\"maybeGarbageCollectMultiClientState\", \"readwrite-primary\", (function(t) {\n                        var e = Kr(t, Gr.store);\n                        return e.rs().next((function(t) {\n                            var n = i.$o(t, 18e5), r = t.filter((function(t) {\n                                return -1 === n.indexOf(t);\n                            }));\n                            // Delete metadata for clients that are no longer considered active.\n                                                        return lr.forEach(r, (function(t) {\n                                return e.delete(t.clientId);\n                            })).next((function() {\n                                return r;\n                            }));\n                        }));\n                    })).catch((function() {\n                        return [];\n                    })) ]);\n\n                  case 1:\n                    // Delete potential leftover entries that may continue to mark the\n                    // inactive clients as zombied in LocalStorage.\n                    // Ideally we'd delete the IndexedDb and LocalStorage zombie entries for\n                    // the client atomically, but we can't. So we opt to delete the IndexedDb\n                    // entries first to avoid potentially reviving a zombied client.\n                    if (t = o.sent(), this.Eo) for (e = 0, n = t; e < n.length; e++) r = n[e], this.Eo.removeItem(this.Fo(r.clientId));\n                    o.label = 2;\n\n                  case 2:\n                    return [ 2 /*return*/ ];\n                }\n            }));\n        }));\n    }, \n    /**\n     * Schedules a recurring timer to update the client metadata and to either\n     * extend or acquire the primary lease if the client is eligible.\n     */\n    t.prototype.Ao = function() {\n        var t = this;\n        this.co = this.Zr.Tr(\"client_metadata_refresh\" /* ClientMetadataRefresh */ , 4e3, (function() {\n            return t.To().then((function() {\n                return t.xo();\n            })).then((function() {\n                return t.Ao();\n            }));\n        }));\n    }, \n    /** Checks whether `client` is the local client. */ t.prototype.Do = function(t) {\n        return !!t && t.ownerId === this.clientId;\n    }, \n    /**\n     * Evaluate the state of all active clients and determine whether the local\n     * client is or can act as the holder of the primary lease. Returns whether\n     * the client is eligible for the lease, but does not actually acquire it.\n     * May return 'false' even if there is no active leaseholder and another\n     * (foreground) client should become leaseholder instead.\n     */\n    t.prototype.bo = function(t) {\n        var e = this;\n        return this.no ? lr.resolve(!0) : Hi(t).get(Or.key).next((function(n) {\n            // A client is eligible for the primary lease if:\n            // - its network is enabled and the client's tab is in the foreground.\n            // - its network is enabled and no other client's tab is in the\n            //   foreground.\n            // - every clients network is disabled and the client's tab is in the\n            //   foreground.\n            // - every clients network is disabled and no other client's tab is in\n            //   the foreground.\n            // - the `forceOwningTab` setting was passed in.\n            if (null !== n && e.No(n.leaseTimestampMs, 5e3) && !e.Oo(n.ownerId)) {\n                if (e.Do(n) && e.networkEnabled) return !0;\n                if (!e.Do(n)) {\n                    if (!n.allowTabSynchronization) \n                    // Fail the `canActAsPrimary` check if the current leaseholder has\n                    // not opted into multi-tab synchronization. If this happens at\n                    // client startup, we reject the Promise returned by\n                    // `enablePersistence()` and the user can continue to use Firestore\n                    // with in-memory persistence.\n                    // If this fails during a lease refresh, we will instead block the\n                    // AsyncQueue from executing further operations. Note that this is\n                    // acceptable since mixing & matching different `synchronizeTabs`\n                    // settings is not supported.\n                    // TODO(b/114226234): Remove this check when `synchronizeTabs` can\n                    // no longer be turned off.\n                    throw new q(M.FAILED_PRECONDITION, Qi);\n                    return !1;\n                }\n            }\n            return !(!e.networkEnabled || !e.inForeground) || Ki(t).rs().next((function(t) {\n                return void 0 === e.$o(t, 5e3).find((function(t) {\n                    if (e.clientId !== t.clientId) {\n                        var n = !e.networkEnabled && t.networkEnabled, r = !e.inForeground && t.inForeground, i = e.networkEnabled === t.networkEnabled;\n                        if (n || r && i) return !0;\n                    }\n                    return !1;\n                }));\n            }));\n        })).next((function(t) {\n            return e.isPrimary !== t && N(\"IndexedDbPersistence\", \"Client \" + (t ? \"is\" : \"is not\") + \" eligible for a primary lease.\"), \n            t;\n        }));\n    }, t.prototype.ko = function() {\n        return g(this, void 0, void 0, (function() {\n            var t = this;\n            return w(this, (function(e) {\n                switch (e.label) {\n                  case 0:\n                    // Use `SimpleDb.runTransaction` directly to avoid failing if another tab\n                    // has obtained the primary lease.\n                    // The shutdown() operations are idempotent and can be called even when\n                    // start() aborted (e.g. because it couldn't acquire the persistence lease).\n                    return this.io = !1, this.Mo(), this.co && (this.co.cancel(), this.co = null), this.Lo(), \n                    this.Bo(), [ 4 /*yield*/ , this.lo.runTransaction(\"shutdown\", \"readwrite\", [ Or.store, Gr.store ], (function(e) {\n                        var n = new Hr(e, H.q);\n                        return t.vo(n).next((function() {\n                            return t.Co(n);\n                        }));\n                    })) ];\n\n                  case 1:\n                    // The shutdown() operations are idempotent and can be called even when\n                    // start() aborted (e.g. because it couldn't acquire the persistence lease).\n                    // Use `SimpleDb.runTransaction` directly to avoid failing if another tab\n                    // has obtained the primary lease.\n                    return e.sent(), this.lo.close(), \n                    // Remove the entry marking the client as zombied from LocalStorage since\n                    // we successfully deleted its metadata from IndexedDb.\n                    this.qo(), [ 2 /*return*/ ];\n                }\n            }));\n        }));\n    }, \n    /**\n     * Returns clients that are not zombied and have an updateTime within the\n     * provided threshold.\n     */\n    t.prototype.$o = function(t, e) {\n        var n = this;\n        return t.filter((function(t) {\n            return n.No(t.updateTimeMs, e) && !n.Oo(t.clientId);\n        }));\n    }, \n    /**\n     * Returns the IDs of the clients that are currently active. If multi-tab\n     * is not supported, returns an array that only contains the local client's\n     * ID.\n     *\n     * PORTING NOTE: This is only used for Web multi-tab.\n     */\n    t.prototype.Uo = function() {\n        var t = this;\n        return this.runTransaction(\"getActiveClients\", \"readonly\", (function(e) {\n            return Ki(e).rs().next((function(e) {\n                return t.$o(e, 18e5).map((function(t) {\n                    return t.clientId;\n                }));\n            }));\n        }));\n    }, Object.defineProperty(t.prototype, \"Er\", {\n        get: function() {\n            return this.io;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), t.prototype.Qo = function(t) {\n        return Ii.mi(t, this.Qt, this.Ei, this.Ti);\n    }, t.prototype.Sr = function() {\n        return this._o;\n    }, t.prototype.$r = function() {\n        return this.fo;\n    }, t.prototype.Ko = function() {\n        return this.Ei;\n    }, t.prototype.Wo = function() {\n        return this.wo;\n    }, t.prototype.runTransaction = function(t, e, n) {\n        var r = this;\n        N(\"IndexedDbPersistence\", \"Starting transaction:\", t);\n        var i, o = \"readonly\" === e ? \"readonly\" : \"readwrite\";\n        // Do all transactions as readwrite against all object stores, since we\n        // are the only reader/writer.\n        return this.lo.runTransaction(t, o, Yr, (function(o) {\n            return i = new Hr(o, r.so ? r.so.next() : H.q), \"readwrite-primary\" === e ? r.Vo(i).next((function(t) {\n                return !!t || r.bo(i);\n            })).next((function(e) {\n                if (!e) throw A(\"Failed to obtain primary lease for action '\" + t + \"'.\"), r.isPrimary = !1, \n                r.Zr.po((function() {\n                    return r.uo(!1);\n                })), new q(M.FAILED_PRECONDITION, Tr);\n                return n(i);\n            })).next((function(t) {\n                return r.So(i).next((function() {\n                    return t;\n                }));\n            })) : r.jo(i).next((function() {\n                return n(i);\n            }));\n        })).then((function(t) {\n            return i.Vs(), t;\n        }));\n    }, \n    /**\n     * Verifies that the current tab is the primary leaseholder or alternatively\n     * that the leaseholder has opted into multi-tab synchronization.\n     */\n    // TODO(b/114226234): Remove this check when `synchronizeTabs` can no longer\n    // be turned off.\n    t.prototype.jo = function(t) {\n        var e = this;\n        return Hi(t).get(Or.key).next((function(t) {\n            if (null !== t && e.No(t.leaseTimestampMs, 5e3) && !e.Oo(t.ownerId) && !e.Do(t) && !(e.no || e.allowTabSynchronization && t.allowTabSynchronization)) throw new q(M.FAILED_PRECONDITION, Qi);\n        }));\n    }, \n    /**\n     * Obtains or extends the new primary lease for the local client. This\n     * method does not verify that the client is eligible for this lease.\n     */\n    t.prototype.So = function(t) {\n        var e = new Or(this.clientId, this.allowTabSynchronization, Date.now());\n        return Hi(t).put(Or.key, e);\n    }, t.Kn = function() {\n        return dr.Kn();\n    }, \n    /** Checks the primary lease and removes it if we are the current primary. */ t.prototype.vo = function(t) {\n        var e = this, n = Hi(t);\n        return n.get(Or.key).next((function(t) {\n            return e.Do(t) ? (N(\"IndexedDbPersistence\", \"Releasing primary lease.\"), n.delete(Or.key)) : lr.resolve();\n        }));\n    }, \n    /** Verifies that `updateTimeMs` is within `maxAgeMs`. */ t.prototype.No = function(t, e) {\n        var n = Date.now();\n        return !(t < n - e || t > n && (A(\"Detected an update time that is in the future: \" + t + \" > \" + n), \n        1));\n    }, t.prototype.Io = function() {\n        var t = this;\n        null !== this.document && \"function\" == typeof this.document.addEventListener && (this.oo = function() {\n            t.Zr.Ps((function() {\n                return t.inForeground = \"visible\" === t.document.visibilityState, t.To();\n            }));\n        }, this.document.addEventListener(\"visibilitychange\", this.oo), this.inForeground = \"visible\" === this.document.visibilityState);\n    }, t.prototype.Lo = function() {\n        this.oo && (this.document.removeEventListener(\"visibilitychange\", this.oo), this.oo = null);\n    }, \n    /**\n     * Attaches a window.unload handler that will synchronously write our\n     * clientId to a \"zombie client id\" location in LocalStorage. This can be used\n     * by tabs trying to acquire the primary lease to determine that the lease\n     * is no longer valid even if the timestamp is recent. This is particularly\n     * important for the refresh case (so the tab correctly re-acquires the\n     * primary lease). LocalStorage is used for this rather than IndexedDb because\n     * it is a synchronous API and so can be used reliably from  an unload\n     * handler.\n     */\n    t.prototype.mo = function() {\n        var t, e = this;\n        \"function\" == typeof (null === (t = this.window) || void 0 === t ? void 0 : t.addEventListener) && (this.ro = function() {\n            // Note: In theory, this should be scheduled on the AsyncQueue since it\n            // accesses internal state. We execute this code directly during shutdown\n            // to make sure it gets a chance to run.\n            e.Mo(), e.Zr.Ps((function() {\n                return e.ko();\n            }));\n        }, this.window.addEventListener(\"unload\", this.ro));\n    }, t.prototype.Bo = function() {\n        this.ro && (this.window.removeEventListener(\"unload\", this.ro), this.ro = null);\n    }, \n    /**\n     * Returns whether a client is \"zombied\" based on its LocalStorage entry.\n     * Clients become zombied when their tab closes without running all of the\n     * cleanup logic in `shutdown()`.\n     */\n    t.prototype.Oo = function(t) {\n        var e;\n        try {\n            var n = null !== (null === (e = this.Eo) || void 0 === e ? void 0 : e.getItem(this.Fo(t)));\n            return N(\"IndexedDbPersistence\", \"Client '\" + t + \"' \" + (n ? \"is\" : \"is not\") + \" zombied in LocalStorage\"), \n            n;\n        } catch (t) {\n            // Gracefully handle if LocalStorage isn't working.\n            return A(\"IndexedDbPersistence\", \"Failed to get zombied client id.\", t), !1;\n        }\n    }, \n    /**\n     * Record client as zombied (a client that had its tab closed). Zombied\n     * clients are ignored during primary tab selection.\n     */\n    t.prototype.Mo = function() {\n        if (this.Eo) try {\n            this.Eo.setItem(this.Fo(this.clientId), String(Date.now()));\n        } catch (t) {\n            // Gracefully handle if LocalStorage isn't available / working.\n            A(\"Failed to set zombie client id.\", t);\n        }\n    }, \n    /** Removes the zombied client entry if it exists. */ t.prototype.qo = function() {\n        if (this.Eo) try {\n            this.Eo.removeItem(this.Fo(this.clientId));\n        } catch (t) {\n            // Ignore\n        }\n    }, t.prototype.Fo = function(t) {\n        return \"firestore_zombie_\" + this.persistenceKey + \"_\" + t;\n    }, t;\n}();\n\n/**\n * Oldest acceptable age in milliseconds for client metadata before the client\n * is considered inactive and its associated data is garbage collected.\n */\n/**\n * An IndexedDB-backed instance of Persistence. Data is stored persistently\n * across sessions.\n *\n * On Web only, the Firestore SDKs support shared access to its persistence\n * layer. This allows multiple browser tabs to read and write to IndexedDb and\n * to synchronize state even without network connectivity. Shared access is\n * currently optional and not enabled unless all clients invoke\n * `enablePersistence()` with `{synchronizeTabs:true}`.\n *\n * In multi-tab mode, if multiple clients are active at the same time, the SDK\n * will designate one client as the “primary client”. An effort is made to pick\n * a visible, network-connected and active client, and this client is\n * responsible for letting other clients know about its presence. The primary\n * client writes a unique client-generated identifier (the client ID) to\n * IndexedDb’s “owner” store every 4 seconds. If the primary client fails to\n * update this entry, another client can acquire the lease and take over as\n * primary.\n *\n * Some persistence operations in the SDK are designated as primary-client only\n * operations. This includes the acknowledgment of mutations and all updates of\n * remote documents. The effects of these operations are written to persistence\n * and then broadcast to other tabs via LocalStorage (see\n * `WebStorageSharedClientState`), which then refresh their state from\n * persistence.\n *\n * Similarly, the primary client listens to notifications sent by secondary\n * clients to discover persistence changes written by secondary clients, such as\n * the addition of new mutations and query targets.\n *\n * If multi-tab is not enabled and another tab already obtained the primary\n * lease, IndexedDbPersistence enters a failed state and all subsequent\n * operations will automatically fail.\n *\n * Additionally, there is an optimization so that when a tab is closed, the\n * primary lease is released immediately (this is especially important to make\n * sure that a refreshed tab is able to immediately re-acquire the primary\n * lease). Unfortunately, IndexedDB cannot be reliably used in window.unload\n * since it is an asynchronous API. So in addition to attempting to give up the\n * lease, the leaseholder writes its client ID to a \"zombiedClient\" entry in\n * LocalStorage which acts as an indicator that another tab should go ahead and\n * take the primary lease immediately regardless of the current lease timestamp.\n *\n * TODO(b/114226234): Remove `synchronizeTabs` section when multi-tab is no\n * longer optional.\n */\n/**\n * Helper to get a typed SimpleDbStore for the primary client object store.\n */\nfunction Hi(t) {\n    return Kr(t, Or.store);\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the client metadata object store.\n */ function Ki(t) {\n    return Kr(t, Gr.store);\n}\n\n/**\n * Generates a string used as a prefix when storing data in IndexedDB and\n * LocalStorage.\n */ function Xi(t, e) {\n    // Use two different prefix formats:\n    //   * firestore / persistenceKey / projectID . databaseID / ...\n    //   * firestore / persistenceKey / projectID / ...\n    // projectIDs are DNS-compatible names and cannot contain dots\n    // so there's no danger of collisions.\n    var n = t.projectId;\n    return t.o || (n += \".\" + t.database), \"firestore/\" + e + \"/\" + n + \"/\"\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */;\n}\n\nvar Wi = function(t, e) {\n    this.progress = t, this.Go = e;\n}, Zi = /** @class */ function() {\n    function t(t, e, n) {\n        this.fo = t, this.zo = e, this.Ei = n\n        /**\n     * Get the local view of the document identified by `key`.\n     *\n     * @returns Local view of the document or null if we don't have any cached\n     * state for it.\n     */;\n    }\n    return t.prototype.Ho = function(t, e) {\n        var n = this;\n        return this.zo.bi(t, e).next((function(r) {\n            return n.Jo(t, e, r);\n        }));\n    }, \n    /** Internal version of `getDocument` that allows reusing batches. */ t.prototype.Jo = function(t, e, n) {\n        return this.fo._i(t, e).next((function(t) {\n            for (var r = 0, i = n; r < i.length; r++) {\n                t = i[r].Cs(e, t);\n            }\n            return t;\n        }));\n    }, \n    // Returns the view of the given `docs` as they would appear after applying\n    // all mutations in the given `batches`.\n    t.prototype.Yo = function(t, e, n) {\n        var r = fn();\n        return e.forEach((function(t, e) {\n            for (var i = 0, o = n; i < o.length; i++) {\n                e = o[i].Cs(t, e);\n            }\n            r = r.zt(t, e);\n        })), r;\n    }, \n    /**\n     * Gets the local view of the documents identified by `keys`.\n     *\n     * If we don't have cached state for a document in `keys`, a NoDocument will\n     * be stored for that key in the resulting set.\n     */\n    t.prototype.Xo = function(t, e) {\n        var n = this;\n        return this.fo.getEntries(t, e).next((function(e) {\n            return n.Zo(t, e);\n        }));\n    }, \n    /**\n     * Similar to `getDocuments`, but creates the local view from the given\n     * `baseDocs` without retrieving documents from the local store.\n     */\n    t.prototype.Zo = function(t, e) {\n        var n = this;\n        return this.zo.vi(t, e).next((function(r) {\n            var i = n.Yo(t, e, r), o = hn();\n            return i.forEach((function(t, e) {\n                // TODO(http://b/32275378): Don't conflate missing / deleted.\n                e || (e = new Vt(t, X.min())), o = o.zt(t, e);\n            })), o;\n        }));\n    }, \n    /**\n     * Performs a query against the local view of all documents.\n     *\n     * @param transaction - The persistence transaction.\n     * @param query - The query to match documents against.\n     * @param sinceReadTime - If not set to SnapshotVersion.min(), return only\n     *     documents that have been read since this snapshot version (exclusive).\n     */\n    t.prototype.Kr = function(t, e, n) {\n        /**\n * Returns whether the query matches a single document by path (rather than a\n * collection).\n */\n        return function(t) {\n            return tt.wt(t.path) && null === t.collectionGroup && 0 === t.filters.length;\n        }(e) ? this.tc(t, e.path) : ae(e) ? this.ec(t, e, n) : this.nc(t, e, n);\n    }, t.prototype.tc = function(t, e) {\n        // Just do a simple document lookup.\n        return this.Ho(t, new tt(e)).next((function(t) {\n            var e = pn();\n            return t instanceof Pt && (e = e.zt(t.key, t)), e;\n        }));\n    }, t.prototype.ec = function(t, e, n) {\n        var r = this, i = e.collectionGroup, o = pn();\n        return this.Ei.Us(t, i).next((function(u) {\n            return lr.forEach(u, (function(u) {\n                var s = function(t, e) {\n                    return new ee(e, \n                    /*collectionGroup=*/ null, t.xt.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n                }(e, u.child(i));\n                return r.nc(t, s, n).next((function(t) {\n                    t.forEach((function(t, e) {\n                        o = o.zt(t, e);\n                    }));\n                }));\n            })).next((function() {\n                return o;\n            }));\n        }));\n    }, t.prototype.nc = function(t, e, n) {\n        var r, i, o = this;\n        // Query the remote documents and overlay mutations.\n                return this.fo.Kr(t, e, n).next((function(n) {\n            return r = n, o.zo.Di(t, e);\n        })).next((function(e) {\n            return i = e, o.sc(t, i, r).next((function(t) {\n                r = t;\n                for (var e = 0, n = i; e < n.length; e++) for (var o = n[e], u = 0, s = o.mutations; u < s.length; u++) {\n                    var a = s[u], c = a.key, h = Fe(a, r.get(c), o.vs);\n                    r = h instanceof Pt ? r.zt(c, h) : r.remove(c);\n                }\n            }));\n        })).next((function() {\n            // Finally, filter out any documents that don't actually match\n            // the query.\n            return r.forEach((function(t, n) {\n                ve(e, n) || (r = r.remove(t));\n            })), r;\n        }));\n    }, t.prototype.sc = function(t, e, n) {\n        for (var r = mn(), i = 0, o = e; i < o.length; i++) for (var u = 0, s = o[i].mutations; u < s.length; u++) {\n            var a = s[u];\n            a instanceof Qe && null === n.get(a.key) && (r = r.add(a.key));\n        }\n        var c = n;\n        return this.fo.getEntries(t, r).next((function(t) {\n            return t.forEach((function(t, e) {\n                null !== e && e instanceof Pt && (c = c.zt(t, e));\n            })), c;\n        }));\n    }, t;\n}(), Ji = /** @class */ function() {\n    function t(t, e, n, r) {\n        this.targetId = t, this.fromCache = e, this.ic = n, this.rc = r;\n    }\n    return t.oc = function(e, n) {\n        for (var r = mn(), i = mn(), o = 0, u = n.docChanges; o < u.length; o++) {\n            var s = u[o];\n            switch (s.type) {\n              case 0 /* Added */ :\n                r = r.add(s.doc.key);\n                break;\n\n              case 1 /* Removed */ :\n                i = i.add(s.doc.key);\n                // do nothing\n                        }\n        }\n        return new t(e, n.fromCache, r, i);\n    }, t;\n}(), $i = /** @class */ function() {\n    function t() {}\n    /** Sets the document view to query against. */    return t.prototype.cc = function(t) {\n        this.ac = t;\n    }, \n    /** Returns all local documents matching the specified query. */ t.prototype.Kr = function(t, n, r, i) {\n        var o = this;\n        // Queries that match all documents don't benefit from using\n        // key-based lookups. It is more efficient to scan all documents in a\n        // collection, rather than to perform individual lookups.\n                return function(t) {\n            return 0 === t.filters.length && null === t.limit && null == t.startAt && null == t.endAt && (0 === t.xt.length || 1 === t.xt.length && t.xt[0].field.ut());\n        }(n) || r.isEqual(X.min()) ? this.uc(t, n) : this.ac.Xo(t, i).next((function(u) {\n            var s = o.hc(n, u);\n            return (ie(n) || oe(n)) && o.lc(n.limitType, s, i, r) ? o.uc(t, n) : (T() <= e.DEBUG && N(\"QueryEngine\", \"Re-using previous result from %s to execute query: %s\", r.toString(), de(n)), \n            o.ac.Kr(t, n, r).next((function(t) {\n                // We merge `previousResults` into `updateResults`, since\n                // `updateResults` is already a DocumentMap. If a document is\n                // contained in both lists, then its contents are the same.\n                return s.forEach((function(e) {\n                    t = t.zt(e.key, e);\n                })), t;\n            })));\n        }));\n        // Queries that have never seen a snapshot without limbo free documents\n        // should also be run as a full collection scan.\n        }, \n    /** Applies the query filter and sorting to the provided documents.  */ t.prototype.hc = function(t, e) {\n        // Sort the documents and re-apply the query filter since previously\n        // matching documents do not necessarily still match the query.\n        var n = new sn(ye(t));\n        return e.forEach((function(e, r) {\n            r instanceof Pt && ve(t, r) && (n = n.add(r));\n        })), n;\n    }, \n    /**\n     * Determines if a limit query needs to be refilled from cache, making it\n     * ineligible for index-free execution.\n     *\n     * @param sortedPreviousResults - The documents that matched the query when it\n     * was last synchronized, sorted by the query's comparator.\n     * @param remoteKeys - The document keys that matched the query at the last\n     * snapshot.\n     * @param limboFreeSnapshotVersion - The version of the snapshot when the\n     * query was last synchronized.\n     */\n    t.prototype.lc = function(t, e, n, r) {\n        // The query needs to be refilled if a previously matching document no\n        // longer matches.\n        if (n.size !== e.size) return !0;\n        // Limit queries are not eligible for index-free query execution if there is\n        // a potential that an older document from cache now sorts before a document\n        // that was previously part of the limit. This, however, can only happen if\n        // the document at the edge of the limit goes out of limit.\n        // If a document that is not the limit boundary sorts differently,\n        // the boundary of the limit itself did not change and documents from cache\n        // will continue to be \"rejected\" by this boundary. Therefore, we can ignore\n        // any modifications that don't affect the last document.\n                var i = \"F\" /* First */ === t ? e.last() : e.first();\n        return !!i && (i.hasPendingWrites || i.version._(r) > 0);\n    }, t.prototype.uc = function(t, n) {\n        return T() <= e.DEBUG && N(\"QueryEngine\", \"Using full collection scan to execute query:\", de(n)), \n        this.ac.Kr(t, n, X.min());\n    }, t;\n}(), to = /** @class */ function() {\n    function t(\n    /** Manages our in-memory or durable persistence. */\n    t, e, n, r) {\n        this.persistence = t, this._c = e, this.Qt = r, \n        /**\n             * Maps a targetID to data about its target.\n             *\n             * PORTING NOTE: We are using an immutable data structure on Web to make re-runs\n             * of `applyRemoteEvent()` idempotent.\n             */\n        this.fc = new rn(C), \n        /** Maps a target to its targetID. */\n        // TODO(wuandy): Evaluate if TargetId can be part of Target.\n        this.dc = new gi((function(t) {\n            return Ut(t);\n        }), Mt), \n        /**\n             * The read time of the last entry processed by `getNewDocumentChanges()`.\n             *\n             * PORTING NOTE: This is only used for multi-tab synchronization.\n             */\n        this.wc = X.min(), this.zo = t.Qo(n), this.Ec = t.$r(), this._o = t.Sr(), this.Tc = new Zi(this.Ec, this.zo, this.persistence.Ko()), \n        this.wo = t.Wo(), this._c.cc(this.Tc);\n    }\n    return t.prototype.Ir = function(t) {\n        var e = this;\n        return this.persistence.runTransaction(\"Collect garbage\", \"readwrite-primary\", (function(n) {\n            return t.Vr(n, e.fc);\n        }));\n    }, t;\n}();\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A readonly view of the local state of all documents we're tracking (i.e. we\n * have a cached version in remoteDocumentCache or local mutations for the\n * document). The view is computed by applying the mutations in the\n * MutationQueue to the RemoteDocumentCache.\n */ function eo(\n/** Manages our in-memory or durable persistence. */\nt, e, n, r) {\n    return new to(t, e, n, r);\n}\n\n/**\n * Tells the LocalStore that the currently authenticated user has changed.\n *\n * In response the local store switches the mutation queue to the new user and\n * returns any resulting document changes.\n */\n// PORTING NOTE: Android and iOS only return the documents affected by the\n// change.\nfunction no(t, e) {\n    return g(this, void 0, void 0, (function() {\n        var n, r, i, o;\n        return w(this, (function(u) {\n            switch (u.label) {\n              case 0:\n                return n = O(t), r = n.zo, i = n.Tc, [ 4 /*yield*/ , n.persistence.runTransaction(\"Handle user change\", \"readonly\", (function(t) {\n                    // Swap out the mutation queue, grabbing the pending mutation batches\n                    // before and after.\n                    var o;\n                    return n.zo.pi(t).next((function(u) {\n                        return o = u, r = n.persistence.Qo(e), \n                        // Recreate our LocalDocumentsView using the new\n                        // MutationQueue.\n                        i = new Zi(n.Ec, r, n.persistence.Ko()), r.pi(t);\n                    })).next((function(e) {\n                        for (var n = [], r = [], u = mn(), s = 0, a = o\n                        // Union the old/new changed keys.\n                        ; s < a.length; s++) {\n                            var c = a[s];\n                            n.push(c.batchId);\n                            for (var h = 0, f = c.mutations; h < f.length; h++) {\n                                var l = f[h];\n                                u = u.add(l.key);\n                            }\n                        }\n                        for (var p = 0, d = e; p < d.length; p++) {\n                            var v = d[p];\n                            r.push(v.batchId);\n                            for (var y = 0, m = v.mutations; y < m.length; y++) {\n                                var g = m[y];\n                                u = u.add(g.key);\n                            }\n                        }\n                        // Return the set of all (potentially) changed documents and the list\n                        // of mutation batch IDs that were affected by change.\n                                                return i.Xo(t, u).next((function(t) {\n                            return {\n                                Ic: t,\n                                mc: n,\n                                Ac: r\n                            };\n                        }));\n                    }));\n                })) ];\n\n              case 1:\n                return o = u.sent(), [ 2 /*return*/ , (n.zo = r, n.Tc = i, n._c.cc(n.Tc), o) ];\n            }\n        }));\n    }));\n}\n\n/* Accepts locally generated Mutations and commit them to storage. */\n/**\n * Acknowledges the given batch.\n *\n * On the happy path when a batch is acknowledged, the local store will\n *\n *  + remove the batch from the mutation queue;\n *  + apply the changes to the remote document cache;\n *  + recalculate the latency compensated view implied by those changes (there\n *    may be mutations in the queue that affect the documents but haven't been\n *    acknowledged yet); and\n *  + give the changed documents back the sync engine\n *\n * @returns The resulting (modified) documents.\n */ function ro(t, e) {\n    var n = O(t);\n    return n.persistence.runTransaction(\"Acknowledge batch\", \"readwrite-primary\", (function(t) {\n        var r = e.batch.keys(), i = n.Ec.Nr({\n            Wr: !0\n        });\n        return function(t, e, n, r) {\n            var i = n.batch, o = i.keys(), u = lr.resolve();\n            return o.forEach((function(t) {\n                u = u.next((function() {\n                    return r._i(e, t);\n                })).next((function(e) {\n                    var o = e, u = n.$s.get(t);\n                    k(null !== u), (!o || o.version._(u) < 0) && ((o = i.Ss(t, o, n)) && \n                    // We use the commitVersion as the readTime rather than the\n                    // document's updateTime since the updateTime is not advanced\n                    // for updates that do not modify the underlying document.\n                    r.ai(o, n.Ns));\n                }));\n            })), u.next((function() {\n                return t.zo.Ci(e, i);\n            }));\n        }(n, t, e, i).next((function() {\n            return i.apply(t);\n        })).next((function() {\n            return n.zo.$i(t);\n        })).next((function() {\n            return n.Tc.Xo(t, r);\n        }));\n    }));\n}\n\n/**\n * Removes mutations from the MutationQueue for the specified batch;\n * LocalDocuments will be recalculated.\n *\n * @returns The resulting modified documents.\n */\n/**\n * Returns the last consistent snapshot processed (used by the RemoteStore to\n * determine whether to buffer incoming snapshots from the backend).\n */ function io(t) {\n    var e = O(t);\n    return e.persistence.runTransaction(\"Get last remote snapshot version\", \"readonly\", (function(t) {\n        return e._o.Qi(t);\n    }));\n}\n\n/**\n * Updates the \"ground-state\" (remote) documents. We assume that the remote\n * event reflects any write batches that have been acknowledged or rejected\n * (i.e. we do not re-apply local mutations to updates from this event).\n *\n * LocalDocuments are re-calculated if there are remaining mutations in the\n * queue.\n */ function oo(t, e) {\n    var n = O(t), r = e.Ot, i = n.fc;\n    return n.persistence.runTransaction(\"Apply remote event\", \"readwrite-primary\", (function(t) {\n        var o = n.Ec.Nr({\n            Wr: !0\n        });\n        // Reset newTargetDataByTargetMap in case this transaction gets re-run.\n                i = n.fc;\n        var u = [];\n        e.$e.forEach((function(e, o) {\n            var s = i.get(o);\n            if (s) {\n                // Only update the remote keys if the target is still active. This\n                // ensures that we can persist the updated target data along with\n                // the updated assignment.\n                u.push(n._o.sr(t, e.Qe, o).next((function() {\n                    return n._o.er(t, e.qe, o);\n                })));\n                var a = e.resumeToken;\n                // Update the resume token if the change includes one.\n                                if (a.l() > 0) {\n                    var c = s.Mt(a, r).kt(t.bs);\n                    i = i.zt(o, c), \n                    // Update the target data if there are target changes (or if\n                    // sufficient time has passed since the last update).\n                    /**\n     * Returns true if the newTargetData should be persisted during an update of\n     * an active target. TargetData should always be persisted when a target is\n     * being released and should not call this function.\n     *\n     * While the target is active, TargetData updates can be omitted when nothing\n     * about the target has changed except metadata like the resume token or\n     * snapshot version. Occasionally it's worth the extra write to prevent these\n     * values from getting too stale after a crash, but this doesn't have to be\n     * too frequent.\n     */\n                    function(t, e, n) {\n                        // Always persist target data if we don't already have a resume token.\n                        return k(e.resumeToken.l() > 0), 0 === t.resumeToken.l() || (\n                        // Don't allow resume token changes to be buffered indefinitely. This\n                        // allows us to be reasonably up-to-date after a crash and avoids needing\n                        // to loop over all active queries on shutdown. Especially in the browser\n                        // we may not get time to do anything interesting while the current tab is\n                        // closing.\n                        e.Ot.W() - t.Ot.W() >= 3e8 || n.qe.size + n.Ue.size + n.Qe.size > 0);\n                    }(s, c, e) && u.push(n._o.Hi(t, c));\n                }\n            }\n        }));\n        var s = hn();\n        // HACK: The only reason we allow a null snapshot version is so that we\n        // can synthesize remote events when we get permission denied errors while\n        // trying to resolve the state of a locally cached document that is in\n        // limbo.\n                if (e.Oe.forEach((function(r, i) {\n            e.ke.has(r) && u.push(n.persistence.Ti.Fr(t, r));\n        })), \n        // Each loop iteration only affects its \"own\" doc, so it's safe to get all the remote\n        // documents in advance in a single call.\n        u.push(uo(t, o, e.Oe, r, void 0).next((function(t) {\n            s = t;\n        }))), !r.isEqual(X.min())) {\n            var a = n._o.Qi(t).next((function(e) {\n                return n._o.Wi(t, t.bs, r);\n            }));\n            u.push(a);\n        }\n        return lr.Mn(u).next((function() {\n            return o.apply(t);\n        })).next((function() {\n            return n.Tc.Zo(t, s);\n        }));\n    })).then((function(t) {\n        return n.fc = i, t;\n    }));\n}\n\n/**\n * Populates document change buffer with documents from backend or a bundle.\n * Returns the document changes resulting from applying those documents.\n *\n * @param txn - Transaction to use to read existing documents from storage.\n * @param documentBuffer - Document buffer to collect the resulted changes to be\n *        applied to storage.\n * @param documents - Documents to be applied.\n * @param globalVersion - A `SnapshotVersion` representing the read time if all\n *        documents have the same read time.\n * @param documentVersions - A DocumentKey-to-SnapshotVersion map if documents\n *        have their own read time.\n *\n * Note: this function will use `documentVersions` if it is defined;\n * when it is not defined, resorts to `globalVersion`.\n */ function uo(t, e, n, r, \n// TODO(wuandy): We could add `readTime` to MaybeDocument instead to remove\n// this parameter.\ni) {\n    var o = mn();\n    return n.forEach((function(t) {\n        return o = o.add(t);\n    })), e.getEntries(t, o).next((function(t) {\n        var o = hn();\n        return n.forEach((function(n, u) {\n            var s = t.get(n), a = (null == i ? void 0 : i.get(n)) || r;\n            // Note: The order of the steps below is important, since we want\n            // to ensure that rejected limbo resolutions (which fabricate\n            // NoDocuments with SnapshotVersion.min()) never add documents to\n            // cache.\n                        u instanceof Vt && u.version.isEqual(X.min()) ? (\n            // NoDocuments with SnapshotVersion.min() are used in manufactured\n            // events. We remove these documents from cache since we lost\n            // access.\n            e.li(n, a), o = o.zt(n, u)) : null == s || u.version._(s.version) > 0 || 0 === u.version._(s.version) && s.hasPendingWrites ? (e.ai(u, a), \n            o = o.zt(n, u)) : N(\"LocalStore\", \"Ignoring outdated watch update for \", n, \". Current version:\", s.version, \" Watch version:\", u.version);\n        })), o;\n    }))\n    /**\n * Gets the mutation batch after the passed in batchId in the mutation queue\n * or null if empty.\n * @param afterBatchId - If provided, the batch to search after.\n * @returns The next mutation or null if there wasn't one.\n */;\n}\n\nfunction so(t, e) {\n    var n = O(t);\n    return n.persistence.runTransaction(\"Get next mutation batch\", \"readonly\", (function(t) {\n        return void 0 === e && (e = -1), n.zo.gi(t, e);\n    }));\n}\n\n/**\n * Reads the current value of a Document with a given key or null if not\n * found - used for testing.\n */\n/**\n * Assigns the given target an internal ID so that its results can be pinned so\n * they don't get GC'd. A target must be allocated in the local store before\n * the store can be used to manage its view.\n *\n * Allocating an already allocated `Target` will return the existing `TargetData`\n * for that `Target`.\n */ function ao(t, e) {\n    var n = O(t);\n    return n.persistence.runTransaction(\"Allocate target\", \"readwrite\", (function(t) {\n        var r;\n        return n._o.tr(t, e).next((function(i) {\n            return i ? (\n            // This target has been listened to previously, so reuse the\n            // previous targetID.\n            // TODO(mcg): freshen last accessed date?\n            r = i, lr.resolve(r)) : n._o.Bi(t).next((function(i) {\n                return r = new ge(e, i, 0 /* Listen */ , t.bs), n._o.ji(t, r).next((function() {\n                    return r;\n                }));\n            }));\n        }));\n    })).then((function(t) {\n        // If Multi-Tab is enabled, the existing target data may be newer than\n        // the in-memory data\n        var r = n.fc.get(t.targetId);\n        return (null === r || t.Ot._(r.Ot) > 0) && (n.fc = n.fc.zt(t.targetId, t), n.dc.set(e, t.targetId)), \n        t;\n    }));\n}\n\n/**\n * Returns the TargetData as seen by the LocalStore, including updates that may\n * have not yet been persisted to the TargetCache.\n */\n// Visible for testing.\n/**\n * Unpins all the documents associated with the given target. If\n * `keepPersistedTargetData` is set to false and Eager GC enabled, the method\n * directly removes the associated target data from the target cache.\n *\n * Releasing a non-existing `Target` is a no-op.\n */\n// PORTING NOTE: `keepPersistedTargetData` is multi-tab only.\nfunction co(t, e, n) {\n    return g(this, void 0, void 0, (function() {\n        var r, i, o, u;\n        return w(this, (function(s) {\n            switch (s.label) {\n              case 0:\n                r = O(t), i = r.fc.get(e), o = n ? \"readwrite\" : \"readwrite-primary\", s.label = 1;\n\n              case 1:\n                return s.trys.push([ 1, 4, , 5 ]), n ? [ 3 /*break*/ , 3 ] : [ 4 /*yield*/ , r.persistence.runTransaction(\"Release target\", o, (function(t) {\n                    return r.persistence.Ti.removeTarget(t, i);\n                })) ];\n\n              case 2:\n                s.sent(), s.label = 3;\n\n              case 3:\n                return [ 3 /*break*/ , 5 ];\n\n              case 4:\n                if (!mr(u = s.sent())) throw u;\n                // All `releaseTarget` does is record the final metadata state for the\n                // target, but we've been recording this periodically during target\n                // activity. If we lose this write this could cause a very slight\n                // difference in the order of target deletion during GC, but we\n                // don't define exact LRU semantics so this is acceptable.\n                                return N(\"LocalStore\", \"Failed to update sequence numbers for target \" + e + \": \" + u), \n                [ 3 /*break*/ , 5 ];\n\n              case 5:\n                return r.fc = r.fc.remove(e), r.dc.delete(i.target), [ 2 /*return*/ ];\n            }\n        }));\n    }));\n}\n\n/**\n * Runs the specified query against the local store and returns the results,\n * potentially taking advantage of query data from previous executions (such\n * as the set of remote keys).\n *\n * @param usePreviousResults - Whether results from previous executions can\n * be used to optimize this query execution.\n */ function ho(t, e, n) {\n    var r = O(t), i = X.min(), o = mn();\n    return r.persistence.runTransaction(\"Execute query\", \"readonly\", (function(t) {\n        return function(t, e, n) {\n            var r = O(t), i = r.dc.get(n);\n            return void 0 !== i ? lr.resolve(r.fc.get(i)) : r._o.tr(e, n);\n        }(r, t, he(e)).next((function(e) {\n            if (e) return i = e.lastLimboFreeSnapshotVersion, r._o.rr(t, e.targetId).next((function(t) {\n                o = t;\n            }));\n        })).next((function() {\n            return r._c.Kr(t, e, n ? i : X.min(), n ? o : mn());\n        })).next((function(t) {\n            return {\n                documents: t,\n                Rc: o\n            };\n        }));\n    }));\n}\n\n// PORTING NOTE: Multi-Tab only.\nfunction fo(t, e) {\n    var n = O(t), r = O(n._o), i = n.fc.get(e);\n    return i ? Promise.resolve(i.target) : n.persistence.runTransaction(\"Get target data\", \"readonly\", (function(t) {\n        return r.Sn(t, e).next((function(t) {\n            return t ? t.target : null;\n        }));\n    }));\n}\n\n/**\n * Returns the set of documents that have been updated since the last call.\n * If this is the first call, returns the set of changes since client\n * initialization. Further invocations will return document that have changed\n * since the prior call.\n */\n// PORTING NOTE: Multi-Tab only.\nfunction lo(t) {\n    var e = O(t);\n    return e.persistence.runTransaction(\"Get new document changes\", \"readonly\", (function(t) {\n        return function(t, e, n) {\n            var r = O(t), i = hn(), o = ti(n), u = ji(e), s = IDBKeyRange.lowerBound(o, !0);\n            return u.hs({\n                index: Ur.readTimeIndex,\n                range: s\n            }, (function(t, e) {\n                // Unlike `getEntry()` and others, `getNewDocumentChanges()` parses\n                // the documents directly since we want to keep sentinel deletes.\n                var n = Jr(r.Qt, e);\n                i = i.zt(n.key, n), o = e.readTime;\n            })).next((function() {\n                return {\n                    Go: i,\n                    readTime: ei(o)\n                };\n            }));\n        }(e.Ec, t, e.wc);\n    })).then((function(t) {\n        var n = t.Go, r = t.readTime;\n        return e.wc = r, n;\n    }));\n}\n\n/**\n * Reads the newest document change from persistence and moves the internal\n * synchronization marker forward so that calls to `getNewDocumentChanges()`\n * only return changes that happened after client initialization.\n */\n// PORTING NOTE: Multi-Tab only.\nfunction po(t) {\n    return g(this, void 0, void 0, (function() {\n        var e;\n        return w(this, (function(n) {\n            return [ 2 /*return*/ , (e = O(t)).persistence.runTransaction(\"Synchronize last document change read time\", \"readonly\", (function(t) {\n                return function(t) {\n                    var e = ji(t), n = X.min();\n                    // If there are no existing entries, we return SnapshotVersion.min().\n                                        return e.hs({\n                        index: Ur.readTimeIndex,\n                        reverse: !0\n                    }, (function(t, e, r) {\n                        e.readTime && (n = ei(e.readTime)), r.done();\n                    })).next((function() {\n                        return n;\n                    }));\n                }(t);\n            })).then((function(t) {\n                e.wc = t;\n            })) ];\n        }));\n    }));\n}\n\n/**\n * Creates a new target using the given bundle name, which will be used to\n * hold the keys of all documents from the bundle in query-document mappings.\n * This ensures that the loaded documents do not get garbage collected\n * right away.\n */\n/**\n * Applies the documents from a bundle to the \"ground-state\" (remote)\n * documents.\n *\n * LocalDocuments are re-calculated if there are remaining mutations in the\n * queue.\n */ function vo(t, e, n, r) {\n    return g(this, void 0, void 0, (function() {\n        var i, o, u, s, a, c, h, f, l, p;\n        return w(this, (function(d) {\n            switch (d.label) {\n              case 0:\n                for (i = O(t), o = mn(), u = hn(), s = vn(), a = 0, c = n; a < c.length; a++) h = c[a], \n                f = e.Pc(h.metadata.name), h.document && (o = o.add(f)), u = u.zt(f, e.yc(h)), s = s.zt(f, e.gc(h.metadata.readTime));\n                return l = i.Ec.Nr({\n                    Wr: !0\n                }), [ 4 /*yield*/ , ao(i, function(t) {\n                    // It is OK that the path used for the query is not valid, because this will\n                    // not be read and queried.\n                    return he(re(Z.ot(\"__bundle__/docs/\" + t)));\n                }(r)) ];\n\n              case 1:\n                // Allocates a target to hold all document keys from the bundle, such that\n                // they will not get garbage collected right away.\n                return p = d.sent(), [ 2 /*return*/ , i.persistence.runTransaction(\"Apply bundle documents\", \"readwrite\", (function(t) {\n                    return uo(t, l, u, X.min(), s).next((function(e) {\n                        return l.apply(t), e;\n                    })).next((function(e) {\n                        return i._o.Yi(t, p.targetId).next((function() {\n                            return i._o.er(t, o, p.targetId);\n                        })).next((function() {\n                            return i.Tc.Zo(t, e);\n                        }));\n                    }));\n                })) ];\n            }\n        }));\n    }));\n}\n\n/**\n * Returns a promise of a boolean to indicate if the given bundle has already\n * been loaded and the create time is newer than the current loading bundle.\n */\n/**\n * Saves the given `NamedQuery` to local persistence.\n */ function yo(t, e, n) {\n    return void 0 === n && (n = mn()), g(this, void 0, void 0, (function() {\n        var r, i;\n        return w(this, (function(o) {\n            switch (o.label) {\n              case 0:\n                return [ 4 /*yield*/ , ao(t, he(si(e.bundledQuery))) ];\n\n              case 1:\n                return r = o.sent(), [ 2 /*return*/ , (i = O(t)).persistence.runTransaction(\"Save named query\", \"readwrite\", (function(t) {\n                    var o = Mn(e.readTime);\n                    // Simply save the query itself if it is older than what the SDK already\n                    // has.\n                                        if (r.Ot._(o) >= 0) return i.wo.Ls(t, e);\n                    // Update existing target data because the query from the bundle is newer.\n                                        var u = r.Mt(U.T, o);\n                    return i.fc = i.fc.zt(u.targetId, u), i._o.Hi(t, u).next((function() {\n                        return i._o.Yi(t, r.targetId);\n                    })).next((function() {\n                        return i._o.er(t, n, r.targetId);\n                    })).next((function() {\n                        return i.wo.Ls(t, e);\n                    }));\n                })) ];\n            }\n        }));\n    }));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ var mo = /** @class */ function() {\n    function t(t) {\n        this.Qt = t, this.Vc = new Map, this.bc = new Map;\n    }\n    return t.prototype.Os = function(t, e) {\n        return lr.resolve(this.Vc.get(e));\n    }, t.prototype.ks = function(t, e) {\n        /** Decodes a BundleMetadata proto into a BundleMetadata object. */\n        var n;\n        return this.Vc.set(e.id, {\n            id: (n = e).id,\n            version: n.version,\n            createTime: Mn(n.createTime)\n        }), lr.resolve();\n    }, t.prototype.Ms = function(t, e) {\n        return lr.resolve(this.bc.get(e));\n    }, t.prototype.Ls = function(t, e) {\n        return this.bc.set(e.name, function(t) {\n            return {\n                name: t.name,\n                query: si(t.bundledQuery),\n                readTime: Mn(t.readTime)\n            };\n        }(e)), lr.resolve();\n    }, t;\n}(), go = /** @class */ function() {\n    function t() {\n        // A set of outstanding references to a document sorted by key.\n        this.vc = new sn(wo.Sc), \n        // A set of outstanding references to a document sorted by target id.\n        this.Dc = new sn(wo.Cc)\n        /** Returns true if the reference set contains no references. */;\n    }\n    return t.prototype.et = function() {\n        return this.vc.et();\n    }, \n    /** Adds a reference to the given document key for the given ID. */ t.prototype.nr = function(t, e) {\n        var n = new wo(t, e);\n        this.vc = this.vc.add(n), this.Dc = this.Dc.add(n);\n    }, \n    /** Add references to the given document keys for the given ID. */ t.prototype.xc = function(t, e) {\n        var n = this;\n        t.forEach((function(t) {\n            return n.nr(t, e);\n        }));\n    }, \n    /**\n     * Removes a reference to the given document key for the given\n     * ID.\n     */\n    t.prototype.ir = function(t, e) {\n        this.Nc(new wo(t, e));\n    }, t.prototype.$c = function(t, e) {\n        var n = this;\n        t.forEach((function(t) {\n            return n.ir(t, e);\n        }));\n    }, \n    /**\n     * Clears all references with a given ID. Calls removeRef() for each key\n     * removed.\n     */\n    t.prototype.Fc = function(t) {\n        var e = this, n = new tt(new Z([])), r = new wo(n, t), i = new wo(n, t + 1), o = [];\n        return this.Dc.me([ r, i ], (function(t) {\n            e.Nc(t), o.push(t.key);\n        })), o;\n    }, t.prototype.Oc = function() {\n        var t = this;\n        this.vc.forEach((function(e) {\n            return t.Nc(e);\n        }));\n    }, t.prototype.Nc = function(t) {\n        this.vc = this.vc.delete(t), this.Dc = this.Dc.delete(t);\n    }, t.prototype.kc = function(t) {\n        var e = new tt(new Z([])), n = new wo(e, t), r = new wo(e, t + 1), i = mn();\n        return this.Dc.me([ n, r ], (function(t) {\n            i = i.add(t.key);\n        })), i;\n    }, t.prototype.Fi = function(t) {\n        var e = new wo(t, 0), n = this.vc.Re(e);\n        return null !== n && t.isEqual(n.key);\n    }, t;\n}(), wo = /** @class */ function() {\n    function t(t, e) {\n        this.key = t, this.Mc = e\n        /** Compare by key then by ID */;\n    }\n    return t.Sc = function(t, e) {\n        return tt.H(t.key, e.key) || C(t.Mc, e.Mc);\n    }, \n    /** Compare by ID then by key */ t.Cc = function(t, e) {\n        return C(t.Mc, e.Mc) || tt.H(t.key, e.key);\n    }, t;\n}(), bo = /** @class */ function() {\n    function t(t, e) {\n        this.Ei = t, this.Ti = e, \n        /**\n             * The set of all mutations that have been sent but not yet been applied to\n             * the backend.\n             */\n        this.zo = [], \n        /** Next value to use when assigning sequential IDs to each mutation batch. */\n        this.Lc = 1, \n        /** An ordered mapping between documents and the mutations batch IDs. */\n        this.Bc = new sn(wo.Sc);\n    }\n    return t.prototype.Ai = function(t) {\n        return lr.resolve(0 === this.zo.length);\n    }, t.prototype.Ri = function(t, e, n, r) {\n        var i = this.Lc;\n        this.Lc++, this.zo.length > 0 && this.zo[this.zo.length - 1];\n        var o = new Xr(i, e, n, r);\n        this.zo.push(o);\n        // Track references by document key and index collection parents.\n        for (var u = 0, s = r; u < s.length; u++) {\n            var a = s[u];\n            this.Bc = this.Bc.add(new wo(a.key, i)), this.Ei.qs(t, a.key.path.X());\n        }\n        return lr.resolve(o);\n    }, t.prototype.Pi = function(t, e) {\n        return lr.resolve(this.qc(e));\n    }, t.prototype.gi = function(t, e) {\n        var n = e + 1, r = this.Uc(n), i = r < 0 ? 0 : r;\n        // The requested batchId may still be out of range so normalize it to the\n        // start of the queue.\n                return lr.resolve(this.zo.length > i ? this.zo[i] : null);\n    }, t.prototype.Vi = function() {\n        return lr.resolve(0 === this.zo.length ? -1 : this.Lc - 1);\n    }, t.prototype.pi = function(t) {\n        return lr.resolve(this.zo.slice());\n    }, t.prototype.bi = function(t, e) {\n        var n = this, r = new wo(e, 0), i = new wo(e, Number.POSITIVE_INFINITY), o = [];\n        return this.Bc.me([ r, i ], (function(t) {\n            var e = n.qc(t.Mc);\n            o.push(e);\n        })), lr.resolve(o);\n    }, t.prototype.vi = function(t, e) {\n        var n = this, r = new sn(C);\n        return e.forEach((function(t) {\n            var e = new wo(t, 0), i = new wo(t, Number.POSITIVE_INFINITY);\n            n.Bc.me([ e, i ], (function(t) {\n                r = r.add(t.Mc);\n            }));\n        })), lr.resolve(this.Qc(r));\n    }, t.prototype.Di = function(t, e) {\n        // Use the query path as a prefix for testing if a document matches the\n        // query.\n        var n = e.path, r = n.length + 1, i = n;\n        // Construct a document reference for actually scanning the index. Unlike\n        // the prefix the document key in this reference must have an even number of\n        // segments. The empty segment can be used a suffix of the query path\n        // because it precedes all other segments in an ordered traversal.\n                tt.wt(i) || (i = i.child(\"\"));\n        var o = new wo(new tt(i), 0), u = new sn(C);\n        // Find unique batchIDs referenced by all documents potentially matching the\n        // query.\n                return this.Bc.Ae((function(t) {\n            var e = t.key.path;\n            return !!n.nt(e) && (\n            // Rows with document keys more than one segment longer than the query\n            // path can't be matches. For example, a query on 'rooms' can't match\n            // the document /rooms/abc/messages/xyx.\n            // TODO(mcg): we'll need a different scanner when we implement\n            // ancestor queries.\n            e.length === r && (u = u.add(t.Mc)), !0);\n        }), o), lr.resolve(this.Qc(u));\n    }, t.prototype.Qc = function(t) {\n        var e = this, n = [];\n        // Construct an array of matching batches, sorted by batchID to ensure that\n        // multiple mutations affecting the same document key are applied in order.\n                return t.forEach((function(t) {\n            var r = e.qc(t);\n            null !== r && n.push(r);\n        })), n;\n    }, t.prototype.Ci = function(t, e) {\n        var n = this;\n        k(0 === this.Kc(e.batchId, \"removed\")), this.zo.shift();\n        var r = this.Bc;\n        return lr.forEach(e.mutations, (function(i) {\n            var o = new wo(i.key, e.batchId);\n            return r = r.delete(o), n.Ti.Ni(t, i.key);\n        })).next((function() {\n            n.Bc = r;\n        }));\n    }, t.prototype.xi = function(t) {\n        // No-op since the memory mutation queue does not maintain a separate cache.\n    }, t.prototype.Fi = function(t, e) {\n        var n = new wo(e, 0), r = this.Bc.Re(n);\n        return lr.resolve(e.isEqual(r && r.key));\n    }, t.prototype.$i = function(t) {\n        return this.zo.length, lr.resolve();\n    }, \n    /**\n     * Finds the index of the given batchId in the mutation queue and asserts that\n     * the resulting index is within the bounds of the queue.\n     *\n     * @param batchId - The batchId to search for\n     * @param action - A description of what the caller is doing, phrased in passive\n     * form (e.g. \"acknowledged\" in a routine that acknowledges batches).\n     */\n    t.prototype.Kc = function(t, e) {\n        return this.Uc(t);\n    }, \n    /**\n     * Finds the index of the given batchId in the mutation queue. This operation\n     * is O(1).\n     *\n     * @returns The computed index of the batch with the given batchId, based on\n     * the state of the queue. Note this index can be negative if the requested\n     * batchId has already been remvoed from the queue or past the end of the\n     * queue if the batchId is larger than the last added batch.\n     */\n    t.prototype.Uc = function(t) {\n        return 0 === this.zo.length ? 0 : t - this.zo[0].batchId;\n        // Examine the front of the queue to figure out the difference between the\n        // batchId and indexes in the array. Note that since the queue is ordered\n        // by batchId, if the first batch has a larger batchId then the requested\n        // batchId doesn't exist in the queue.\n        }, \n    /**\n     * A version of lookupMutationBatch that doesn't return a promise, this makes\n     * other functions that uses this code easier to read and more efficent.\n     */\n    t.prototype.qc = function(t) {\n        var e = this.Uc(t);\n        return e < 0 || e >= this.zo.length ? null : this.zo[e];\n    }, t;\n}(), _o = /** @class */ function() {\n    /**\n     * @param sizer - Used to assess the size of a document. For eager GC, this is\n     * expected to just return 0 to avoid unnecessarily doing the work of\n     * calculating the size.\n     */\n    function t(t, e) {\n        this.Ei = t, this.Wc = e, \n        /** Underlying cache of documents and their read times. */\n        this.docs = new rn(tt.H), \n        /** Size of all cached documents. */\n        this.size = 0\n        /**\n     * Adds the supplied entry to the cache and updates the cache size as appropriate.\n     *\n     * All calls of `addEntry`  are required to go through the RemoteDocumentChangeBuffer\n     * returned by `newChangeBuffer()`.\n     */;\n    }\n    return t.prototype.ai = function(t, e, n) {\n        var r = e.key, i = this.docs.get(r), o = i ? i.size : 0, u = this.Wc(e);\n        return this.docs = this.docs.zt(r, {\n            hi: e,\n            size: u,\n            readTime: n\n        }), this.size += u - o, this.Ei.qs(t, r.path.X());\n    }, \n    /**\n     * Removes the specified entry from the cache and updates the cache size as appropriate.\n     *\n     * All calls of `removeEntry` are required to go through the RemoteDocumentChangeBuffer\n     * returned by `newChangeBuffer()`.\n     */\n    t.prototype.li = function(t) {\n        var e = this.docs.get(t);\n        e && (this.docs = this.docs.remove(t), this.size -= e.size);\n    }, t.prototype._i = function(t, e) {\n        var n = this.docs.get(e);\n        return lr.resolve(n ? n.hi : null);\n    }, t.prototype.getEntries = function(t, e) {\n        var n = this, r = fn();\n        return e.forEach((function(t) {\n            var e = n.docs.get(t);\n            r = r.zt(t, e ? e.hi : null);\n        })), lr.resolve(r);\n    }, t.prototype.Kr = function(t, e, n) {\n        for (var r = pn(), i = new tt(e.path.child(\"\")), o = this.docs.ee(i)\n        // Documents are ordered by key, so we can use a prefix scan to narrow down\n        // the documents we need to match the query against.\n        ; o.ce(); ) {\n            var u = o.oe(), s = u.key, a = u.value, c = a.hi, h = a.readTime;\n            if (!e.path.nt(s.path)) break;\n            h._(n) <= 0 || c instanceof Pt && ve(e, c) && (r = r.zt(c.key, c));\n        }\n        return lr.resolve(r);\n    }, t.prototype.jc = function(t, e) {\n        return lr.forEach(this.docs, (function(t) {\n            return e(t);\n        }));\n    }, t.prototype.Nr = function(t) {\n        // `trackRemovals` is ignores since the MemoryRemoteDocumentCache keeps\n        // a separate changelog and does not need special handling for removals.\n        return new Io(this);\n    }, t.prototype.Or = function(t) {\n        return lr.resolve(this.size);\n    }, t;\n}(), Io = /** @class */ function(t) {\n    function e(e) {\n        var n = this;\n        return (n = t.call(this) || this).jr = e, n;\n    }\n    return m(e, t), e.prototype.wi = function(t) {\n        var e = this, n = [];\n        return this.ri.forEach((function(r, i) {\n            i && i.hi ? n.push(e.jr.ai(t, i.hi, e.ci(r))) : e.jr.li(r);\n        })), lr.Mn(n);\n    }, e.prototype.fi = function(t, e) {\n        return this.jr._i(t, e);\n    }, e.prototype.di = function(t, e) {\n        return this.jr.getEntries(t, e);\n    }, e;\n}(wi), Eo = /** @class */ function() {\n    function t(t) {\n        this.persistence = t, \n        /**\n             * Maps a target to the data about that target\n             */\n        this.Gc = new gi((function(t) {\n            return Ut(t);\n        }), Mt), \n        /** The last received snapshot version. */\n        this.lastRemoteSnapshotVersion = X.min(), \n        /** The highest numbered target ID encountered. */\n        this.highestTargetId = 0, \n        /** The highest sequence number encountered. */\n        this.zc = 0, \n        /**\n             * A ordered bidirectional mapping between documents and the remote target\n             * IDs.\n             */\n        this.Hc = new go, this.targetCount = 0, this.Jc = Di.Mi();\n    }\n    return t.prototype.In = function(t, e) {\n        return this.Gc.forEach((function(t, n) {\n            return e(n);\n        })), lr.resolve();\n    }, t.prototype.Qi = function(t) {\n        return lr.resolve(this.lastRemoteSnapshotVersion);\n    }, t.prototype.Ki = function(t) {\n        return lr.resolve(this.zc);\n    }, t.prototype.Bi = function(t) {\n        return this.highestTargetId = this.Jc.next(), lr.resolve(this.highestTargetId);\n    }, t.prototype.Wi = function(t, e, n) {\n        return n && (this.lastRemoteSnapshotVersion = n), e > this.zc && (this.zc = e), \n        lr.resolve();\n    }, t.prototype.Gi = function(t) {\n        this.Gc.set(t.target, t);\n        var e = t.targetId;\n        e > this.highestTargetId && (this.Jc = new Di(e), this.highestTargetId = e), t.sequenceNumber > this.zc && (this.zc = t.sequenceNumber);\n    }, t.prototype.ji = function(t, e) {\n        return this.Gi(e), this.targetCount += 1, lr.resolve();\n    }, t.prototype.Hi = function(t, e) {\n        return this.Gi(e), lr.resolve();\n    }, t.prototype.Ji = function(t, e) {\n        return this.Gc.delete(e.target), this.Hc.Fc(e.targetId), this.targetCount -= 1, \n        lr.resolve();\n    }, t.prototype.Xi = function(t, e, n) {\n        var r = this, i = 0, o = [];\n        return this.Gc.forEach((function(u, s) {\n            s.sequenceNumber <= e && null === n.get(s.targetId) && (r.Gc.delete(u), o.push(r.Yi(t, s.targetId)), \n            i++);\n        })), lr.Mn(o).next((function() {\n            return i;\n        }));\n    }, t.prototype.Zi = function(t) {\n        return lr.resolve(this.targetCount);\n    }, t.prototype.tr = function(t, e) {\n        var n = this.Gc.get(e) || null;\n        return lr.resolve(n);\n    }, t.prototype.er = function(t, e, n) {\n        return this.Hc.xc(e, n), lr.resolve();\n    }, t.prototype.sr = function(t, e, n) {\n        this.Hc.$c(e, n);\n        var r = this.persistence.Ti, i = [];\n        return r && e.forEach((function(e) {\n            i.push(r.Ni(t, e));\n        })), lr.Mn(i);\n    }, t.prototype.Yi = function(t, e) {\n        return this.Hc.Fc(e), lr.resolve();\n    }, t.prototype.rr = function(t, e) {\n        var n = this.Hc.kc(e);\n        return lr.resolve(n);\n    }, t.prototype.Fi = function(t, e) {\n        return lr.resolve(this.Hc.Fi(e));\n    }, t;\n}(), To = /** @class */ function() {\n    /**\n     * The constructor accepts a factory for creating a reference delegate. This\n     * allows both the delegate and this instance to have strong references to\n     * each other without having nullable fields that would then need to be\n     * checked or asserted on every access.\n     */\n    function t(t, e) {\n        var n = this;\n        this.Yc = {}, this.so = new H(0), this.io = !1, this.io = !0, this.Ti = t(this), \n        this._o = new Eo(this), this.Ei = new fi, this.fo = function(t, e) {\n            return new _o(t, (function(t) {\n                return n.Ti.Xc(t);\n            }));\n        }(this.Ei), this.Qt = new Zr(e), this.wo = new mo(this.Qt);\n    }\n    return t.prototype.start = function() {\n        return Promise.resolve();\n    }, t.prototype.ko = function() {\n        // No durable state to ensure is closed on shutdown.\n        return this.io = !1, Promise.resolve();\n    }, Object.defineProperty(t.prototype, \"Er\", {\n        get: function() {\n            return this.io;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), t.prototype.Po = function() {\n        // No op.\n    }, t.prototype.yo = function() {\n        // No op.\n    }, t.prototype.Ko = function() {\n        return this.Ei;\n    }, t.prototype.Qo = function(t) {\n        var e = this.Yc[t.A()];\n        return e || (e = new bo(this.Ei, this.Ti), this.Yc[t.A()] = e), e;\n    }, t.prototype.Sr = function() {\n        return this._o;\n    }, t.prototype.$r = function() {\n        return this.fo;\n    }, t.prototype.Wo = function() {\n        return this.wo;\n    }, t.prototype.runTransaction = function(t, e, n) {\n        var r = this;\n        N(\"MemoryPersistence\", \"Starting transaction:\", t);\n        var i = new No(this.so.next());\n        return this.Ti.Zc(), n(i).next((function(t) {\n            return r.Ti.ta(i).next((function() {\n                return t;\n            }));\n        })).On().then((function(t) {\n            return i.Vs(), t;\n        }));\n    }, t.prototype.ea = function(t, e) {\n        return lr.Ln(Object.values(this.Yc).map((function(n) {\n            return function() {\n                return n.Fi(t, e);\n            };\n        })));\n    }, t;\n}(), No = /** @class */ function(t) {\n    function e(e) {\n        var n = this;\n        return (n = t.call(this) || this).bs = e, n;\n    }\n    return m(e, t), e;\n}(Nr), Ao = /** @class */ function() {\n    function t(t) {\n        this.persistence = t, \n        /** Tracks all documents that are active in Query views. */\n        this.na = new go, \n        /** The list of documents that are potentially GCed after each transaction. */\n        this.sa = null;\n    }\n    return t.ia = function(e) {\n        return new t(e);\n    }, Object.defineProperty(t.prototype, \"ra\", {\n        get: function() {\n            if (this.sa) return this.sa;\n            throw x();\n        },\n        enumerable: !1,\n        configurable: !0\n    }), t.prototype.nr = function(t, e, n) {\n        return this.na.nr(n, e), this.ra.delete(n.toString()), lr.resolve();\n    }, t.prototype.ir = function(t, e, n) {\n        return this.na.ir(n, e), this.ra.add(n.toString()), lr.resolve();\n    }, t.prototype.Ni = function(t, e) {\n        return this.ra.add(e.toString()), lr.resolve();\n    }, t.prototype.removeTarget = function(t, e) {\n        var n = this;\n        this.na.Fc(e.targetId).forEach((function(t) {\n            return n.ra.add(t.toString());\n        }));\n        var r = this.persistence.Sr();\n        return r.rr(t, e.targetId).next((function(t) {\n            t.forEach((function(t) {\n                return n.ra.add(t.toString());\n            }));\n        })).next((function() {\n            return r.Ji(t, e);\n        }));\n    }, t.prototype.Zc = function() {\n        this.sa = new Set;\n    }, t.prototype.ta = function(t) {\n        var e = this, n = this.persistence.$r().Nr();\n        // Remove newly orphaned documents.\n                return lr.forEach(this.ra, (function(r) {\n            var i = tt._t(r);\n            return e.oa(t, i).next((function(t) {\n                t || n.li(i);\n            }));\n        })).next((function() {\n            return e.sa = null, n.apply(t);\n        }));\n    }, t.prototype.Fr = function(t, e) {\n        var n = this;\n        return this.oa(t, e).next((function(t) {\n            t ? n.ra.delete(e.toString()) : n.ra.add(e.toString());\n        }));\n    }, t.prototype.Xc = function(t) {\n        // For eager GC, we don't care about the document size, there are no size thresholds.\n        return 0;\n    }, t.prototype.oa = function(t, e) {\n        var n = this;\n        return lr.Ln([ function() {\n            return lr.resolve(n.na.Fi(e));\n        }, function() {\n            return n.persistence.Sr().Fi(t, e);\n        }, function() {\n            return n.persistence.ea(t, e);\n        } ]);\n    }, t;\n}();\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A collection of references to a document from some kind of numbered entity\n * (either a target ID or batch ID). As references are added to or removed from\n * the set corresponding events are emitted to a registered garbage collector.\n *\n * Each reference is represented by a DocumentReference object. Each of them\n * contains enough information to uniquely identify the reference. They are all\n * stored primarily in a set sorted by key. A document is considered garbage if\n * there's no references in that set (this can be efficiently checked thanks to\n * sorting by key).\n *\n * ReferenceSet also keeps a secondary set that contains references sorted by\n * IDs. This one is used to efficiently implement removal of all references by\n * some target ID.\n */\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The format of the LocalStorage key that stores the client state is:\n//     firestore_clients_<persistence_prefix>_<instance_key>\n/** Assembles the key for a client state in WebStorage */\nfunction Do(t, e) {\n    return \"firestore_clients_\" + t + \"_\" + e;\n}\n\n// The format of the WebStorage key that stores the mutation state is:\n//     firestore_mutations_<persistence_prefix>_<batch_id>\n//     (for unauthenticated users)\n// or: firestore_mutations_<persistence_prefix>_<batch_id>_<user_uid>\n// 'user_uid' is last to avoid needing to escape '_' characters that it might\n// contain.\n/** Assembles the key for a mutation batch in WebStorage */ function So(t, e, n) {\n    var r = \"firestore_mutations_\" + t + \"_\" + n;\n    return e.m() && (r += \"_\" + e.uid), r;\n}\n\n// The format of the WebStorage key that stores a query target's metadata is:\n//     firestore_targets_<persistence_prefix>_<target_id>\n/** Assembles the key for a query state in WebStorage */ function xo(t, e) {\n    return \"firestore_targets_\" + t + \"_\" + e;\n}\n\n// The WebStorage prefix that stores the primary tab's online state. The\n// format of the key is:\n//     firestore_online_state_<persistence_prefix>\n/**\n * Holds the state of a mutation batch, including its user ID, batch ID and\n * whether the batch is 'pending', 'acknowledged' or 'rejected'.\n */\n// Visible for testing\nvar ko = /** @class */ function() {\n    function t(t, e, n, r) {\n        this.user = t, this.batchId = e, this.state = n, this.error = r\n        /**\n     * Parses a MutationMetadata from its JSON representation in WebStorage.\n     * Logs a warning and returns null if the format of the data is not valid.\n     */;\n    }\n    return t.ca = function(e, n, r) {\n        var i, o = JSON.parse(r), u = \"object\" == typeof o && -1 !== [ \"pending\", \"acknowledged\", \"rejected\" ].indexOf(o.state) && (void 0 === o.error || \"object\" == typeof o.error);\n        return u && o.error && ((u = \"string\" == typeof o.error.message && \"string\" == typeof o.error.code) && (i = new q(o.error.code, o.error.message))), \n        u ? new t(e, n, o.state, i) : (A(\"SharedClientState\", \"Failed to parse mutation state for ID '\" + n + \"': \" + r), \n        null);\n    }, t.prototype.aa = function() {\n        var t = {\n            state: this.state,\n            updateTimeMs: Date.now()\n        };\n        return this.error && (t.error = {\n            code: this.error.code,\n            message: this.error.message\n        }), JSON.stringify(t);\n    }, t;\n}(), Oo = /** @class */ function() {\n    function t(t, e, n) {\n        this.targetId = t, this.state = e, this.error = n\n        /**\n     * Parses a QueryTargetMetadata from its JSON representation in WebStorage.\n     * Logs a warning and returns null if the format of the data is not valid.\n     */;\n    }\n    return t.ca = function(e, n) {\n        var r, i = JSON.parse(n), o = \"object\" == typeof i && -1 !== [ \"not-current\", \"current\", \"rejected\" ].indexOf(i.state) && (void 0 === i.error || \"object\" == typeof i.error);\n        return o && i.error && ((o = \"string\" == typeof i.error.message && \"string\" == typeof i.error.code) && (r = new q(i.error.code, i.error.message))), \n        o ? new t(e, i.state, r) : (A(\"SharedClientState\", \"Failed to parse target state for ID '\" + e + \"': \" + n), \n        null);\n    }, t.prototype.aa = function() {\n        var t = {\n            state: this.state,\n            updateTimeMs: Date.now()\n        };\n        return this.error && (t.error = {\n            code: this.error.code,\n            message: this.error.message\n        }), JSON.stringify(t);\n    }, t;\n}(), Po = /** @class */ function() {\n    function t(t, e) {\n        this.clientId = t, this.activeTargetIds = e\n        /**\n     * Parses a RemoteClientState from the JSON representation in WebStorage.\n     * Logs a warning and returns null if the format of the data is not valid.\n     */;\n    }\n    return t.ca = function(e, n) {\n        for (var r = JSON.parse(n), i = \"object\" == typeof r && r.activeTargetIds instanceof Array, o = wn(), u = 0; i && u < r.activeTargetIds.length; ++u) i = dt(r.activeTargetIds[u]), \n        o = o.add(r.activeTargetIds[u]);\n        return i ? new t(e, o) : (A(\"SharedClientState\", \"Failed to parse client data for instance '\" + e + \"': \" + n), \n        null);\n    }, t;\n}(), Vo = /** @class */ function() {\n    function t(t, e) {\n        this.clientId = t, this.onlineState = e\n        /**\n     * Parses a SharedOnlineState from its JSON representation in WebStorage.\n     * Logs a warning and returns null if the format of the data is not valid.\n     */;\n    }\n    return t.ca = function(e) {\n        var n = JSON.parse(e);\n        return \"object\" == typeof n && -1 !== [ \"Unknown\", \"Online\", \"Offline\" ].indexOf(n.onlineState) && \"string\" == typeof n.clientId ? new t(n.clientId, n.onlineState) : (A(\"SharedClientState\", \"Failed to parse online state: \" + e), \n        null);\n    }, t;\n}(), Co = /** @class */ function() {\n    function t() {\n        this.activeTargetIds = wn();\n    }\n    return t.prototype.ua = function(t) {\n        this.activeTargetIds = this.activeTargetIds.add(t);\n    }, t.prototype.ha = function(t) {\n        this.activeTargetIds = this.activeTargetIds.delete(t);\n    }, \n    /**\n     * Converts this entry into a JSON-encoded format we can use for WebStorage.\n     * Does not encode `clientId` as it is part of the key in WebStorage.\n     */\n    t.prototype.aa = function() {\n        var t = {\n            activeTargetIds: this.activeTargetIds.it(),\n            updateTimeMs: Date.now()\n        };\n        return JSON.stringify(t);\n    }, t;\n}(), Lo = /** @class */ function() {\n    function t(t, e, n, r, i) {\n        this.window = t, this.Zr = e, this.persistenceKey = n, this.la = r, this._a = null, \n        this.fa = null, this.k = null, this.da = this.wa.bind(this), this.Ea = new rn(C), \n        this.Er = !1, \n        /**\n             * Captures WebStorage events that occur before `start()` is called. These\n             * events are replayed once `WebStorageSharedClientState` is started.\n             */\n        this.Ta = [];\n        // Escape the special characters mentioned here:\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n        var o = n.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n        this.storage = this.window.localStorage, this.currentUser = i, this.Ia = Do(this.persistenceKey, this.la), \n        this.ma = \n        /** Assembles the key for the current sequence number. */\n        function(t) {\n            return \"firestore_sequence_number_\" + t;\n        }(this.persistenceKey), this.Ea = this.Ea.zt(this.la, new Co), this.Aa = new RegExp(\"^firestore_clients_\" + o + \"_([^_]*)$\"), \n        this.Ra = new RegExp(\"^firestore_mutations_\" + o + \"_(\\\\d+)(?:_(.*))?$\"), this.Pa = new RegExp(\"^firestore_targets_\" + o + \"_(\\\\d+)$\"), \n        this.ya = \n        /** Assembles the key for the online state of the primary tab. */\n        function(t) {\n            return \"firestore_online_state_\" + t;\n        }(this.persistenceKey), this.ga = function(t) {\n            return \"firestore_bundle_loaded_\" + t;\n        }(this.persistenceKey), \n        // Rather than adding the storage observer during start(), we add the\n        // storage observer during initialization. This ensures that we collect\n        // events before other components populate their initial state (during their\n        // respective start() calls). Otherwise, we might for example miss a\n        // mutation that is added after LocalStore's start() processed the existing\n        // mutations but before we observe WebStorage events.\n        this.window.addEventListener(\"storage\", this.da);\n    }\n    /** Returns 'true' if WebStorage is available in the current environment. */    return t.Kn = function(t) {\n        return !(!t || !t.localStorage);\n    }, t.prototype.start = function() {\n        return g(this, void 0, void 0, (function() {\n            var t, e, n, r, i, o, u, s, a, c, h, f = this;\n            return w(this, (function(l) {\n                switch (l.label) {\n                  case 0:\n                    return [ 4 /*yield*/ , this._a.Uo() ];\n\n                  case 1:\n                    for (t = l.sent(), e = 0, n = t; e < n.length; e++) (r = n[e]) !== this.la && (i = this.getItem(Do(this.persistenceKey, r))) && (o = Po.ca(r, i)) && (this.Ea = this.Ea.zt(o.clientId, o));\n                    for (this.Va(), (u = this.storage.getItem(this.ya)) && (s = this.pa(u)) && this.ba(s), \n                    a = 0, c = this.Ta; a < c.length; a++) h = c[a], this.wa(h);\n                    return this.Ta = [], \n                    // Register a window unload hook to remove the client metadata entry from\n                    // WebStorage even if `shutdown()` was not called.\n                    this.window.addEventListener(\"unload\", (function() {\n                        return f.ko();\n                    })), this.Er = !0, [ 2 /*return*/ ];\n                }\n            }));\n        }));\n    }, t.prototype.B = function(t) {\n        this.setItem(this.ma, JSON.stringify(t));\n    }, t.prototype.va = function() {\n        return this.Sa(this.Ea);\n    }, t.prototype.Da = function(t) {\n        var e = !1;\n        return this.Ea.forEach((function(n, r) {\n            r.activeTargetIds.has(t) && (e = !0);\n        })), e;\n    }, t.prototype.Ca = function(t) {\n        this.xa(t, \"pending\");\n    }, t.prototype.Na = function(t, e, n) {\n        this.xa(t, e, n), \n        // Once a final mutation result is observed by other clients, they no longer\n        // access the mutation's metadata entry. Since WebStorage replays events\n        // in order, it is safe to delete the entry right after updating it.\n        this.$a(t);\n    }, t.prototype.Fa = function(t) {\n        var e = \"not-current\";\n        // Lookup an existing query state if the target ID was already registered\n        // by another tab\n                if (this.Da(t)) {\n            var n = this.storage.getItem(xo(this.persistenceKey, t));\n            if (n) {\n                var r = Oo.ca(t, n);\n                r && (e = r.state);\n            }\n        }\n        return this.Oa.ua(t), this.Va(), e;\n    }, t.prototype.ka = function(t) {\n        this.Oa.ha(t), this.Va();\n    }, t.prototype.Ma = function(t) {\n        return this.Oa.activeTargetIds.has(t);\n    }, t.prototype.La = function(t) {\n        this.removeItem(xo(this.persistenceKey, t));\n    }, t.prototype.Ba = function(t, e, n) {\n        this.qa(t, e, n);\n    }, t.prototype.Ua = function(t, e, n) {\n        var r = this;\n        e.forEach((function(t) {\n            r.$a(t);\n        })), this.currentUser = t, n.forEach((function(t) {\n            r.Ca(t);\n        }));\n    }, t.prototype.Qa = function(t) {\n        this.Ka(t);\n    }, t.prototype.Wa = function() {\n        this.ja();\n    }, t.prototype.ko = function() {\n        this.Er && (this.window.removeEventListener(\"storage\", this.da), this.removeItem(this.Ia), \n        this.Er = !1);\n    }, t.prototype.getItem = function(t) {\n        var e = this.storage.getItem(t);\n        return N(\"SharedClientState\", \"READ\", t, e), e;\n    }, t.prototype.setItem = function(t, e) {\n        N(\"SharedClientState\", \"SET\", t, e), this.storage.setItem(t, e);\n    }, t.prototype.removeItem = function(t) {\n        N(\"SharedClientState\", \"REMOVE\", t), this.storage.removeItem(t);\n    }, t.prototype.wa = function(t) {\n        var e = this, n = t;\n        // Note: The function is typed to take Event to be interface-compatible with\n        // `Window.addEventListener`.\n                if (n.storageArea === this.storage) {\n            if (N(\"SharedClientState\", \"EVENT\", n.key, n.newValue), n.key === this.Ia) return void A(\"Received WebStorage notification for local change. Another client might have garbage-collected our state\");\n            this.Zr.po((function() {\n                return g(e, void 0, void 0, (function() {\n                    var t, e, r, i, o, u;\n                    return w(this, (function(s) {\n                        if (this.Er) {\n                            if (null !== n.key) if (this.Aa.test(n.key)) {\n                                if (null == n.newValue) return t = this.Ga(n.key), [ 2 /*return*/ , this.za(t, null) ];\n                                if (e = this.Ha(n.key, n.newValue)) return [ 2 /*return*/ , this.za(e.clientId, e) ];\n                            } else if (this.Ra.test(n.key)) {\n                                if (null !== n.newValue && (r = this.Ja(n.key, n.newValue))) return [ 2 /*return*/ , this.Ya(r) ];\n                            } else if (this.Pa.test(n.key)) {\n                                if (null !== n.newValue && (i = this.Xa(n.key, n.newValue))) return [ 2 /*return*/ , this.Za(i) ];\n                            } else if (n.key === this.ya) {\n                                if (null !== n.newValue && (o = this.pa(n.newValue))) return [ 2 /*return*/ , this.ba(o) ];\n                            } else if (n.key === this.ma) (u = function(t) {\n                                var e = H.q;\n                                if (null != t) try {\n                                    var n = JSON.parse(t);\n                                    k(\"number\" == typeof n), e = n;\n                                } catch (t) {\n                                    A(\"SharedClientState\", \"Failed to read sequence number from WebStorage\", t);\n                                }\n                                return e;\n                            }(n.newValue)) !== H.q && this.k(u); else if (n.key === this.ga) return [ 2 /*return*/ , this._a.tu() ];\n                        } else this.Ta.push(n);\n                        return [ 2 /*return*/ ];\n                    }));\n                }));\n            }));\n        }\n    }, Object.defineProperty(t.prototype, \"Oa\", {\n        get: function() {\n            return this.Ea.get(this.la);\n        },\n        enumerable: !1,\n        configurable: !0\n    }), t.prototype.Va = function() {\n        this.setItem(this.Ia, this.Oa.aa());\n    }, t.prototype.xa = function(t, e, n) {\n        var r = new ko(this.currentUser, t, e, n), i = So(this.persistenceKey, this.currentUser, t);\n        this.setItem(i, r.aa());\n    }, t.prototype.$a = function(t) {\n        var e = So(this.persistenceKey, this.currentUser, t);\n        this.removeItem(e);\n    }, t.prototype.Ka = function(t) {\n        var e = {\n            clientId: this.la,\n            onlineState: t\n        };\n        this.storage.setItem(this.ya, JSON.stringify(e));\n    }, t.prototype.qa = function(t, e, n) {\n        var r = xo(this.persistenceKey, t), i = new Oo(t, e, n);\n        this.setItem(r, i.aa());\n    }, t.prototype.ja = function() {\n        this.setItem(this.ga, \"value-not-used\");\n    }, \n    /**\n     * Parses a client state key in WebStorage. Returns null if the key does not\n     * match the expected key format.\n     */\n    t.prototype.Ga = function(t) {\n        var e = this.Aa.exec(t);\n        return e ? e[1] : null;\n    }, \n    /**\n     * Parses a client state in WebStorage. Returns 'null' if the value could not\n     * be parsed.\n     */\n    t.prototype.Ha = function(t, e) {\n        var n = this.Ga(t);\n        return Po.ca(n, e);\n    }, \n    /**\n     * Parses a mutation batch state in WebStorage. Returns 'null' if the value\n     * could not be parsed.\n     */\n    t.prototype.Ja = function(t, e) {\n        var n = this.Ra.exec(t), r = Number(n[1]), i = void 0 !== n[2] ? n[2] : null;\n        return ko.ca(new j(i), r, e);\n    }, \n    /**\n     * Parses a query target state from WebStorage. Returns 'null' if the value\n     * could not be parsed.\n     */\n    t.prototype.Xa = function(t, e) {\n        var n = this.Pa.exec(t), r = Number(n[1]);\n        return Oo.ca(r, e);\n    }, \n    /**\n     * Parses an online state from WebStorage. Returns 'null' if the value\n     * could not be parsed.\n     */\n    t.prototype.pa = function(t) {\n        return Vo.ca(t);\n    }, t.prototype.Ya = function(t) {\n        return g(this, void 0, void 0, (function() {\n            return w(this, (function(e) {\n                return t.user.uid === this.currentUser.uid ? [ 2 /*return*/ , this._a.eu(t.batchId, t.state, t.error) ] : (N(\"SharedClientState\", \"Ignoring mutation for non-active user \" + t.user.uid), \n                [ 2 /*return*/ ]);\n            }));\n        }));\n    }, t.prototype.Za = function(t) {\n        return this._a.nu(t.targetId, t.state, t.error);\n    }, t.prototype.za = function(t, e) {\n        var n = this, r = e ? this.Ea.zt(t, e) : this.Ea.remove(t), i = this.Sa(this.Ea), o = this.Sa(r), u = [], s = [];\n        return o.forEach((function(t) {\n            i.has(t) || u.push(t);\n        })), i.forEach((function(t) {\n            o.has(t) || s.push(t);\n        })), this._a.su(u, s).then((function() {\n            n.Ea = r;\n        }));\n    }, t.prototype.ba = function(t) {\n        // We check whether the client that wrote this online state is still active\n        // by comparing its client ID to the list of clients kept active in\n        // IndexedDb. If a client does not update their IndexedDb client state\n        // within 5 seconds, it is considered inactive and we don't emit an online\n        // state event.\n        this.Ea.get(t.clientId) && this.fa(t.onlineState);\n    }, t.prototype.Sa = function(t) {\n        var e = wn();\n        return t.forEach((function(t, n) {\n            e = e.Pe(n.activeTargetIds);\n        })), e;\n    }, t;\n}(), Ro = /** @class */ function() {\n    function t() {\n        this.iu = new Co, this.ru = {}, this.fa = null, this.k = null;\n    }\n    return t.prototype.Ca = function(t) {\n        // No op.\n    }, t.prototype.Na = function(t, e, n) {\n        // No op.\n    }, t.prototype.Fa = function(t) {\n        return this.iu.ua(t), this.ru[t] || \"not-current\";\n    }, t.prototype.Ba = function(t, e, n) {\n        this.ru[t] = e;\n    }, t.prototype.ka = function(t) {\n        this.iu.ha(t);\n    }, t.prototype.Ma = function(t) {\n        return this.iu.activeTargetIds.has(t);\n    }, t.prototype.La = function(t) {\n        delete this.ru[t];\n    }, t.prototype.va = function() {\n        return this.iu.activeTargetIds;\n    }, t.prototype.Da = function(t) {\n        return this.iu.activeTargetIds.has(t);\n    }, t.prototype.start = function() {\n        return this.iu = new Co, Promise.resolve();\n    }, t.prototype.Ua = function(t, e, n) {\n        // No op.\n    }, t.prototype.Qa = function(t) {\n        // No op.\n    }, t.prototype.ko = function() {}, t.prototype.B = function(t) {}, t.prototype.Wa = function() {\n        // No op.\n    }, t;\n}(), Uo = /** @class */ function() {\n    function t() {}\n    return t.prototype.ou = function(t) {\n        // No-op.\n    }, t.prototype.ko = function() {\n        // No-op.\n    }, t;\n}(), Mo = /** @class */ function() {\n    function t() {\n        var t = this;\n        this.cu = function() {\n            return t.au();\n        }, this.uu = function() {\n            return t.hu();\n        }, this.lu = [], this._u();\n    }\n    return t.prototype.ou = function(t) {\n        this.lu.push(t);\n    }, t.prototype.ko = function() {\n        window.removeEventListener(\"online\", this.cu), window.removeEventListener(\"offline\", this.uu);\n    }, t.prototype._u = function() {\n        window.addEventListener(\"online\", this.cu), window.addEventListener(\"offline\", this.uu);\n    }, t.prototype.au = function() {\n        N(\"ConnectivityMonitor\", \"Network connectivity changed: AVAILABLE\");\n        for (var t = 0, e = this.lu; t < e.length; t++) {\n            (0, e[t])(0 /* AVAILABLE */);\n        }\n    }, t.prototype.hu = function() {\n        N(\"ConnectivityMonitor\", \"Network connectivity changed: UNAVAILABLE\");\n        for (var t = 0, e = this.lu; t < e.length; t++) {\n            (0, e[t])(1 /* UNAVAILABLE */);\n        }\n    }, \n    // TODO(chenbrian): Consider passing in window either into this component or\n    // here for testing via FakeWindow.\n    /** Checks that all used attributes of window are available. */\n    t.Kn = function() {\n        return \"undefined\" != typeof window && void 0 !== window.addEventListener && void 0 !== window.removeEventListener;\n    }, t;\n}(), qo = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\"\n}, Fo = /** @class */ function() {\n    function t(t) {\n        this.fu = t.fu, this.du = t.du;\n    }\n    return t.prototype.wu = function(t) {\n        this.Eu = t;\n    }, t.prototype.Tu = function(t) {\n        this.Iu = t;\n    }, t.prototype.onMessage = function(t) {\n        this.mu = t;\n    }, t.prototype.close = function() {\n        this.du();\n    }, t.prototype.send = function(t) {\n        this.fu(t);\n    }, t.prototype.Au = function() {\n        this.Eu();\n    }, t.prototype.Ru = function(t) {\n        this.Iu(t);\n    }, t.prototype.Pu = function(t) {\n        this.mu(t);\n    }, t;\n}(), jo = /** @class */ function(t) {\n    function e(e) {\n        var n = this;\n        return (n = t.call(this, e) || this).forceLongPolling = e.forceLongPolling, n.i = e.i, \n        n;\n    }\n    /**\n     * Base class for all Rest-based connections to the backend (WebChannel and\n     * HTTP).\n     */\n    return m(e, t), e.prototype.Su = function(t, e, n, r) {\n        return new Promise((function(i, o) {\n            var u = new c;\n            u.listenOnce(h.COMPLETE, (function() {\n                try {\n                    switch (u.getLastErrorCode()) {\n                      case f.NO_ERROR:\n                        var e = u.getResponseJson();\n                        N(\"Connection\", \"XHR received:\", JSON.stringify(e)), i(e);\n                        break;\n\n                      case f.TIMEOUT:\n                        N(\"Connection\", 'RPC \"' + t + '\" timed out'), o(new q(M.DEADLINE_EXCEEDED, \"Request time out\"));\n                        break;\n\n                      case f.HTTP_ERROR:\n                        var n = u.getStatus();\n                        if (N(\"Connection\", 'RPC \"' + t + '\" failed with status:', n, \"response text:\", u.getResponseText()), \n                        n > 0) {\n                            var r = u.getResponseJson().error;\n                            if (r && r.status && r.message) {\n                                var s = function(t) {\n                                    var e = t.toLowerCase().replace(/_/g, \"-\");\n                                    return Object.values(M).indexOf(e) >= 0 ? e : M.UNKNOWN;\n                                }(r.status);\n                                o(new q(s, r.message));\n                            } else o(new q(M.UNKNOWN, \"Server responded with status \" + u.getStatus()));\n                        } else \n                        // If we received an HTTP_ERROR but there's no status code,\n                        // it's most probably a connection issue\n                        o(new q(M.UNAVAILABLE, \"Connection failed.\"));\n                        break;\n\n                      default:\n                        x();\n                    }\n                } finally {\n                    N(\"Connection\", 'RPC \"' + t + '\" completed.');\n                }\n            }));\n            var s = JSON.stringify(r);\n            u.send(e, \"POST\", s, n, 15);\n        }));\n    }, e.prototype.Cu = function(t, e) {\n        var n = [ this.gu, \"/\", \"google.firestore.v1.Firestore\", \"/\", t, \"/channel\" ], c = l(), h = p(), f = {\n            // Required for backend stickiness, routing behavior is based on this\n            // parameter.\n            httpSessionIdParam: \"gsessionid\",\n            initMessageHeaders: {},\n            messageUrlParams: {\n                // This param is used to improve routing and project isolation by the\n                // backend and must be included in every request.\n                database: \"projects/\" + this.t.projectId + \"/databases/\" + this.t.database\n            },\n            sendRawJson: !0,\n            supportsCrossDomainXhr: !0,\n            internalChannelParams: {\n                // Override the default timeout (randomized between 10-20 seconds) since\n                // a large write batch on a slow internet connection may take a long\n                // time to send to the backend. Rather than have WebChannel impose a\n                // tight timeout which could lead to infinite timeouts and retries, we\n                // set it very large (5-10 minutes) and rely on the browser's builtin\n                // timeouts to kick in if the request isn't working.\n                forwardChannelRequestTimeoutMs: 6e5\n            },\n            forceLongPolling: this.forceLongPolling,\n            detectBufferingProxy: this.i\n        };\n        this.vu(f.initMessageHeaders, e), \n        // Sending the custom headers we just added to request.initMessageHeaders\n        // (Authorization, etc.) will trigger the browser to make a CORS preflight\n        // request because the XHR will no longer meet the criteria for a \"simple\"\n        // CORS request:\n        // https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Simple_requests\n        // Therefore to avoid the CORS preflight request (an extra network\n        // roundtrip), we use the httpHeadersOverwriteParam option to specify that\n        // the headers should instead be encoded into a special \"$httpHeaders\" query\n        // parameter, which is recognized by the webchannel backend. This is\n        // formally defined here:\n        // https://github.com/google/closure-library/blob/b0e1815b13fb92a46d7c9b3c30de5d6a396a3245/closure/goog/net/rpc/httpcors.js#L32\n        // TODO(b/145624756): There is a backend bug where $httpHeaders isn't respected if the request\n        // doesn't have an Origin header. So we have to exclude a few browser environments that are\n        // known to (sometimes) not include an Origin. See\n        // https://github.com/firebase/firebase-js-sdk/issues/1491.\n        r() || i() || o() || u() || s() || a() || (f.httpHeadersOverwriteParam = \"$httpHeaders\");\n        var m = n.join(\"\");\n        N(\"Connection\", \"Creating WebChannel: \" + m, f);\n        var g = c.createWebChannel(m, f), w = !1, b = !1, _ = new Fo({\n            fu: function(t) {\n                b ? N(\"Connection\", \"Not sending because WebChannel is closed:\", t) : (w || (N(\"Connection\", \"Opening WebChannel transport.\"), \n                g.open(), w = !0), N(\"Connection\", \"WebChannel sending:\", t), g.send(t));\n            },\n            du: function() {\n                return g.close();\n            }\n        }), I = function(t, e, n) {\n            // TODO(dimond): closure typing seems broken because WebChannel does\n            // not implement goog.events.Listenable\n            t.listen(e, (function(t) {\n                try {\n                    n(t);\n                } catch (t) {\n                    setTimeout((function() {\n                        throw t;\n                    }), 0);\n                }\n            }));\n        };\n        // WebChannel supports sending the first message with the handshake - saving\n        // a network round trip. However, it will have to call send in the same\n        // JS event loop as open. In order to enforce this, we delay actually\n        // opening the WebChannel until send is called. Whether we have called\n        // open is tracked with this variable.\n                // Closure events are guarded and exceptions are swallowed, so catch any\n        // exception and rethrow using a setTimeout so they become visible again.\n        // Note that eventually this function could go away if we are confident\n        // enough the code is exception free.\n        return I(g, d.EventType.OPEN, (function() {\n            b || N(\"Connection\", \"WebChannel transport opened.\");\n        })), I(g, d.EventType.CLOSE, (function() {\n            b || (b = !0, N(\"Connection\", \"WebChannel transport closed\"), _.Ru());\n        })), I(g, d.EventType.ERROR, (function(t) {\n            b || (b = !0, D(\"Connection\", \"WebChannel transport errored:\", t), _.Ru(new q(M.UNAVAILABLE, \"The operation could not be completed\")));\n        })), I(g, d.EventType.MESSAGE, (function(t) {\n            var e;\n            if (!b) {\n                var n = t.data[0];\n                k(!!n);\n                // TODO(b/35143891): There is a bug in One Platform that caused errors\n                // (and only errors) to be wrapped in an extra array. To be forward\n                // compatible with the bug we need to check either condition. The latter\n                // can be removed once the fix has been rolled out.\n                // Use any because msgData.error is not typed.\n                var r = n, i = r.error || (null === (e = r[0]) || void 0 === e ? void 0 : e.error);\n                if (i) {\n                    N(\"Connection\", \"WebChannel received error:\", i);\n                    // error.status will be a string like 'OK' or 'NOT_FOUND'.\n                    var o = i.status, u = \n                    /**\n * Maps an error Code from a GRPC status identifier like 'NOT_FOUND'.\n *\n * @returns The Code equivalent to the given status string or undefined if\n *     there is no match.\n */\n                    function(t) {\n                        // lookup by string\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        var e = We[t];\n                        if (void 0 !== e) return nn(e);\n                    }(o), s = i.message;\n                    void 0 === u && (u = M.INTERNAL, s = \"Unknown error status: \" + o + \" with message \" + i.message), \n                    // Mark closed so no further events are propagated\n                    b = !0, _.Ru(new q(u, s)), g.close();\n                } else N(\"Connection\", \"WebChannel received:\", n), _.Pu(n);\n            }\n        })), I(h, v.STAT_EVENT, (function(t) {\n            t.stat === y.PROXY ? N(\"Connection\", \"Detected buffering proxy\") : t.stat === y.NOPROXY && N(\"Connection\", \"Detected no buffering proxy\");\n        })), setTimeout((function() {\n            // Technically we could/should wait for the WebChannel opened event,\n            // but because we want to send the first message with the WebChannel\n            // handshake we pretend the channel opened here (asynchronously), and\n            // then delay the actual open until the first message is sent.\n            _.Au();\n        }), 0), _;\n    }, e;\n}(/** @class */ function() {\n    function t(t) {\n        this.yu = t, this.t = t.t;\n        var e = t.ssl ? \"https\" : \"http\";\n        this.gu = e + \"://\" + t.host, this.Vu = \"projects/\" + this.t.projectId + \"/databases/\" + this.t.database + \"/documents\";\n    }\n    return t.prototype.pu = function(t, e, n, r) {\n        var i = this.bu(t, e);\n        N(\"RestConnection\", \"Sending: \", i, n);\n        var o = {};\n        return this.vu(o, r), this.Su(t, i, o, n).then((function(t) {\n            return N(\"RestConnection\", \"Received: \", t), t;\n        }), (function(e) {\n            throw D(\"RestConnection\", t + \" failed with error: \", e, \"url: \", i, \"request:\", n), \n            e;\n        }));\n    }, t.prototype.Du = function(t, e, n, r) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.pu(t, e, n, r);\n    }, \n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */\n    t.prototype.vu = function(t, e) {\n        if (t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/8.2.7\", \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", e) for (var n in e.g) e.g.hasOwnProperty(n) && (t[n] = e.g[n]);\n    }, t.prototype.bu = function(t, e) {\n        var n = qo[t];\n        return this.gu + \"/v1/\" + e + \":\" + n;\n    }, t;\n}());\n\n/**\n * Holds the state of a query target, including its target ID and whether the\n * target is 'not-current', 'current' or 'rejected'.\n */\n// Visible for testing\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the WebChannelConnection for the browser. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'window' implementation or null if not available. */\nfunction zo() {\n    // `window` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof window ? window : null;\n}\n\n/** The Platform's 'document' implementation or null if not available. */ function Go() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function Bo(t) {\n    return new Cn(t, /* useProto3Json= */ !0);\n}\n\n/**\n * An instance of the Platform's 'TextEncoder' implementation.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */ var Qo = /** @class */ function() {\n    function t(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , i) {\n        void 0 === n && (n = 1e3), void 0 === r && (r = 1.5), void 0 === i && (i = 6e4), \n        this.Zr = t, this.fs = e, this.xu = n, this.Nu = r, this.$u = i, this.Fu = 0, this.Ou = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.ku = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    return t.prototype.reset = function() {\n        this.Fu = 0;\n    }, \n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */\n    t.prototype.Mu = function() {\n        this.Fu = this.$u;\n    }, \n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */\n    t.prototype.Lu = function(t) {\n        var e = this;\n        // Cancel any pending backoff operation.\n                this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        var n = Math.floor(this.Fu + this.Bu()), r = Math.max(0, Date.now() - this.ku), i = Math.max(0, n - r);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                i > 0 && N(\"ExponentialBackoff\", \"Backing off for \" + i + \" ms (base delay: \" + this.Fu + \" ms, delay with jitter: \" + n + \" ms, last attempt: \" + r + \" ms ago)\"), \n        this.Ou = this.Zr.Tr(this.fs, i, (function() {\n            return e.ku = Date.now(), t();\n        })), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.Fu *= this.Nu, this.Fu < this.xu && (this.Fu = this.xu), this.Fu > this.$u && (this.Fu = this.$u);\n    }, t.prototype.qu = function() {\n        null !== this.Ou && (this.Ou.Rs(), this.Ou = null);\n    }, t.prototype.cancel = function() {\n        null !== this.Ou && (this.Ou.cancel(), this.Ou = null);\n    }, \n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */ t.prototype.Bu = function() {\n        return (Math.random() - .5) * this.Fu;\n    }, t;\n}(), Yo = /** @class */ function() {\n    function t(t, e, n, r, i, o) {\n        this.Zr = t, this.Uu = n, this.Qu = r, this.Ku = i, this.listener = o, this.state = 0 /* Initial */ , \n        /**\n             * A close count that's incremented every time the stream is closed; used by\n             * getCloseGuardedDispatcher() to invalidate callbacks that happen after\n             * close.\n             */\n        this.Wu = 0, this.ju = null, this.stream = null, this.Gu = new Qo(t, e)\n        /**\n     * Returns true if start() has been called and no error has occurred. True\n     * indicates the stream is open or in the process of opening (which\n     * encompasses respecting backoff, getting auth tokens, and starting the\n     * actual RPC). Use isOpen() to determine if the stream is open and ready for\n     * outbound requests.\n     */;\n    }\n    return t.prototype.zu = function() {\n        return 1 /* Starting */ === this.state || 2 /* Open */ === this.state || 4 /* Backoff */ === this.state;\n    }, \n    /**\n     * Returns true if the underlying RPC is open (the onOpen() listener has been\n     * called) and the stream is ready for outbound requests.\n     */\n    t.prototype.Hu = function() {\n        return 2 /* Open */ === this.state;\n    }, \n    /**\n     * Starts the RPC. Only allowed if isStarted() returns false. The stream is\n     * not immediately ready for use: onOpen() will be invoked when the RPC is\n     * ready for outbound requests, at which point isOpen() will return true.\n     *\n     * When start returns, isStarted() will return true.\n     */\n    t.prototype.start = function() {\n        3 /* Error */ !== this.state ? this.auth() : this.Ju();\n    }, \n    /**\n     * Stops the RPC. This call is idempotent and allowed regardless of the\n     * current isStarted() state.\n     *\n     * When stop returns, isStarted() and isOpen() will both return false.\n     */\n    t.prototype.stop = function() {\n        return g(this, void 0, void 0, (function() {\n            return w(this, (function(t) {\n                switch (t.label) {\n                  case 0:\n                    return this.zu() ? [ 4 /*yield*/ , this.close(0 /* Initial */) ] : [ 3 /*break*/ , 2 ];\n\n                  case 1:\n                    t.sent(), t.label = 2;\n\n                  case 2:\n                    return [ 2 /*return*/ ];\n                }\n            }));\n        }));\n    }, \n    /**\n     * After an error the stream will usually back off on the next attempt to\n     * start it. If the error warrants an immediate restart of the stream, the\n     * sender can use this to indicate that the receiver should not back off.\n     *\n     * Each error will call the onClose() listener. That function can decide to\n     * inhibit backoff if required.\n     */\n    t.prototype.Yu = function() {\n        this.state = 0 /* Initial */ , this.Gu.reset();\n    }, \n    /**\n     * Marks this stream as idle. If no further actions are performed on the\n     * stream for one minute, the stream will automatically close itself and\n     * notify the stream's onClose() handler with Status.OK. The stream will then\n     * be in a !isStarted() state, requiring the caller to start the stream again\n     * before further use.\n     *\n     * Only streams that are in state 'Open' can be marked idle, as all other\n     * states imply pending network operations.\n     */\n    t.prototype.Xu = function() {\n        var t = this;\n        // Starts the idle time if we are in state 'Open' and are not yet already\n        // running a timer (in which case the previous idle timeout still applies).\n                this.Hu() && null === this.ju && (this.ju = this.Zr.Tr(this.Uu, 6e4, (function() {\n            return t.Zu();\n        })));\n    }, \n    /** Sends a message to the underlying stream. */ t.prototype.th = function(t) {\n        this.eh(), this.stream.send(t);\n    }, \n    /** Called by the idle timer when the stream should close due to inactivity. */ t.prototype.Zu = function() {\n        return g(this, void 0, void 0, (function() {\n            return w(this, (function(t) {\n                return this.Hu() ? [ 2 /*return*/ , this.close(0 /* Initial */) ] : [ 2 /*return*/ ];\n            }));\n        }));\n    }, \n    /** Marks the stream as active again. */ t.prototype.eh = function() {\n        this.ju && (this.ju.cancel(), this.ju = null);\n    }, \n    /**\n     * Closes the stream and cleans up as necessary:\n     *\n     * * closes the underlying GRPC stream;\n     * * calls the onClose handler with the given 'error';\n     * * sets internal stream state to 'finalState';\n     * * adjusts the backoff timer based on the error\n     *\n     * A new stream can be opened by calling start().\n     *\n     * @param finalState - the intended state of the stream after closing.\n     * @param error - the error the connection was closed with.\n     */\n    t.prototype.close = function(t, e) {\n        return g(this, void 0, void 0, (function() {\n            return w(this, (function(n) {\n                switch (n.label) {\n                  case 0:\n                    // Notify the listener that the stream closed.\n                    // Cancel any outstanding timers (they're guaranteed not to execute).\n                    return this.eh(), this.Gu.cancel(), \n                    // Invalidates any stream-related callbacks (e.g. from auth or the\n                    // underlying stream), guaranteeing they won't execute.\n                    this.Wu++, 3 /* Error */ !== t ? \n                    // If this is an intentional close ensure we don't delay our next connection attempt.\n                    this.Gu.reset() : e && e.code === M.RESOURCE_EXHAUSTED ? (\n                    // Log the error. (Probably either 'quota exceeded' or 'max queue length reached'.)\n                    A(e.toString()), A(\"Using maximum backoff delay to prevent overloading the backend.\"), \n                    this.Gu.Mu()) : e && e.code === M.UNAUTHENTICATED && \n                    // \"unauthenticated\" error means the token was rejected. Try force refreshing it in case it\n                    // just expired.\n                    this.Ku.p(), \n                    // Clean up the underlying stream because we are no longer interested in events.\n                    null !== this.stream && (this.nh(), this.stream.close(), this.stream = null), \n                    // This state must be assigned before calling onClose() to allow the callback to\n                    // inhibit backoff or otherwise manipulate the state in its non-started state.\n                    this.state = t, [ 4 /*yield*/ , this.listener.Tu(e) ];\n\n                  case 1:\n                    // Cancel any outstanding timers (they're guaranteed not to execute).\n                    // Notify the listener that the stream closed.\n                    return n.sent(), [ 2 /*return*/ ];\n                }\n            }));\n        }));\n    }, \n    /**\n     * Can be overridden to perform additional cleanup before the stream is closed.\n     * Calling super.tearDown() is not required.\n     */\n    t.prototype.nh = function() {}, t.prototype.auth = function() {\n        var t = this;\n        this.state = 1 /* Starting */;\n        var e = this.sh(this.Wu), n = this.Wu;\n        // TODO(mikelehen): Just use dispatchIfNotClosed, but see TODO below.\n                this.Ku.getToken().then((function(e) {\n            // Stream can be stopped while waiting for authentication.\n            // TODO(mikelehen): We really should just use dispatchIfNotClosed\n            // and let this dispatch onto the queue, but that opened a spec test can\n            // of worms that I don't want to deal with in this PR.\n            t.Wu === n && \n            // Normally we'd have to schedule the callback on the AsyncQueue.\n            // However, the following calls are safe to be called outside the\n            // AsyncQueue since they don't chain asynchronous calls\n            t.ih(e);\n        }), (function(n) {\n            e((function() {\n                var e = new q(M.UNKNOWN, \"Fetching auth token failed: \" + n.message);\n                return t.rh(e);\n            }));\n        }));\n    }, t.prototype.ih = function(t) {\n        var e = this, n = this.sh(this.Wu);\n        this.stream = this.oh(t), this.stream.wu((function() {\n            n((function() {\n                return e.state = 2 /* Open */ , e.listener.wu();\n            }));\n        })), this.stream.Tu((function(t) {\n            n((function() {\n                return e.rh(t);\n            }));\n        })), this.stream.onMessage((function(t) {\n            n((function() {\n                return e.onMessage(t);\n            }));\n        }));\n    }, t.prototype.Ju = function() {\n        var t = this;\n        this.state = 4 /* Backoff */ , this.Gu.Lu((function() {\n            return g(t, void 0, void 0, (function() {\n                return w(this, (function(t) {\n                    return this.state = 0 /* Initial */ , this.start(), [ 2 /*return*/ ];\n                }));\n            }));\n        }));\n    }, \n    // Visible for tests\n    t.prototype.rh = function(t) {\n        // In theory the stream could close cleanly, however, in our current model\n        // we never expect this to happen because if we stop a stream ourselves,\n        // this callback will never be called. To prevent cases where we retry\n        // without a backoff accidentally, we set the stream to error in all cases.\n        return N(\"PersistentStream\", \"close with error: \" + t), this.stream = null, this.close(3 /* Error */ , t);\n    }, \n    /**\n     * Returns a \"dispatcher\" function that dispatches operations onto the\n     * AsyncQueue but only runs them if closeCount remains unchanged. This allows\n     * us to turn auth / stream callbacks into no-ops if the stream is closed /\n     * re-opened, etc.\n     */\n    t.prototype.sh = function(t) {\n        var e = this;\n        return function(n) {\n            e.Zr.Ps((function() {\n                return e.Wu === t ? n() : (N(\"PersistentStream\", \"stream callback skipped by getCloseGuardedDispatcher.\"), \n                Promise.resolve());\n            }));\n        };\n    }, t;\n}(), Ho = /** @class */ function(t) {\n    function e(e, n, r, i, o) {\n        var u = this;\n        return (u = t.call(this, e, \"listen_stream_connection_backoff\" /* ListenStreamConnectionBackoff */ , \"listen_stream_idle\" /* ListenStreamIdle */ , n, r, o) || this).Qt = i, \n        u;\n    }\n    return m(e, t), e.prototype.oh = function(t) {\n        return this.Qu.Cu(\"Listen\", t);\n    }, e.prototype.onMessage = function(t) {\n        // A successful response means the stream is healthy\n        this.Gu.reset();\n        var e = function(t, e) {\n            var n;\n            if (\"targetChange\" in e) {\n                e.targetChange;\n                // proto3 default value is unset in JSON (undefined), so use 'NO_CHANGE'\n                // if unset\n                var r = function(t) {\n                    return \"NO_CHANGE\" === t ? 0 /* NoChange */ : \"ADD\" === t ? 1 /* Added */ : \"REMOVE\" === t ? 2 /* Removed */ : \"CURRENT\" === t ? 3 /* Current */ : \"RESET\" === t ? 4 /* Reset */ : x();\n                }(e.targetChange.targetChangeType || \"NO_CHANGE\"), i = e.targetChange.targetIds || [], o = function(t, e) {\n                    return t.Bt ? (k(void 0 === e || \"string\" == typeof e), U.fromBase64String(e || \"\")) : (k(void 0 === e || e instanceof Uint8Array), \n                    U.fromUint8Array(e || new Uint8Array));\n                }(t, e.targetChange.resumeToken), u = (s = e.targetChange.cause) && function(t) {\n                    var e = void 0 === t.code ? M.UNKNOWN : nn(t.code);\n                    return new q(e, t.message || \"\");\n                }(s);\n                n = new Dn(r, i, o, u || null);\n            } else if (\"documentChange\" in e) {\n                e.documentChange, (r = e.documentChange).document, r.document.name, r.document.updateTime, \n                i = zn(t, r.document.name), o = Mn(r.document.updateTime);\n                var s = new St({\n                    mapValue: {\n                        fields: r.document.fields\n                    }\n                }), a = (u = new Pt(i, o, s, {}), r.targetIds || []), c = r.removedTargetIds || [];\n                n = new Nn(a, c, u.key, u);\n            } else if (\"documentDelete\" in e) e.documentDelete, (r = e.documentDelete).document, \n            i = zn(t, r.document), o = r.readTime ? Mn(r.readTime) : X.min(), s = new Vt(i, o), \n            u = r.removedTargetIds || [], n = new Nn([], u, s.key, s); else if (\"documentRemove\" in e) e.documentRemove, \n            (r = e.documentRemove).document, i = zn(t, r.document), o = r.removedTargetIds || [], \n            n = new Nn([], o, i, null); else {\n                if (!(\"filter\" in e)) return x();\n                e.filter;\n                var h = e.filter;\n                h.targetId, r = h.count || 0, i = new tn(r), o = h.targetId, n = new An(o, i);\n            }\n            return n;\n        }(this.Qt, t), n = function(t) {\n            // We have only reached a consistent snapshot for the entire stream if there\n            // is a read_time set and it applies to all targets (i.e. the list of\n            // targets is empty). The backend is guaranteed to send such responses.\n            if (!(\"targetChange\" in t)) return X.min();\n            var e = t.targetChange;\n            return e.targetIds && e.targetIds.length ? X.min() : e.readTime ? Mn(e.readTime) : X.min();\n        }(t);\n        return this.listener.ah(e, n);\n    }, \n    /**\n     * Registers interest in the results of the given target. If the target\n     * includes a resumeToken it will be included in the request. Results that\n     * affect the target will be streamed back as WatchChange messages that\n     * reference the targetId.\n     */\n    e.prototype.uh = function(t) {\n        var e = {};\n        e.database = Qn(this.Qt), e.addTarget = function(t, e) {\n            var n, r = e.target;\n            return (n = qt(r) ? {\n                documents: Zn(t, r)\n            } : {\n                query: Jn(t, r)\n            }).targetId = e.targetId, e.resumeToken.l() > 0 ? n.resumeToken = Rn(t, e.resumeToken) : e.Ot._(X.min()) > 0 && (\n            // TODO(wuandy): Consider removing above check because it is most likely true.\n            // Right now, many tests depend on this behaviour though (leaving min() out\n            // of serialization).\n            n.readTime = Ln(t, e.Ot.j())), n;\n        }(this.Qt, t);\n        var n = function(t, e) {\n            var n = function(t, e) {\n                switch (e) {\n                  case 0 /* Listen */ :\n                    return null;\n\n                  case 1 /* ExistenceFilterMismatch */ :\n                    return \"existence-filter-mismatch\";\n\n                  case 2 /* LimboResolution */ :\n                    return \"limbo-document\";\n\n                  default:\n                    return x();\n                }\n            }(0, e.Ft);\n            return null == n ? null : {\n                \"goog-listen-tags\": n\n            };\n        }(this.Qt, t);\n        n && (e.labels = n), this.th(e);\n    }, \n    /**\n     * Unregisters interest in the results of the target associated with the\n     * given targetId.\n     */\n    e.prototype.hh = function(t) {\n        var e = {};\n        e.database = Qn(this.Qt), e.removeTarget = t, this.th(e);\n    }, e;\n}(Yo), Ko = /** @class */ function(t) {\n    function e(e, n, r, i, o) {\n        var u = this;\n        return (u = t.call(this, e, \"write_stream_connection_backoff\" /* WriteStreamConnectionBackoff */ , \"write_stream_idle\" /* WriteStreamIdle */ , n, r, o) || this).Qt = i, \n        u.lh = !1, u;\n    }\n    return m(e, t), Object.defineProperty(e.prototype, \"_h\", {\n        /**\n         * Tracks whether or not a handshake has been successfully exchanged and\n         * the stream is ready to accept mutations.\n         */\n        get: function() {\n            return this.lh;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), \n    // Override of PersistentStream.start\n    e.prototype.start = function() {\n        this.lh = !1, this.lastStreamToken = void 0, t.prototype.start.call(this);\n    }, e.prototype.nh = function() {\n        this.lh && this.fh([]);\n    }, e.prototype.oh = function(t) {\n        return this.Qu.Cu(\"Write\", t);\n    }, e.prototype.onMessage = function(t) {\n        if (\n        // Always capture the last stream token.\n        k(!!t.streamToken), this.lastStreamToken = t.streamToken, this.lh) {\n            // A successful first write response means the stream is healthy,\n            // Note, that we could consider a successful handshake healthy, however,\n            // the write itself might be causing an error we want to back off from.\n            this.Gu.reset();\n            var e = function(t, e) {\n                return t && t.length > 0 ? (k(void 0 !== e), t.map((function(t) {\n                    return function(t, e) {\n                        // NOTE: Deletes don't have an updateTime.\n                        var n = t.updateTime ? Mn(t.updateTime) : Mn(e);\n                        n.isEqual(X.min()) && (\n                        // The Firestore Emulator currently returns an update time of 0 for\n                        // deletes of non-existing documents (rather than null). This breaks the\n                        // test \"get deleted doc while offline with source=cache\" as NoDocuments\n                        // with version 0 are filtered by IndexedDb's RemoteDocumentCache.\n                        // TODO(#2149): Remove this when Emulator is fixed\n                        n = Mn(e));\n                        var r = null;\n                        return t.transformResults && t.transformResults.length > 0 && (r = t.transformResults), \n                        new Le(n, r);\n                    }(t, e);\n                }))) : [];\n            }(t.writeResults, t.commitTime), n = Mn(t.commitTime);\n            return this.listener.dh(n, e);\n        }\n        // The first response is always the handshake response\n                return k(!t.writeResults || 0 === t.writeResults.length), this.lh = !0, \n        this.listener.wh();\n    }, \n    /**\n     * Sends an initial streamToken to the server, performing the handshake\n     * required to make the StreamingWrite RPC work. Subsequent\n     * calls should wait until onHandshakeComplete was called.\n     */\n    e.prototype.Eh = function() {\n        // TODO(dimond): Support stream resumption. We intentionally do not set the\n        // stream token on the handshake, ignoring any stream token we might have.\n        var t = {};\n        t.database = Qn(this.Qt), this.th(t);\n    }, \n    /** Sends a group of mutations to the Firestore backend to apply. */ e.prototype.fh = function(t) {\n        var e = this, n = {\n            streamToken: this.lastStreamToken,\n            writes: t.map((function(t) {\n                return Xn(e.Qt, t);\n            }))\n        };\n        this.th(n);\n    }, e;\n}(Yo), Xo = /** @class */ function(t) {\n    function e(e, n, r) {\n        var i = this;\n        return (i = t.call(this) || this).credentials = e, i.Qu = n, i.Qt = r, i.Th = !1, \n        i;\n    }\n    return m(e, t), e.prototype.Ih = function() {\n        if (this.Th) throw new q(M.FAILED_PRECONDITION, \"The client has already been terminated.\");\n    }, \n    /** Gets an auth token and invokes the provided RPC. */ e.prototype.pu = function(t, e, n) {\n        var r = this;\n        return this.Ih(), this.credentials.getToken().then((function(i) {\n            return r.Qu.pu(t, e, n, i);\n        })).catch((function(t) {\n            throw t.code === M.UNAUTHENTICATED && r.credentials.p(), t;\n        }));\n    }, \n    /** Gets an auth token and invokes the provided RPC with streamed results. */ e.prototype.Du = function(t, e, n) {\n        var r = this;\n        return this.Ih(), this.credentials.getToken().then((function(i) {\n            return r.Qu.Du(t, e, n, i);\n        })).catch((function(t) {\n            throw t.code === M.UNAUTHENTICATED && r.credentials.p(), t;\n        }));\n    }, e.prototype.terminate = function() {\n        this.Th = !1;\n    }, e;\n}((function() {})), Wo = /** @class */ function() {\n    function t(t, e) {\n        this._s = t, this.fa = e, \n        /** The current OnlineState. */\n        this.state = \"Unknown\" /* Unknown */ , \n        /**\n             * A count of consecutive failures to open the stream. If it reaches the\n             * maximum defined by MAX_WATCH_STREAM_FAILURES, we'll set the OnlineState to\n             * Offline.\n             */\n        this.mh = 0, \n        /**\n             * A timer that elapses after ONLINE_STATE_TIMEOUT_MS, at which point we\n             * transition from OnlineState.Unknown to OnlineState.Offline without waiting\n             * for the stream to actually fail (MAX_WATCH_STREAM_FAILURES times).\n             */\n        this.Ah = null, \n        /**\n             * Whether the client should log a warning message if it fails to connect to\n             * the backend (initially true, cleared after a successful stream, or if we've\n             * logged the message already).\n             */\n        this.Rh = !0\n        /**\n     * Called by RemoteStore when a watch stream is started (including on each\n     * backoff attempt).\n     *\n     * If this is the first attempt, it sets the OnlineState to Unknown and starts\n     * the onlineStateTimer.\n     */;\n    }\n    return t.prototype.Ph = function() {\n        var t = this;\n        0 === this.mh && (this.yh(\"Unknown\" /* Unknown */), this.Ah = this._s.Tr(\"online_state_timeout\" /* OnlineStateTimeout */ , 1e4, (function() {\n            return t.Ah = null, t.gh(\"Backend didn't respond within 10 seconds.\"), t.yh(\"Offline\" /* Offline */), \n            Promise.resolve();\n        })));\n    }, \n    /**\n     * Updates our OnlineState as appropriate after the watch stream reports a\n     * failure. The first failure moves us to the 'Unknown' state. We then may\n     * allow multiple failures (based on MAX_WATCH_STREAM_FAILURES) before we\n     * actually transition to the 'Offline' state.\n     */\n    t.prototype.Vh = function(t) {\n        \"Online\" /* Online */ === this.state ? this.yh(\"Unknown\" /* Unknown */) : (this.mh++, \n        this.mh >= 1 && (this.ph(), this.gh(\"Connection failed 1 times. Most recent error: \" + t.toString()), \n        this.yh(\"Offline\" /* Offline */)));\n    }, \n    /**\n     * Explicitly sets the OnlineState to the specified state.\n     *\n     * Note that this resets our timers / failure counters, etc. used by our\n     * Offline heuristics, so must not be used in place of\n     * handleWatchStreamStart() and handleWatchStreamFailure().\n     */\n    t.prototype.set = function(t) {\n        this.ph(), this.mh = 0, \"Online\" /* Online */ === t && (\n        // We've connected to watch at least once. Don't warn the developer\n        // about being offline going forward.\n        this.Rh = !1), this.yh(t);\n    }, t.prototype.yh = function(t) {\n        t !== this.state && (this.state = t, this.fa(t));\n    }, t.prototype.gh = function(t) {\n        var e = \"Could not reach Cloud Firestore backend. \" + t + \"\\nThis typically indicates that your device does not have a healthy Internet connection at the moment. The client will operate in offline mode until it is able to successfully connect to the backend.\";\n        this.Rh ? (A(e), this.Rh = !1) : N(\"OnlineStateTracker\", e);\n    }, t.prototype.ph = function() {\n        null !== this.Ah && (this.Ah.cancel(), this.Ah = null);\n    }, t;\n}(), Zo = function(\n/**\n     * The local store, used to fill the write pipeline with outbound mutations.\n     */\nt, \n/** The client-side proxy for interacting with the backend. */\ne, n, r, i) {\n    var o = this;\n    this.bh = t, this.Sh = e, this._s = n, this.Dh = {}, \n    /**\n             * A list of up to MAX_PENDING_WRITES writes that we have fetched from the\n             * LocalStore via fillWritePipeline() and have or will send to the write\n             * stream.\n             *\n             * Whenever writePipeline.length > 0 the RemoteStore will attempt to start or\n             * restart the write stream. When the stream is established the writes in the\n             * pipeline will be sent in order.\n             *\n             * Writes remain in writePipeline until they are acknowledged by the backend\n             * and thus will automatically be re-sent if the stream is interrupted /\n             * restarted before they're acknowledged.\n             *\n             * Write responses from the backend are linked to their originating request\n             * purely based on order, and so we can just shift() writes from the front of\n             * the writePipeline as we receive responses.\n             */\n    this.Ch = [], \n    /**\n             * A mapping of watched targets that the client cares about tracking and the\n             * user has explicitly called a 'listen' for this target.\n             *\n             * These targets may or may not have been sent to or acknowledged by the\n             * server. On re-establishing the listen stream, these targets should be sent\n             * to the server. The targets removed with unlistens are removed eagerly\n             * without waiting for confirmation from the listen stream.\n             */\n    this.xh = new Map, \n    /**\n             * A set of reasons for why the RemoteStore may be offline. If empty, the\n             * RemoteStore may start its network connections.\n             */\n    this.Nh = new Set, \n    /**\n             * Event handlers that get called when the network is disabled or enabled.\n             *\n             * PORTING NOTE: These functions are used on the Web client to create the\n             * underlying streams (to support tree-shakeable streams). On Android and iOS,\n             * the streams are created during construction of RemoteStore.\n             */\n    this.$h = [], this.Fh = i, this.Fh.ou((function(t) {\n        n.Ps((function() {\n            return g(o, void 0, void 0, (function() {\n                return w(this, (function(t) {\n                    switch (t.label) {\n                      case 0:\n                        return uu(this) ? (N(\"RemoteStore\", \"Restarting streams for network reachability change.\"), \n                        [ 4 /*yield*/ , function(t) {\n                            return g(this, void 0, void 0, (function() {\n                                var e;\n                                return w(this, (function(n) {\n                                    switch (n.label) {\n                                      case 0:\n                                        return (e = O(t)).Nh.add(4 /* ConnectivityChange */), [ 4 /*yield*/ , $o(e) ];\n\n                                      case 1:\n                                        return n.sent(), e.Oh.set(\"Unknown\" /* Unknown */), e.Nh.delete(4 /* ConnectivityChange */), \n                                        [ 4 /*yield*/ , Jo(e) ];\n\n                                      case 2:\n                                        return n.sent(), [ 2 /*return*/ ];\n                                    }\n                                }));\n                            }));\n                        }(this) ]) : [ 3 /*break*/ , 2 ];\n\n                      case 1:\n                        t.sent(), t.label = 2;\n\n                      case 2:\n                        return [ 2 /*return*/ ];\n                    }\n                }));\n            }));\n        }));\n    })), this.Oh = new Wo(n, r);\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A PersistentStream is an abstract base class that represents a streaming RPC\n * to the Firestore backend. It's built on top of the connections own support\n * for streaming RPCs, and adds several critical features for our clients:\n *\n *   - Exponential backoff on failure\n *   - Authentication via CredentialsProvider\n *   - Dispatching all callbacks into the shared worker queue\n *   - Closing idle streams after 60 seconds of inactivity\n *\n * Subclasses of PersistentStream implement serialization of models to and\n * from the JSON representation of the protocol buffers for a specific\n * streaming RPC.\n *\n * ## Starting and Stopping\n *\n * Streaming RPCs are stateful and need to be start()ed before messages can\n * be sent and received. The PersistentStream will call the onOpen() function\n * of the listener once the stream is ready to accept requests.\n *\n * Should a start() fail, PersistentStream will call the registered onClose()\n * listener with a FirestoreError indicating what went wrong.\n *\n * A PersistentStream can be started and stopped repeatedly.\n *\n * Generic types:\n *  SendType: The type of the outgoing message of the underlying\n *    connection stream\n *  ReceiveType: The type of the incoming message of the underlying\n *    connection stream\n *  ListenerType: The type of the listener that will be used for callbacks\n */ function Jo(t) {\n    return g(this, void 0, void 0, (function() {\n        var e, n;\n        return w(this, (function(r) {\n            switch (r.label) {\n              case 0:\n                if (!uu(t)) return [ 3 /*break*/ , 4 ];\n                e = 0, n = t.$h, r.label = 1;\n\n              case 1:\n                return e < n.length ? [ 4 /*yield*/ , (0, n[e])(/* enabled= */ !0) ] : [ 3 /*break*/ , 4 ];\n\n              case 2:\n                r.sent(), r.label = 3;\n\n              case 3:\n                return e++, [ 3 /*break*/ , 1 ];\n\n              case 4:\n                return [ 2 /*return*/ ];\n            }\n        }));\n    }));\n}\n\n/**\n * Temporarily disables the network. The network can be re-enabled using\n * enableNetwork().\n */ function $o(t) {\n    return g(this, void 0, void 0, (function() {\n        var e, n;\n        return w(this, (function(r) {\n            switch (r.label) {\n              case 0:\n                e = 0, n = t.$h, r.label = 1;\n\n              case 1:\n                return e < n.length ? [ 4 /*yield*/ , (0, n[e])(/* enabled= */ !1) ] : [ 3 /*break*/ , 4 ];\n\n              case 2:\n                r.sent(), r.label = 3;\n\n              case 3:\n                return e++, [ 3 /*break*/ , 1 ];\n\n              case 4:\n                return [ 2 /*return*/ ];\n            }\n        }));\n    }));\n}\n\n/**\n * Starts new listen for the given target. Uses resume token if provided. It\n * is a no-op if the target of given `TargetData` is already being listened to.\n */ function tu(t, e) {\n    var n = O(t);\n    n.xh.has(e.targetId) || (\n    // Mark this as something the client is currently listening for.\n    n.xh.set(e.targetId, e), ou(n) ? \n    // The listen will be sent in onWatchStreamOpen\n    iu(n) : _u(n).Hu() && nu(n, e));\n}\n\n/**\n * Removes the listen from server. It is a no-op if the given target id is\n * not being listened to.\n */ function eu(t, e) {\n    var n = O(t), r = _u(n);\n    n.xh.delete(e), r.Hu() && ru(n, e), 0 === n.xh.size && (r.Hu() ? r.Xu() : uu(n) && \n    // Revert to OnlineState.Unknown if the watch stream is not open and we\n    // have no listeners, since without any listens to send we cannot\n    // confirm if the stream is healthy and upgrade to OnlineState.Online.\n    n.Oh.set(\"Unknown\" /* Unknown */));\n}\n\n/**\n * We need to increment the the expected number of pending responses we're due\n * from watch so we wait for the ack to process any messages from this target.\n */ function nu(t, e) {\n    t.kh.on(e.targetId), _u(t).uh(e)\n    /**\n * We need to increment the expected number of pending responses we're due\n * from watch so we wait for the removal on the server before we process any\n * messages from this target.\n */;\n}\n\nfunction ru(t, e) {\n    t.kh.on(e), _u(t).hh(e);\n}\n\nfunction iu(t) {\n    t.kh = new xn({\n        vn: function(e) {\n            return t.Dh.vn(e);\n        },\n        Sn: function(e) {\n            return t.xh.get(e) || null;\n        }\n    }), _u(t).start(), t.Oh.Ph()\n    /**\n * Returns whether the watch stream should be started because it's necessary\n * and has not yet been started.\n */;\n}\n\nfunction ou(t) {\n    return uu(t) && !_u(t).zu() && t.xh.size > 0;\n}\n\nfunction uu(t) {\n    return 0 === O(t).Nh.size;\n}\n\nfunction su(t) {\n    t.kh = void 0;\n}\n\nfunction au(t) {\n    return g(this, void 0, void 0, (function() {\n        return w(this, (function(e) {\n            return t.xh.forEach((function(e, n) {\n                nu(t, e);\n            })), [ 2 /*return*/ ];\n        }));\n    }));\n}\n\nfunction cu(t, e) {\n    return g(this, void 0, void 0, (function() {\n        return w(this, (function(n) {\n            return su(t), \n            // If we still need the watch stream, retry the connection.\n            ou(t) ? (t.Oh.Vh(e), iu(t)) : \n            // No need to restart watch stream because there are no active targets.\n            // The online state is set to unknown because there is no active attempt\n            // at establishing a connection\n            t.Oh.set(\"Unknown\" /* Unknown */), [ 2 /*return*/ ];\n        }));\n    }));\n}\n\nfunction hu(t, e, n) {\n    return g(this, void 0, void 0, (function() {\n        var r, i, o;\n        return w(this, (function(u) {\n            switch (u.label) {\n              case 0:\n                if (t.Oh.set(\"Online\" /* Online */), !(e instanceof Dn && 2 /* Removed */ === e.state && e.cause)) \n                // Mark the client as online since we got a message from the server\n                return [ 3 /*break*/ , 6 ];\n                u.label = 1;\n\n              case 1:\n                return u.trys.push([ 1, 3, , 5 ]), [ 4 /*yield*/ , \n                /** Handles an error on a target */\n                function(t, e) {\n                    return g(this, void 0, void 0, (function() {\n                        var n, r, i, o;\n                        return w(this, (function(u) {\n                            switch (u.label) {\n                              case 0:\n                                n = e.cause, r = 0, i = e.targetIds, u.label = 1;\n\n                              case 1:\n                                return r < i.length ? (o = i[r], t.xh.has(o) ? [ 4 /*yield*/ , t.Dh.Mh(o, n) ] : [ 3 /*break*/ , 3 ]) : [ 3 /*break*/ , 5 ];\n\n                              case 2:\n                                u.sent(), t.xh.delete(o), t.kh.removeTarget(o), u.label = 3;\n\n                              case 3:\n                                u.label = 4;\n\n                              case 4:\n                                return r++, [ 3 /*break*/ , 1 ];\n\n                              case 5:\n                                return [ 2 /*return*/ ];\n                            }\n                        }));\n                    }));\n                }(t, e) ];\n\n              case 2:\n                return u.sent(), [ 3 /*break*/ , 5 ];\n\n              case 3:\n                return r = u.sent(), N(\"RemoteStore\", \"Failed to remove targets %s: %s \", e.targetIds.join(\",\"), r), \n                [ 4 /*yield*/ , fu(t, r) ];\n\n              case 4:\n                return u.sent(), [ 3 /*break*/ , 5 ];\n\n              case 5:\n                return [ 3 /*break*/ , 13 ];\n\n              case 6:\n                if (e instanceof Nn ? t.kh.dn(e) : e instanceof An ? t.kh.Pn(e) : t.kh.Tn(e), n.isEqual(X.min())) return [ 3 /*break*/ , 13 ];\n                u.label = 7;\n\n              case 7:\n                return u.trys.push([ 7, 11, , 13 ]), [ 4 /*yield*/ , io(t.bh) ];\n\n              case 8:\n                return i = u.sent(), n._(i) >= 0 ? [ 4 /*yield*/ , \n                /**\n                 * Takes a batch of changes from the Datastore, repackages them as a\n                 * RemoteEvent, and passes that on to the listener, which is typically the\n                 * SyncEngine.\n                 */\n                function(t, e) {\n                    var n = t.kh.Vn(e);\n                    // Update in-memory resume tokens. LocalStore will update the\n                    // persistent view of these when applying the completed RemoteEvent.\n                                        return n.$e.forEach((function(n, r) {\n                        if (n.resumeToken.l() > 0) {\n                            var i = t.xh.get(r);\n                            // A watched target might have been removed already.\n                                                        i && t.xh.set(r, i.Mt(n.resumeToken, e));\n                        }\n                    })), \n                    // Re-establish listens for the targets that have been invalidated by\n                    // existence filter mismatches.\n                    n.Fe.forEach((function(e) {\n                        var n = t.xh.get(e);\n                        if (n) {\n                            // Clear the resume token for the target, since we're in a known mismatch\n                            // state.\n                            t.xh.set(e, n.Mt(U.T, n.Ot)), \n                            // Cause a hard reset by unwatching and rewatching immediately, but\n                            // deliberately don't send a resume token so that we get a full update.\n                            ru(t, e);\n                            // Mark the target we send as being on behalf of an existence filter\n                            // mismatch, but don't actually retain that in listenTargets. This ensures\n                            // that we flag the first re-listen this way without impacting future\n                            // listens of this target (that might happen e.g. on reconnect).\n                            var r = new ge(n.target, e, 1 /* ExistenceFilterMismatch */ , n.sequenceNumber);\n                            nu(t, r);\n                        }\n                    })), t.Dh.Lh(n);\n                }(t, n) ] : [ 3 /*break*/ , 10 ];\n\n                // We have received a target change with a global snapshot if the snapshot\n                // version is not equal to SnapshotVersion.min().\n                              case 9:\n                // We have received a target change with a global snapshot if the snapshot\n                // version is not equal to SnapshotVersion.min().\n                u.sent(), u.label = 10;\n\n              case 10:\n                return [ 3 /*break*/ , 13 ];\n\n              case 11:\n                return N(\"RemoteStore\", \"Failed to raise snapshot:\", o = u.sent()), [ 4 /*yield*/ , fu(t, o) ];\n\n              case 12:\n                return u.sent(), [ 3 /*break*/ , 13 ];\n\n              case 13:\n                return [ 2 /*return*/ ];\n            }\n        }));\n    }));\n}\n\n/**\n * Recovery logic for IndexedDB errors that takes the network offline until\n * `op` succeeds. Retries are scheduled with backoff using\n * `enqueueRetryable()`. If `op()` is not provided, IndexedDB access is\n * validated via a generic operation.\n *\n * The returned Promise is resolved once the network is disabled and before\n * any retry attempt.\n */ function fu(t, e, n) {\n    return g(this, void 0, void 0, (function() {\n        var r = this;\n        return w(this, (function(i) {\n            switch (i.label) {\n              case 0:\n                if (!mr(e)) throw e;\n                // Disable network and raise offline snapshots\n                return t.Nh.add(1 /* IndexedDbFailed */), [ 4 /*yield*/ , $o(t) ];\n\n              case 1:\n                // Disable network and raise offline snapshots\n                return i.sent(), t.Oh.set(\"Offline\" /* Offline */), n || (\n                // Use a simple read operation to determine if IndexedDB recovered.\n                // Ideally, we would expose a health check directly on SimpleDb, but\n                // RemoteStore only has access to persistence through LocalStore.\n                n = function() {\n                    return io(t.bh);\n                }), \n                // Probe IndexedDB periodically and re-enable network\n                t._s.po((function() {\n                    return g(r, void 0, void 0, (function() {\n                        return w(this, (function(e) {\n                            switch (e.label) {\n                              case 0:\n                                return N(\"RemoteStore\", \"Retrying IndexedDB access\"), [ 4 /*yield*/ , n() ];\n\n                              case 1:\n                                return e.sent(), t.Nh.delete(1 /* IndexedDbFailed */), [ 4 /*yield*/ , Jo(t) ];\n\n                              case 2:\n                                return e.sent(), [ 2 /*return*/ ];\n                            }\n                        }));\n                    }));\n                })), [ 2 /*return*/ ];\n            }\n        }));\n    }));\n}\n\n/**\n * Executes `op`. If `op` fails, takes the network offline until `op`\n * succeeds. Returns after the first attempt.\n */ function lu(t, e) {\n    return e().catch((function(n) {\n        return fu(t, n, e);\n    }));\n}\n\nfunction pu(t) {\n    return g(this, void 0, void 0, (function() {\n        var e, n, r, i, o;\n        return w(this, (function(u) {\n            switch (u.label) {\n              case 0:\n                e = O(t), n = Iu(e), r = e.Ch.length > 0 ? e.Ch[e.Ch.length - 1].batchId : -1, u.label = 1;\n\n              case 1:\n                if (!\n                /**\n * Returns true if we can add to the write pipeline (i.e. the network is\n * enabled and the write pipeline is not full).\n */\n                function(t) {\n                    return uu(t) && t.Ch.length < 10;\n                }\n                /**\n * Queues additional writes to be sent to the write stream, sending them\n * immediately if the write stream is established.\n */ (e)) return [ 3 /*break*/ , 7 ];\n                u.label = 2;\n\n              case 2:\n                return u.trys.push([ 2, 4, , 6 ]), [ 4 /*yield*/ , so(e.bh, r) ];\n\n              case 3:\n                return null === (i = u.sent()) ? (0 === e.Ch.length && n.Xu(), [ 3 /*break*/ , 7 ]) : (r = i.batchId, \n                function(t, e) {\n                    t.Ch.push(e);\n                    var n = Iu(t);\n                    n.Hu() && n._h && n.fh(e.mutations);\n                }(e, i), [ 3 /*break*/ , 6 ]);\n\n              case 4:\n                return o = u.sent(), [ 4 /*yield*/ , fu(e, o) ];\n\n              case 5:\n                return u.sent(), [ 3 /*break*/ , 6 ];\n\n              case 6:\n                return [ 3 /*break*/ , 1 ];\n\n              case 7:\n                return du(e) && vu(e), [ 2 /*return*/ ];\n            }\n        }));\n    }));\n}\n\nfunction du(t) {\n    return uu(t) && !Iu(t).zu() && t.Ch.length > 0;\n}\n\nfunction vu(t) {\n    Iu(t).start();\n}\n\nfunction yu(t) {\n    return g(this, void 0, void 0, (function() {\n        return w(this, (function(e) {\n            return Iu(t).Eh(), [ 2 /*return*/ ];\n        }));\n    }));\n}\n\nfunction mu(t) {\n    return g(this, void 0, void 0, (function() {\n        var e, n, r, i;\n        return w(this, (function(o) {\n            // Send the write pipeline now that the stream is established.\n            for (e = Iu(t), n = 0, r = t.Ch; n < r.length; n++) i = r[n], e.fh(i.mutations);\n            return [ 2 /*return*/ ];\n        }));\n    }));\n}\n\nfunction gu(t, e, n) {\n    return g(this, void 0, void 0, (function() {\n        var r, i;\n        return w(this, (function(o) {\n            switch (o.label) {\n              case 0:\n                return r = t.Ch.shift(), i = Wr.from(r, e, n), [ 4 /*yield*/ , lu(t, (function() {\n                    return t.Dh.Bh(i);\n                })) ];\n\n              case 1:\n                // It's possible that with the completion of this mutation another\n                // slot has freed up.\n                return o.sent(), [ 4 /*yield*/ , pu(t) ];\n\n              case 2:\n                // It's possible that with the completion of this mutation another\n                // slot has freed up.\n                return o.sent(), [ 2 /*return*/ ];\n            }\n        }));\n    }));\n}\n\nfunction wu(t, e) {\n    return g(this, void 0, void 0, (function() {\n        return w(this, (function(n) {\n            switch (n.label) {\n              case 0:\n                return e && Iu(t)._h ? [ 4 /*yield*/ , function(t, e) {\n                    return g(this, void 0, void 0, (function() {\n                        var n, r;\n                        return w(this, (function(i) {\n                            switch (i.label) {\n                              case 0:\n                                return en(r = e.code) && r !== M.ABORTED ? (n = t.Ch.shift(), \n                                // In this case it's also unlikely that the server itself is melting\n                                // down -- this was just a bad request so inhibit backoff on the next\n                                // restart.\n                                Iu(t).Yu(), [ 4 /*yield*/ , lu(t, (function() {\n                                    return t.Dh.qh(n.batchId, e);\n                                })) ]) : [ 3 /*break*/ , 3 ];\n\n                              case 1:\n                                // It's possible that with the completion of this mutation\n                                // another slot has freed up.\n                                return i.sent(), [ 4 /*yield*/ , pu(t) ];\n\n                              case 2:\n                                // In this case it's also unlikely that the server itself is melting\n                                // down -- this was just a bad request so inhibit backoff on the next\n                                // restart.\n                                // It's possible that with the completion of this mutation\n                                // another slot has freed up.\n                                i.sent(), i.label = 3;\n\n                              case 3:\n                                return [ 2 /*return*/ ];\n                            }\n                        }));\n                    }));\n                }(t, e) ] : [ 3 /*break*/ , 2 ];\n\n                // This error affects the actual write.\n                              case 1:\n                // This error affects the actual write.\n                n.sent(), n.label = 2;\n\n              case 2:\n                // If the write stream closed after the write handshake completes, a write\n                // operation failed and we fail the pending operation.\n                // The write stream might have been started by refilling the write\n                // pipeline for failed writes\n                return du(t) && vu(t), [ 2 /*return*/ ];\n            }\n        }));\n    }));\n}\n\n/**\n * Toggles the network state when the client gains or loses its primary lease.\n */ function bu(t, e) {\n    return g(this, void 0, void 0, (function() {\n        var n, r;\n        return w(this, (function(i) {\n            switch (i.label) {\n              case 0:\n                return n = O(t), e ? (n.Nh.delete(2 /* IsSecondary */), [ 4 /*yield*/ , Jo(n) ]) : [ 3 /*break*/ , 2 ];\n\n              case 1:\n                return i.sent(), [ 3 /*break*/ , 5 ];\n\n              case 2:\n                return (r = e) ? [ 3 /*break*/ , 4 ] : (n.Nh.add(2 /* IsSecondary */), [ 4 /*yield*/ , $o(n) ]);\n\n              case 3:\n                i.sent(), r = n.Oh.set(\"Unknown\" /* Unknown */), i.label = 4;\n\n              case 4:\n                r, i.label = 5;\n\n              case 5:\n                return [ 2 /*return*/ ];\n            }\n        }));\n    }));\n}\n\n/**\n * If not yet initialized, registers the WatchStream and its network state\n * callback with `remoteStoreImpl`. Returns the existing stream if one is\n * already available.\n *\n * PORTING NOTE: On iOS and Android, the WatchStream gets registered on startup.\n * This is not done on Web to allow it to be tree-shaken.\n */ function _u(t) {\n    var e = this;\n    return t.Uh || (\n    // Create stream (but note that it is not started yet).\n    t.Uh = function(t, e, n) {\n        var r = O(t);\n        return r.Ih(), new Ho(e, r.Qu, r.credentials, r.Qt, n);\n    }(t.Sh, t._s, {\n        wu: au.bind(null, t),\n        Tu: cu.bind(null, t),\n        ah: hu.bind(null, t)\n    }), t.$h.push((function(n) {\n        return g(e, void 0, void 0, (function() {\n            return w(this, (function(e) {\n                switch (e.label) {\n                  case 0:\n                    return n ? (t.Uh.Yu(), ou(t) ? iu(t) : t.Oh.set(\"Unknown\" /* Unknown */), [ 3 /*break*/ , 3 ]) : [ 3 /*break*/ , 1 ];\n\n                  case 1:\n                    return [ 4 /*yield*/ , t.Uh.stop() ];\n\n                  case 2:\n                    e.sent(), su(t), e.label = 3;\n\n                  case 3:\n                    return [ 2 /*return*/ ];\n                }\n            }));\n        }));\n    }))), t.Uh\n    /**\n * If not yet initialized, registers the WriteStream and its network state\n * callback with `remoteStoreImpl`. Returns the existing stream if one is\n * already available.\n *\n * PORTING NOTE: On iOS and Android, the WriteStream gets registered on startup.\n * This is not done on Web to allow it to be tree-shaken.\n */;\n}\n\nfunction Iu(t) {\n    var e = this;\n    return t.Qh || (\n    // Create stream (but note that it is not started yet).\n    t.Qh = function(t, e, n) {\n        var r = O(t);\n        return r.Ih(), new Ko(e, r.Qu, r.credentials, r.Qt, n);\n    }(t.Sh, t._s, {\n        wu: yu.bind(null, t),\n        Tu: wu.bind(null, t),\n        wh: mu.bind(null, t),\n        dh: gu.bind(null, t)\n    }), t.$h.push((function(n) {\n        return g(e, void 0, void 0, (function() {\n            return w(this, (function(e) {\n                switch (e.label) {\n                  case 0:\n                    return n ? (t.Qh.Yu(), [ 4 /*yield*/ , pu(t) ]) : [ 3 /*break*/ , 2 ];\n\n                  case 1:\n                    // This will start the write stream if necessary.\n                    return e.sent(), [ 3 /*break*/ , 4 ];\n\n                  case 2:\n                    return [ 4 /*yield*/ , t.Qh.stop() ];\n\n                  case 3:\n                    e.sent(), t.Ch.length > 0 && (N(\"RemoteStore\", \"Stopping write stream with \" + t.Ch.length + \" pending writes\"), \n                    t.Ch = []), e.label = 4;\n\n                  case 4:\n                    return [ 2 /*return*/ ];\n                }\n            }));\n        }));\n    }))), t.Qh\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Holds the listeners and the last received ViewSnapshot for a query being\n * tracked by EventManager.\n */;\n}\n\nvar Eu = function() {\n    this.Kh = void 0, this.listeners = [];\n}, Tu = function() {\n    this.queries = new gi((function(t) {\n        return pe(t);\n    }), le), this.onlineState = \"Unknown\" /* Unknown */ , this.Wh = new Set;\n};\n\nfunction Nu(t, e) {\n    return g(this, void 0, void 0, (function() {\n        var n, r, i, o, u, s, a;\n        return w(this, (function(c) {\n            switch (c.label) {\n              case 0:\n                if (n = O(t), r = e.query, i = !1, (o = n.queries.get(r)) || (i = !0, o = new Eu), \n                !i) return [ 3 /*break*/ , 4 ];\n                c.label = 1;\n\n              case 1:\n                return c.trys.push([ 1, 3, , 4 ]), u = o, [ 4 /*yield*/ , n.jh(r) ];\n\n              case 2:\n                return u.Kh = c.sent(), [ 3 /*break*/ , 4 ];\n\n              case 3:\n                return s = c.sent(), a = Er(s, \"Initialization of query '\" + de(e.query) + \"' failed\"), \n                [ 2 /*return*/ , void e.onError(a) ];\n\n              case 4:\n                return n.queries.set(r, o), o.listeners.push(e), \n                // Run global snapshot listeners if a consistent snapshot has been emitted.\n                e.Gh(n.onlineState), o.Kh && e.zh(o.Kh) && xu(n), [ 2 /*return*/ ];\n            }\n        }));\n    }));\n}\n\nfunction Au(t, e) {\n    return g(this, void 0, void 0, (function() {\n        var n, r, i, o, u;\n        return w(this, (function(s) {\n            return n = O(t), r = e.query, i = !1, (o = n.queries.get(r)) && (u = o.listeners.indexOf(e)) >= 0 && (o.listeners.splice(u, 1), \n            i = 0 === o.listeners.length), i ? [ 2 /*return*/ , (n.queries.delete(r), n.Hh(r)) ] : [ 2 /*return*/ ];\n        }));\n    }));\n}\n\nfunction Du(t, e) {\n    for (var n = O(t), r = !1, i = 0, o = e; i < o.length; i++) {\n        var u = o[i], s = u.query, a = n.queries.get(s);\n        if (a) {\n            for (var c = 0, h = a.listeners; c < h.length; c++) {\n                h[c].zh(u) && (r = !0);\n            }\n            a.Kh = u;\n        }\n    }\n    r && xu(n);\n}\n\nfunction Su(t, e, n) {\n    var r = O(t), i = r.queries.get(e);\n    if (i) for (var o = 0, u = i.listeners; o < u.length; o++) {\n        u[o].onError(n);\n    }\n    // Remove all listeners. NOTE: We don't need to call syncEngine.unlisten()\n    // after an error.\n        r.queries.delete(e);\n}\n\n// Call all global snapshot listeners that have been set.\nfunction xu(t) {\n    t.Wh.forEach((function(t) {\n        t.next();\n    }));\n}\n\n/**\n * QueryListener takes a series of internal view snapshots and determines\n * when to raise the event.\n *\n * It uses an Observer to dispatch events.\n */ var ku = /** @class */ function() {\n    function t(t, e, n) {\n        this.query = t, this.Jh = e, \n        /**\n             * Initial snapshots (e.g. from cache) may not be propagated to the wrapped\n             * observer. This flag is set to true once we've actually raised an event.\n             */\n        this.Yh = !1, this.Xh = null, this.onlineState = \"Unknown\" /* Unknown */ , this.options = n || {}\n        /**\n     * Applies the new ViewSnapshot to this listener, raising a user-facing event\n     * if applicable (depending on what changed, whether the user has opted into\n     * metadata-only changes, etc.). Returns true if a user-facing event was\n     * indeed raised.\n     */;\n    }\n    return t.prototype.zh = function(t) {\n        if (!this.options.includeMetadataChanges) {\n            for (\n            // Remove the metadata only changes.\n            var e = [], n = 0, r = t.docChanges; n < r.length; n++) {\n                var i = r[n];\n                3 /* Metadata */ !== i.type && e.push(i);\n            }\n            t = new In(t.query, t.docs, t.Se, e, t.De, t.fromCache, t.Ce, \n            /* excludesMetadataChanges= */ !0);\n        }\n        var o = !1;\n        return this.Yh ? this.Zh(t) && (this.Jh.next(t), o = !0) : this.tl(t, this.onlineState) && (this.el(t), \n        o = !0), this.Xh = t, o;\n    }, t.prototype.onError = function(t) {\n        this.Jh.error(t);\n    }, \n    /** Returns whether a snapshot was raised. */ t.prototype.Gh = function(t) {\n        this.onlineState = t;\n        var e = !1;\n        return this.Xh && !this.Yh && this.tl(this.Xh, t) && (this.el(this.Xh), e = !0), \n        e;\n    }, t.prototype.tl = function(t, e) {\n        // Always raise the first event when we're synced\n        if (!t.fromCache) return !0;\n        // NOTE: We consider OnlineState.Unknown as online (it should become Offline\n        // or Online if we wait long enough).\n                var n = \"Offline\" /* Offline */ !== e;\n        // Don't raise the event if we're online, aren't synced yet (checked\n        // above) and are waiting for a sync.\n                return !(this.options.nl && n || t.docs.et() && \"Offline\" /* Offline */ !== e);\n        // Raise data from cache if we have any documents or we are offline\n        }, t.prototype.Zh = function(t) {\n        // We don't need to handle includeDocumentMetadataChanges here because\n        // the Metadata only changes have already been stripped out if needed.\n        // At this point the only changes we will see are the ones we should\n        // propagate.\n        if (t.docChanges.length > 0) return !0;\n        var e = this.Xh && this.Xh.hasPendingWrites !== t.hasPendingWrites;\n        return !(!t.Ce && !e) && !0 === this.options.includeMetadataChanges;\n        // Generally we should have hit one of the cases above, but it's possible\n        // to get here if there were only metadata docChanges and they got\n        // stripped out.\n        }, t.prototype.el = function(t) {\n        t = In.Ne(t.query, t.docs, t.De, t.fromCache), this.Yh = !0, this.Jh.next(t);\n    }, t;\n}(), Ou = /** @class */ function() {\n    function t(t, \n    // How many bytes this element takes to store in the bundle.\n    e) {\n        this.payload = t, this.byteLength = e;\n    }\n    return t.prototype.sl = function() {\n        return \"metadata\" in this.payload;\n    }, t;\n}(), Pu = /** @class */ function() {\n    function t(t) {\n        this.Qt = t;\n    }\n    return t.prototype.Pc = function(t) {\n        return zn(this.Qt, t);\n    }, \n    /**\n     * Converts a BundleDocument to a MaybeDocument.\n     */\n    t.prototype.yc = function(t) {\n        return t.metadata.exists ? Kn(this.Qt, t.document, !1) : new Vt(this.Pc(t.metadata.name), this.gc(t.metadata.readTime));\n    }, t.prototype.gc = function(t) {\n        return Mn(t);\n    }, t;\n}(), Vu = /** @class */ function() {\n    function t(t, e, n) {\n        this.il = t, this.bh = e, this.Qt = n, \n        /** Batched queries to be saved into storage */\n        this.queries = [], \n        /** Batched documents to be saved into storage */\n        this.documents = [], this.progress = Cu(t)\n        /**\n     * Adds an element from the bundle to the loader.\n     *\n     * Returns a new progress if adding the element leads to a new progress,\n     * otherwise returns null.\n     */;\n    }\n    return t.prototype.rl = function(t) {\n        this.progress.bytesLoaded += t.byteLength;\n        var e = this.progress.documentsLoaded;\n        return t.payload.namedQuery ? this.queries.push(t.payload.namedQuery) : t.payload.documentMetadata ? (this.documents.push({\n            metadata: t.payload.documentMetadata\n        }), t.payload.documentMetadata.exists || ++e) : t.payload.document && (this.documents[this.documents.length - 1].document = t.payload.document, \n        ++e), e !== this.progress.documentsLoaded ? (this.progress.documentsLoaded = e, \n        Object.assign({}, this.progress)) : null;\n    }, t.prototype.ol = function(t) {\n        for (var e = new Map, n = new Pu(this.Qt), r = 0, i = t; r < i.length; r++) {\n            var o = i[r];\n            if (o.metadata.queries) for (var u = n.Pc(o.metadata.name), s = 0, a = o.metadata.queries; s < a.length; s++) {\n                var c = a[s], h = (e.get(c) || mn()).add(u);\n                e.set(c, h);\n            }\n        }\n        return e;\n    }, \n    /**\n     * Update the progress to 'Success' and return the updated progress.\n     */\n    t.prototype.complete = function() {\n        return g(this, void 0, void 0, (function() {\n            var t, e, n, r, i;\n            return w(this, (function(o) {\n                switch (o.label) {\n                  case 0:\n                    return [ 4 /*yield*/ , vo(this.bh, new Pu(this.Qt), this.documents, this.il.id) ];\n\n                  case 1:\n                    t = o.sent(), e = this.ol(this.documents), n = 0, r = this.queries, o.label = 2;\n\n                  case 2:\n                    return n < r.length ? (i = r[n], [ 4 /*yield*/ , yo(this.bh, i, e.get(i.name)) ]) : [ 3 /*break*/ , 5 ];\n\n                  case 3:\n                    o.sent(), o.label = 4;\n\n                  case 4:\n                    return n++, [ 3 /*break*/ , 2 ];\n\n                  case 5:\n                    return [ 2 /*return*/ , (this.progress.taskState = \"Success\", new Wi(Object.assign({}, this.progress), t)) ];\n                }\n            }));\n        }));\n    }, t;\n}();\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A complete element in the bundle stream, together with the byte length it\n * occupies in the stream.\n */\n/**\n * Returns a `LoadBundleTaskProgress` representing the initial progress of\n * loading a bundle.\n */\nfunction Cu(t) {\n    return {\n        taskState: \"Running\",\n        documentsLoaded: 0,\n        bytesLoaded: 0,\n        totalDocuments: t.totalDocuments,\n        totalBytes: t.totalBytes\n    };\n}\n\n/**\n * Returns a `LoadBundleTaskProgress` representing the progress that the loading\n * has succeeded.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ var Lu = function(t) {\n    this.key = t;\n}, Ru = function(t) {\n    this.key = t;\n}, Uu = /** @class */ function() {\n    function t(t, \n    /** Documents included in the remote target */\n    e) {\n        this.query = t, this.cl = e, this.al = null, \n        /**\n             * A flag whether the view is current with the backend. A view is considered\n             * current after it has seen the current flag from the backend and did not\n             * lose consistency within the watch stream (e.g. because of an existence\n             * filter mismatch).\n             */\n        this.Be = !1, \n        /** Documents in the view but not in the remote target */\n        this.ul = mn(), \n        /** Document Keys that have local changes */\n        this.De = mn(), this.hl = ye(t), this.ll = new bn(this.hl);\n    }\n    return Object.defineProperty(t.prototype, \"_l\", {\n        /**\n         * The set of remote documents that the server has told us belongs to the target associated with\n         * this view.\n         */\n        get: function() {\n            return this.cl;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), \n    /**\n     * Iterates over a set of doc changes, applies the query limit, and computes\n     * what the new results should be, what the changes were, and whether we may\n     * need to go back to the local cache for more results. Does not make any\n     * changes to the view.\n     * @param docChanges - The doc changes to apply to this view.\n     * @param previousChanges - If this is being called with a refill, then start\n     *        with this set of docs and changes instead of the current view.\n     * @returns a new set of docs, changes, and refill flag.\n     */\n    t.prototype.fl = function(t, e) {\n        var n = this, r = e ? e.dl : new _n, i = e ? e.ll : this.ll, o = e ? e.De : this.De, u = i, s = !1, a = ie(this.query) && i.size === this.query.limit ? i.last() : null, c = oe(this.query) && i.size === this.query.limit ? i.first() : null;\n        // Drop documents out to meet limit/limitToLast requirement.\n        if (t.Xt((function(t, e) {\n            var h = i.get(t), f = e instanceof Pt ? e : null;\n            f && (f = ve(n.query, f) ? f : null);\n            var l = !!h && n.De.has(h.key), p = !!f && (f.Vt || \n            // We only consider committed mutations for documents that were\n            // mutated during the lifetime of the view.\n            n.De.has(f.key) && f.hasCommittedMutations), d = !1;\n            // Calculate change\n            h && f ? h.data().isEqual(f.data()) ? l !== p && (r.track({\n                type: 3 /* Metadata */ ,\n                doc: f\n            }), d = !0) : n.wl(h, f) || (r.track({\n                type: 2 /* Modified */ ,\n                doc: f\n            }), d = !0, (a && n.hl(f, a) > 0 || c && n.hl(f, c) < 0) && (\n            // This doc moved from inside the limit to outside the limit.\n            // That means there may be some other doc in the local cache\n            // that should be included instead.\n            s = !0)) : !h && f ? (r.track({\n                type: 0 /* Added */ ,\n                doc: f\n            }), d = !0) : h && !f && (r.track({\n                type: 1 /* Removed */ ,\n                doc: h\n            }), d = !0, (a || c) && (\n            // A doc was removed from a full limit query. We'll need to\n            // requery from the local cache to see if we know about some other\n            // doc that should be in the results.\n            s = !0)), d && (f ? (u = u.add(f), o = p ? o.add(t) : o.delete(t)) : (u = u.delete(t), \n            o = o.delete(t)));\n        })), ie(this.query) || oe(this.query)) for (;u.size > this.query.limit; ) {\n            var h = ie(this.query) ? u.last() : u.first();\n            u = u.delete(h.key), o = o.delete(h.key), r.track({\n                type: 1 /* Removed */ ,\n                doc: h\n            });\n        }\n        return {\n            ll: u,\n            dl: r,\n            lc: s,\n            De: o\n        };\n    }, t.prototype.wl = function(t, e) {\n        // We suppress the initial change event for documents that were modified as\n        // part of a write acknowledgment (e.g. when the value of a server transform\n        // is applied) as Watch will send us the same document again.\n        // By suppressing the event, we only raise two user visible events (one with\n        // `hasPendingWrites` and the final state of the document) instead of three\n        // (one with `hasPendingWrites`, the modified document with\n        // `hasPendingWrites` and the final state of the document).\n        return t.Vt && e.hasCommittedMutations && !e.Vt;\n    }, \n    /**\n     * Updates the view with the given ViewDocumentChanges and optionally updates\n     * limbo docs and sync state from the provided target change.\n     * @param docChanges - The set of changes to make to the view's docs.\n     * @param updateLimboDocuments - Whether to update limbo documents based on\n     *        this change.\n     * @param targetChange - A target change to apply for computing limbo docs and\n     *        sync state.\n     * @returns A new ViewChange with the given docs, changes, and sync state.\n     */\n    // PORTING NOTE: The iOS/Android clients always compute limbo document changes.\n    t.prototype.wi = function(t, e, n) {\n        var r = this, i = this.ll;\n        this.ll = t.ll, this.De = t.De;\n        // Sort changes based on type and query comparator\n        var o = t.dl.ve();\n        o.sort((function(t, e) {\n            return function(t, e) {\n                var n = function(t) {\n                    switch (t) {\n                      case 0 /* Added */ :\n                        return 1;\n\n                      case 2 /* Modified */ :\n                      case 3 /* Metadata */ :\n                        // A metadata change is converted to a modified change at the public\n                        // api layer.  Since we sort by document key and then change type,\n                        // metadata and modified changes must be sorted equivalently.\n                        return 2;\n\n                      case 1 /* Removed */ :\n                        return 0;\n\n                      default:\n                        return x();\n                    }\n                };\n                return n(t) - n(e);\n            }(t.type, e.type) || r.hl(t.doc, e.doc);\n        })), this.El(n);\n        var u = e ? this.Tl() : [], s = 0 === this.ul.size && this.Be ? 1 /* Synced */ : 0 /* Local */ , a = s !== this.al;\n        return this.al = s, 0 !== o.length || a ? {\n            snapshot: new In(this.query, t.ll, i, o, t.De, 0 /* Local */ === s, a, \n            /* excludesMetadataChanges= */ !1),\n            Il: u\n        } : {\n            Il: u\n        };\n        // no changes\n        }, \n    /**\n     * Applies an OnlineState change to the view, potentially generating a\n     * ViewChange if the view's syncState changes as a result.\n     */\n    t.prototype.Gh = function(t) {\n        return this.Be && \"Offline\" /* Offline */ === t ? (\n        // If we're offline, set `current` to false and then call applyChanges()\n        // to refresh our syncState and generate a ViewChange as appropriate. We\n        // are guaranteed to get a new TargetChange that sets `current` back to\n        // true once the client is back online.\n        this.Be = !1, this.wi({\n            ll: this.ll,\n            dl: new _n,\n            De: this.De,\n            lc: !1\n        }, \n        /* updateLimboDocuments= */ !1)) : {\n            Il: []\n        };\n    }, \n    /**\n     * Returns whether the doc for the given key should be in limbo.\n     */\n    t.prototype.ml = function(t) {\n        // If the remote end says it's part of this query, it's not in limbo.\n        return !this.cl.has(t) && \n        // The local store doesn't think it's a result, so it shouldn't be in limbo.\n        !!this.ll.has(t) && !this.ll.get(t).Vt;\n    }, \n    /**\n     * Updates syncedDocuments, current, and limbo docs based on the given change.\n     * Returns the list of changes to which docs are in limbo.\n     */\n    t.prototype.El = function(t) {\n        var e = this;\n        t && (t.qe.forEach((function(t) {\n            return e.cl = e.cl.add(t);\n        })), t.Ue.forEach((function(t) {})), t.Qe.forEach((function(t) {\n            return e.cl = e.cl.delete(t);\n        })), this.Be = t.Be);\n    }, t.prototype.Tl = function() {\n        var t = this;\n        // We can only determine limbo documents when we're in-sync with the server.\n                if (!this.Be) return [];\n        // TODO(klimt): Do this incrementally so that it's not quadratic when\n        // updating many documents.\n                var e = this.ul;\n        this.ul = mn(), this.ll.forEach((function(e) {\n            t.ml(e.key) && (t.ul = t.ul.add(e.key));\n        }));\n        // Diff the new limbo docs with the old limbo docs.\n        var n = [];\n        return e.forEach((function(e) {\n            t.ul.has(e) || n.push(new Ru(e));\n        })), this.ul.forEach((function(t) {\n            e.has(t) || n.push(new Lu(t));\n        })), n;\n    }, \n    /**\n     * Update the in-memory state of the current view with the state read from\n     * persistence.\n     *\n     * We update the query view whenever a client's primary status changes:\n     * - When a client transitions from primary to secondary, it can miss\n     *   LocalStorage updates and its query views may temporarily not be\n     *   synchronized with the state on disk.\n     * - For secondary to primary transitions, the client needs to update the list\n     *   of `syncedDocuments` since secondary clients update their query views\n     *   based purely on synthesized RemoteEvents.\n     *\n     * @param queryResult.documents - The documents that match the query according\n     * to the LocalStore.\n     * @param queryResult.remoteKeys - The keys of the documents that match the\n     * query according to the backend.\n     *\n     * @returns The ViewChange that resulted from this synchronization.\n     */\n    // PORTING NOTE: Multi-tab only.\n    t.prototype.Al = function(t) {\n        this.cl = t.Rc, this.ul = mn();\n        var e = this.fl(t.documents);\n        return this.wi(e, /*updateLimboDocuments=*/ !0);\n    }, \n    /**\n     * Returns a view snapshot as if this query was just listened to. Contains\n     * a document add for every existing document and the `fromCache` and\n     * `hasPendingWrites` status of the already established view.\n     */\n    // PORTING NOTE: Multi-tab only.\n    t.prototype.Rl = function() {\n        return In.Ne(this.query, this.ll, this.De, 0 /* Local */ === this.al);\n    }, t;\n}(), Mu = function(\n/**\n     * The query itself.\n     */\nt, \n/**\n     * The target number created by the client that is used in the watch\n     * stream to identify this query.\n     */\ne, \n/**\n     * The view is responsible for computing the final merged truth of what\n     * docs are in the query. It gets notified of local and remote changes,\n     * and applies the query filters and limits to determine the most correct\n     * possible results.\n     */\nn) {\n    this.query = t, this.targetId = e, this.view = n;\n}, qu = function(t) {\n    this.key = t, \n    /**\n             * Set to true once we've received a document. This is used in\n             * getRemoteKeysForTarget() and ultimately used by WatchChangeAggregator to\n             * decide whether it needs to manufacture a delete event for the target once\n             * the target is CURRENT.\n             */\n    this.Pl = !1;\n}, Fu = /** @class */ function() {\n    function t(t, e, n, \n    // PORTING NOTE: Manages state synchronization in multi-tab environments.\n    r, i, o) {\n        this.bh = t, this.yl = e, this.gl = n, this.Vl = r, this.currentUser = i, this.pl = o, \n        this.bl = {}, this.vl = new gi((function(t) {\n            return pe(t);\n        }), le), this.Sl = new Map, \n        /**\n             * The keys of documents that are in limbo for which we haven't yet started a\n             * limbo resolution query. The strings in this set are the result of calling\n             * `key.path.canonicalString()` where `key` is a `DocumentKey` object.\n             *\n             * The `Set` type was chosen because it provides efficient lookup and removal\n             * of arbitrary elements and it also maintains insertion order, providing the\n             * desired queue-like FIFO semantics.\n             */\n        this.Dl = new Set, \n        /**\n             * Keeps track of the target ID for each document that is in limbo with an\n             * active target.\n             */\n        this.Cl = new rn(tt.H), \n        /**\n             * Keeps track of the information about an active limbo resolution for each\n             * active target ID that was started for the purpose of limbo resolution.\n             */\n        this.xl = new Map, this.Nl = new go, \n        /** Stores user completion handlers, indexed by User and BatchId. */\n        this.$l = {}, \n        /** Stores user callbacks waiting for all pending writes to be acknowledged. */\n        this.Fl = new Map, this.Ol = Di.Li(), this.onlineState = \"Unknown\" /* Unknown */ , \n        // The primary state is set to `true` or `false` immediately after Firestore\n        // startup. In the interim, a client should only be considered primary if\n        // `isPrimary` is true.\n        this.kl = void 0;\n    }\n    return Object.defineProperty(t.prototype, \"Ml\", {\n        get: function() {\n            return !0 === this.kl;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), t;\n}();\n\n/**\n * Initiates the new listen, resolves promise when listen enqueued to the\n * server. All the subsequent view snapshots or errors are sent to the\n * subscribed handlers. Returns the initial snapshot.\n */\nfunction ju(t, e) {\n    return g(this, void 0, void 0, (function() {\n        var n, r, i, o, u, s;\n        return w(this, (function(a) {\n            switch (a.label) {\n              case 0:\n                return n = ys(t), (o = n.vl.get(e)) ? (\n                // PORTING NOTE: With Multi-Tab Web, it is possible that a query view\n                // already exists when EventManager calls us for the first time. This\n                // happens when the primary tab is already listening to this query on\n                // behalf of another tab and the user of the primary also starts listening\n                // to the query. EventManager will not have an assigned target ID in this\n                // case and calls `listen` to obtain this ID.\n                r = o.targetId, n.Vl.Fa(r), i = o.view.Rl(), [ 3 /*break*/ , 4 ]) : [ 3 /*break*/ , 1 ];\n\n              case 1:\n                return [ 4 /*yield*/ , ao(n.bh, he(e)) ];\n\n              case 2:\n                return u = a.sent(), s = n.Vl.Fa(u.targetId), r = u.targetId, [ 4 /*yield*/ , zu(n, e, r, \"current\" === s) ];\n\n              case 3:\n                i = a.sent(), n.Ml && tu(n.yl, u), a.label = 4;\n\n              case 4:\n                return [ 2 /*return*/ , i ];\n            }\n        }));\n    }));\n}\n\n/**\n * Registers a view for a previously unknown query and computes its initial\n * snapshot.\n */ function zu(t, e, n, r) {\n    return g(this, void 0, void 0, (function() {\n        var i, o, u, s, a, c;\n        return w(this, (function(h) {\n            switch (h.label) {\n              case 0:\n                // PORTING NOTE: On Web only, we inject the code that registers new Limbo\n                // targets based on view changes. This allows us to only depend on Limbo\n                // changes when user code includes queries.\n                return t.Ll = function(e, n, r) {\n                    return function(t, e, n, r) {\n                        return g(this, void 0, void 0, (function() {\n                            var i, o, u;\n                            return w(this, (function(s) {\n                                switch (s.label) {\n                                  case 0:\n                                    return i = e.view.fl(n), i.lc ? [ 4 /*yield*/ , ho(t.bh, e.query, \n                                    /* usePreviousResults= */ !1).then((function(t) {\n                                        var n = t.documents;\n                                        return e.view.fl(n, i);\n                                    })) ] : [ 3 /*break*/ , 2 ];\n\n                                  case 1:\n                                    // The query has a limit and some docs were removed, so we need\n                                    // to re-run the query against the local store to make sure we\n                                    // didn't lose any good docs that had been past the limit.\n                                    i = s.sent(), s.label = 2;\n\n                                  case 2:\n                                    return o = r && r.$e.get(e.targetId), u = e.view.wi(i, \n                                    /* updateLimboDocuments= */ t.Ml, o), [ 2 /*return*/ , (es(t, e.targetId, u.Il), \n                                    u.snapshot) ];\n                                }\n                            }));\n                        }));\n                    }(t, e, n, r);\n                }, [ 4 /*yield*/ , ho(t.bh, e, \n                /* usePreviousResults= */ !0) ];\n\n              case 1:\n                return i = h.sent(), o = new Uu(e, i.Rc), u = o.fl(i.documents), s = Tn.Le(n, r && \"Offline\" /* Offline */ !== t.onlineState), \n                a = o.wi(u, \n                /* updateLimboDocuments= */ t.Ml, s), es(t, n, a.Il), c = new Mu(e, n, o), [ 2 /*return*/ , (t.vl.set(e, c), \n                t.Sl.has(n) ? t.Sl.get(n).push(e) : t.Sl.set(n, [ e ]), a.snapshot) ];\n            }\n        }));\n    }));\n}\n\n/** Stops listening to the query. */ function Gu(t, e) {\n    return g(this, void 0, void 0, (function() {\n        var n, r, i;\n        return w(this, (function(o) {\n            switch (o.label) {\n              case 0:\n                return n = O(t), r = n.vl.get(e), (i = n.Sl.get(r.targetId)).length > 1 ? [ 2 /*return*/ , (n.Sl.set(r.targetId, i.filter((function(t) {\n                    return !le(t, e);\n                }))), void n.vl.delete(e)) ] : n.Ml ? (\n                // We need to remove the local query target first to allow us to verify\n                // whether any other client is still interested in this target.\n                n.Vl.ka(r.targetId), n.Vl.Da(r.targetId) ? [ 3 /*break*/ , 2 ] : [ 4 /*yield*/ , co(n.bh, r.targetId, \n                /*keepPersistedTargetData=*/ !1).then((function() {\n                    n.Vl.La(r.targetId), eu(n.yl, r.targetId), $u(n, r.targetId);\n                })).catch(mi) ]) : [ 3 /*break*/ , 3 ];\n\n              case 1:\n                o.sent(), o.label = 2;\n\n              case 2:\n                return [ 3 /*break*/ , 5 ];\n\n              case 3:\n                return $u(n, r.targetId), [ 4 /*yield*/ , co(n.bh, r.targetId, \n                /*keepPersistedTargetData=*/ !0) ];\n\n              case 4:\n                o.sent(), o.label = 5;\n\n              case 5:\n                return [ 2 /*return*/ ];\n            }\n        }));\n    }));\n}\n\n/**\n * Initiates the write of local mutation batch which involves adding the\n * writes to the mutation queue, notifying the remote store about new\n * mutations and raising events for any changes this write caused.\n *\n * The promise returned by this call is resolved when the above steps\n * have completed, *not* when the write was acked by the backend. The\n * userCallback is resolved once the write was acked/rejected by the\n * backend (or failed locally for any other reason).\n */ function Bu(t, e, n) {\n    return g(this, void 0, void 0, (function() {\n        var r, i, o, u;\n        return w(this, (function(s) {\n            switch (s.label) {\n              case 0:\n                r = ms(t), s.label = 1;\n\n              case 1:\n                return s.trys.push([ 1, 5, , 6 ]), [ 4 /*yield*/ , function(t, e) {\n                    var n, r = O(t), i = K.now(), o = e.reduce((function(t, e) {\n                        return t.add(e.key);\n                    }), mn());\n                    return r.persistence.runTransaction(\"Locally write mutations\", \"readwrite\", (function(t) {\n                        return r.Tc.Xo(t, o).next((function(o) {\n                            n = o;\n                            for (\n                            // For non-idempotent mutations (such as `FieldValue.increment()`),\n                            // we record the base state in a separate patch mutation. This is\n                            // later used to guarantee consistent values and prevents flicker\n                            // even if the backend sends us an update that already includes our\n                            // transform.\n                            var u = [], s = 0, a = e; s < a.length; s++) {\n                                var c = a[s], h = je(c, n.get(c.key));\n                                null != h && \n                                // NOTE: The base state should only be applied if there's some\n                                // existing document to override, so use a Precondition of\n                                // exists=true\n                                u.push(new Qe(c.key, h, kt(h.proto.mapValue), Re.exists(!0)));\n                            }\n                            return r.zo.Ri(t, i, u, e);\n                        }));\n                    })).then((function(t) {\n                        var e = t.xs(n);\n                        return {\n                            batchId: t.batchId,\n                            ri: e\n                        };\n                    }));\n                }(r.bh, e) ];\n\n              case 2:\n                return i = s.sent(), r.Vl.Ca(i.batchId), function(t, e, n) {\n                    var r = t.$l[t.currentUser.A()];\n                    r || (r = new rn(C)), r = r.zt(e, n), t.$l[t.currentUser.A()] = r;\n                }(r, i.batchId, n), [ 4 /*yield*/ , is(r, i.ri) ];\n\n              case 3:\n                return s.sent(), [ 4 /*yield*/ , pu(r.yl) ];\n\n              case 4:\n                return s.sent(), [ 3 /*break*/ , 6 ];\n\n              case 5:\n                return o = s.sent(), u = Er(o, \"Failed to persist write\"), n.reject(u), [ 3 /*break*/ , 6 ];\n\n              case 6:\n                return [ 2 /*return*/ ];\n            }\n        }));\n    }));\n}\n\n/**\n * Applies one remote event to the sync engine, notifying any views of the\n * changes, and releasing any pending mutation batches that would become\n * visible because of the snapshot version the remote event contains.\n */ function Qu(t, e) {\n    return g(this, void 0, void 0, (function() {\n        var n, r;\n        return w(this, (function(i) {\n            switch (i.label) {\n              case 0:\n                n = O(t), i.label = 1;\n\n              case 1:\n                return i.trys.push([ 1, 4, , 6 ]), [ 4 /*yield*/ , oo(n.bh, e) ];\n\n              case 2:\n                return r = i.sent(), \n                // Update `receivedDocument` as appropriate for any limbo targets.\n                e.$e.forEach((function(t, e) {\n                    var r = n.xl.get(e);\n                    r && (\n                    // Since this is a limbo resolution lookup, it's for a single document\n                    // and it could be added, modified, or removed, but not a combination.\n                    k(t.qe.size + t.Ue.size + t.Qe.size <= 1), t.qe.size > 0 ? r.Pl = !0 : t.Ue.size > 0 ? k(r.Pl) : t.Qe.size > 0 && (k(r.Pl), \n                    r.Pl = !1));\n                })), [ 4 /*yield*/ , is(n, r, e) ];\n\n              case 3:\n                // Update `receivedDocument` as appropriate for any limbo targets.\n                return i.sent(), [ 3 /*break*/ , 6 ];\n\n              case 4:\n                return [ 4 /*yield*/ , mi(i.sent()) ];\n\n              case 5:\n                return i.sent(), [ 3 /*break*/ , 6 ];\n\n              case 6:\n                return [ 2 /*return*/ ];\n            }\n        }));\n    }));\n}\n\n/**\n * Applies an OnlineState change to the sync engine and notifies any views of\n * the change.\n */ function Yu(t, e, n) {\n    var r = O(t);\n    // If we are the secondary client, we explicitly ignore the remote store's\n    // online state (the local client may go offline, even though the primary\n    // tab remains online) and only apply the primary tab's online state from\n    // SharedClientState.\n        if (r.Ml && 0 /* RemoteStore */ === n || !r.Ml && 1 /* SharedClientState */ === n) {\n        var i = [];\n        r.vl.forEach((function(t, n) {\n            var r = n.view.Gh(e);\n            r.snapshot && i.push(r.snapshot);\n        })), function(t, e) {\n            var n = O(t);\n            n.onlineState = e;\n            var r = !1;\n            n.queries.forEach((function(t, n) {\n                for (var i = 0, o = n.listeners; i < o.length; i++) {\n                    // Run global snapshot listeners if a consistent snapshot has been emitted.\n                    o[i].Gh(e) && (r = !0);\n                }\n            })), r && xu(n);\n        }(r.gl, e), i.length && r.bl.ah(i), r.onlineState = e, r.Ml && r.Vl.Qa(e);\n    }\n}\n\n/**\n * Rejects the listen for the given targetID. This can be triggered by the\n * backend for any active target.\n *\n * @param syncEngine - The sync engine implementation.\n * @param targetId - The targetID corresponds to one previously initiated by the\n * user as part of TargetData passed to listen() on RemoteStore.\n * @param err - A description of the condition that has forced the rejection.\n * Nearly always this will be an indication that the user is no longer\n * authorized to see the data matching the target.\n */ function Hu(t, e, n) {\n    return g(this, void 0, void 0, (function() {\n        var r, i, o, u, s, a;\n        return w(this, (function(c) {\n            switch (c.label) {\n              case 0:\n                // PORTING NOTE: Multi-tab only.\n                return (r = O(t)).Vl.Ba(e, \"rejected\", n), i = r.xl.get(e), (o = i && i.key) ? (u = (u = new rn(tt.H)).zt(o, new Vt(o, X.min())), \n                s = mn().add(o), a = new En(X.min(), \n                /* targetChanges= */ new Map, \n                /* targetMismatches= */ new sn(C), u, s), [ 4 /*yield*/ , Qu(r, a) ]) : [ 3 /*break*/ , 2 ];\n\n              case 1:\n                return c.sent(), \n                // Since this query failed, we won't want to manually unlisten to it.\n                // We only remove it from bookkeeping after we successfully applied the\n                // RemoteEvent. If `applyRemoteEvent()` throws, we want to re-listen to\n                // this query when the RemoteStore restarts the Watch stream, which should\n                // re-trigger the target failure.\n                r.Cl = r.Cl.remove(o), r.xl.delete(e), rs(r), [ 3 /*break*/ , 4 ];\n\n              case 2:\n                return [ 4 /*yield*/ , co(r.bh, e, \n                /* keepPersistedTargetData */ !1).then((function() {\n                    return $u(r, e, n);\n                })).catch(mi) ];\n\n              case 3:\n                c.sent(), c.label = 4;\n\n              case 4:\n                return [ 2 /*return*/ ];\n            }\n        }));\n    }));\n}\n\nfunction Ku(t, e) {\n    return g(this, void 0, void 0, (function() {\n        var n, r, i;\n        return w(this, (function(o) {\n            switch (o.label) {\n              case 0:\n                n = O(t), r = e.batch.batchId, o.label = 1;\n\n              case 1:\n                return o.trys.push([ 1, 4, , 6 ]), [ 4 /*yield*/ , ro(n.bh, e) ];\n\n              case 2:\n                return i = o.sent(), \n                // The local store may or may not be able to apply the write result and\n                // raise events immediately (depending on whether the watcher is caught\n                // up), so we raise user callbacks first so that they consistently happen\n                // before listen events.\n                Ju(n, r, /*error=*/ null), Zu(n, r), n.Vl.Na(r, \"acknowledged\"), [ 4 /*yield*/ , is(n, i) ];\n\n              case 3:\n                // The local store may or may not be able to apply the write result and\n                // raise events immediately (depending on whether the watcher is caught\n                // up), so we raise user callbacks first so that they consistently happen\n                // before listen events.\n                return o.sent(), [ 3 /*break*/ , 6 ];\n\n              case 4:\n                return [ 4 /*yield*/ , mi(o.sent()) ];\n\n              case 5:\n                return o.sent(), [ 3 /*break*/ , 6 ];\n\n              case 6:\n                return [ 2 /*return*/ ];\n            }\n        }));\n    }));\n}\n\nfunction Xu(t, e, n) {\n    return g(this, void 0, void 0, (function() {\n        var r, i;\n        return w(this, (function(o) {\n            switch (o.label) {\n              case 0:\n                r = O(t), o.label = 1;\n\n              case 1:\n                return o.trys.push([ 1, 4, , 6 ]), [ 4 /*yield*/ , function(t, e) {\n                    var n = O(t);\n                    return n.persistence.runTransaction(\"Reject batch\", \"readwrite-primary\", (function(t) {\n                        var r;\n                        return n.zo.Pi(t, e).next((function(e) {\n                            return k(null !== e), r = e.keys(), n.zo.Ci(t, e);\n                        })).next((function() {\n                            return n.zo.$i(t);\n                        })).next((function() {\n                            return n.Tc.Xo(t, r);\n                        }));\n                    }));\n                }(r.bh, e) ];\n\n              case 2:\n                return i = o.sent(), \n                // The local store may or may not be able to apply the write result and\n                // raise events immediately (depending on whether the watcher is caught up),\n                // so we raise user callbacks first so that they consistently happen before\n                // listen events.\n                Ju(r, e, n), Zu(r, e), r.Vl.Na(e, \"rejected\", n), [ 4 /*yield*/ , is(r, i) ];\n\n              case 3:\n                // The local store may or may not be able to apply the write result and\n                // raise events immediately (depending on whether the watcher is caught up),\n                // so we raise user callbacks first so that they consistently happen before\n                // listen events.\n                return o.sent(), [ 3 /*break*/ , 6 ];\n\n              case 4:\n                return [ 4 /*yield*/ , mi(o.sent()) ];\n\n              case 5:\n                return o.sent(), [ 3 /*break*/ , 6 ];\n\n              case 6:\n                return [ 2 /*return*/ ];\n            }\n        }));\n    }));\n}\n\n/**\n * Registers a user callback that resolves when all pending mutations at the moment of calling\n * are acknowledged .\n */ function Wu(t, e) {\n    return g(this, void 0, void 0, (function() {\n        var n, r, i, o, u;\n        return w(this, (function(s) {\n            switch (s.label) {\n              case 0:\n                uu((n = O(t)).yl) || N(\"SyncEngine\", \"The network is disabled. The task returned by 'awaitPendingWrites()' will not complete until the network is enabled.\"), \n                s.label = 1;\n\n              case 1:\n                return s.trys.push([ 1, 3, , 4 ]), [ 4 /*yield*/ , function(t) {\n                    var e = O(t);\n                    return e.persistence.runTransaction(\"Get highest unacknowledged batch id\", \"readonly\", (function(t) {\n                        return e.zo.Vi(t);\n                    }));\n                }(n.bh) ];\n\n              case 2:\n                return -1 === (r = s.sent()) ? [ 2 /*return*/ , void e.resolve() ] : ((i = n.Fl.get(r) || []).push(e), \n                n.Fl.set(r, i), [ 3 /*break*/ , 4 ]);\n\n              case 3:\n                return o = s.sent(), u = Er(o, \"Initialization of waitForPendingWrites() operation failed\"), \n                e.reject(u), [ 3 /*break*/ , 4 ];\n\n              case 4:\n                return [ 2 /*return*/ ];\n            }\n        }));\n    }));\n}\n\n/**\n * Triggers the callbacks that are waiting for this batch id to get acknowledged by server,\n * if there are any.\n */ function Zu(t, e) {\n    (t.Fl.get(e) || []).forEach((function(t) {\n        t.resolve();\n    })), t.Fl.delete(e)\n    /** Reject all outstanding callbacks waiting for pending writes to complete. */;\n}\n\nfunction Ju(t, e, n) {\n    var r = O(t), i = r.$l[r.currentUser.A()];\n    // NOTE: Mutations restored from persistence won't have callbacks, so it's\n    // okay for there to be no callback for this ID.\n    if (i) {\n        var o = i.get(e);\n        o && (n ? o.reject(n) : o.resolve(), i = i.remove(e)), r.$l[r.currentUser.A()] = i;\n    }\n}\n\nfunction $u(t, e, n) {\n    void 0 === n && (n = null), t.Vl.ka(e);\n    for (var r = 0, i = t.Sl.get(e); r < i.length; r++) {\n        var o = i[r];\n        t.vl.delete(o), n && t.bl.Bl(o, n);\n    }\n    t.Sl.delete(e), t.Ml && t.Nl.Fc(e).forEach((function(e) {\n        t.Nl.Fi(e) || \n        // We removed the last reference for this key\n        ts(t, e);\n    }));\n}\n\nfunction ts(t, e) {\n    t.Dl.delete(e.path.rt());\n    // It's possible that the target already got removed because the query failed. In that case,\n    // the key won't exist in `limboTargetsByKey`. Only do the cleanup if we still have the target.\n    var n = t.Cl.get(e);\n    null !== n && (eu(t.yl, n), t.Cl = t.Cl.remove(e), t.xl.delete(n), rs(t));\n}\n\nfunction es(t, e, n) {\n    for (var r = 0, i = n; r < i.length; r++) {\n        var o = i[r];\n        o instanceof Lu ? (t.Nl.nr(o.key, e), ns(t, o)) : o instanceof Ru ? (N(\"SyncEngine\", \"Document no longer in limbo: \" + o.key), \n        t.Nl.ir(o.key, e), t.Nl.Fi(o.key) || \n        // We removed the last reference for this key\n        ts(t, o.key)) : x();\n    }\n}\n\nfunction ns(t, e) {\n    var n = e.key, r = n.path.rt();\n    t.Cl.get(n) || t.Dl.has(r) || (N(\"SyncEngine\", \"New document in limbo: \" + n), t.Dl.add(r), \n    rs(t));\n}\n\n/**\n * Starts listens for documents in limbo that are enqueued for resolution,\n * subject to a maximum number of concurrent resolutions.\n *\n * Without bounding the number of concurrent resolutions, the server can fail\n * with \"resource exhausted\" errors which can lead to pathological client\n * behavior as seen in https://github.com/firebase/firebase-js-sdk/issues/2683.\n */ function rs(t) {\n    for (;t.Dl.size > 0 && t.Cl.size < t.pl; ) {\n        var e = t.Dl.values().next().value;\n        t.Dl.delete(e);\n        var n = new tt(Z.ot(e)), r = t.Ol.next();\n        t.xl.set(r, new qu(n)), t.Cl = t.Cl.zt(n, r), tu(t.yl, new ge(he(re(n.path)), r, 2 /* LimboResolution */ , H.q));\n    }\n}\n\nfunction is(t, e, n) {\n    return g(this, void 0, void 0, (function() {\n        var r, i, o, u;\n        return w(this, (function(s) {\n            switch (s.label) {\n              case 0:\n                return r = O(t), i = [], o = [], u = [], r.vl.et() ? [ 3 /*break*/ , 3 ] : (r.vl.forEach((function(t, s) {\n                    u.push(r.Ll(s, e, n).then((function(t) {\n                        if (t) {\n                            r.Ml && r.Vl.Ba(s.targetId, t.fromCache ? \"not-current\" : \"current\"), i.push(t);\n                            var e = Ji.oc(s.targetId, t);\n                            o.push(e);\n                        }\n                    })));\n                })), [ 4 /*yield*/ , Promise.all(u) ]);\n\n              case 1:\n                return s.sent(), r.bl.ah(i), [ 4 /*yield*/ , function(t, e) {\n                    return g(this, void 0, void 0, (function() {\n                        var n, r, i, o, u, s, a, c, h;\n                        return w(this, (function(f) {\n                            switch (f.label) {\n                              case 0:\n                                n = O(t), f.label = 1;\n\n                              case 1:\n                                return f.trys.push([ 1, 3, , 4 ]), [ 4 /*yield*/ , n.persistence.runTransaction(\"notifyLocalViewChanges\", \"readwrite\", (function(t) {\n                                    return lr.forEach(e, (function(e) {\n                                        return lr.forEach(e.ic, (function(r) {\n                                            return n.persistence.Ti.nr(t, e.targetId, r);\n                                        })).next((function() {\n                                            return lr.forEach(e.rc, (function(r) {\n                                                return n.persistence.Ti.ir(t, e.targetId, r);\n                                            }));\n                                        }));\n                                    }));\n                                })) ];\n\n                              case 2:\n                                return f.sent(), [ 3 /*break*/ , 4 ];\n\n                              case 3:\n                                if (!mr(r = f.sent())) throw r;\n                                // If `notifyLocalViewChanges` fails, we did not advance the sequence\n                                // number for the documents that were included in this transaction.\n                                // This might trigger them to be deleted earlier than they otherwise\n                                // would have, but it should not invalidate the integrity of the data.\n                                                                return N(\"LocalStore\", \"Failed to update sequence numbers: \" + r), \n                                [ 3 /*break*/ , 4 ];\n\n                              case 4:\n                                for (i = 0, o = e; i < o.length; i++) u = o[i], s = u.targetId, u.fromCache || (a = n.fc.get(s), \n                                c = a.Ot, h = a.Lt(c), \n                                // Advance the last limbo free snapshot version\n                                n.fc = n.fc.zt(s, h));\n                                return [ 2 /*return*/ ];\n                            }\n                        }));\n                    }));\n                }(r.bh, o) ];\n\n              case 2:\n                s.sent(), s.label = 3;\n\n              case 3:\n                return [ 2 /*return*/ ];\n            }\n        }));\n    }));\n}\n\nfunction os(t, e) {\n    return g(this, void 0, void 0, (function() {\n        var n, r;\n        return w(this, (function(i) {\n            switch (i.label) {\n              case 0:\n                return (n = O(t)).currentUser.isEqual(e) ? [ 3 /*break*/ , 3 ] : (N(\"SyncEngine\", \"User change. New user:\", e.A()), \n                [ 4 /*yield*/ , no(n.bh, e) ]);\n\n              case 1:\n                return r = i.sent(), n.currentUser = e, \n                // Fails tasks waiting for pending writes requested by previous user.\n                function(t, e) {\n                    t.Fl.forEach((function(t) {\n                        t.forEach((function(t) {\n                            t.reject(new q(M.CANCELLED, \"'waitForPendingWrites' promise is rejected due to a user change.\"));\n                        }));\n                    })), t.Fl.clear();\n                }(n), \n                // TODO(b/114226417): Consider calling this only in the primary tab.\n                n.Vl.Ua(e, r.mc, r.Ac), [ 4 /*yield*/ , is(n, r.Ic) ];\n\n              case 2:\n                i.sent(), i.label = 3;\n\n              case 3:\n                return [ 2 /*return*/ ];\n            }\n        }));\n    }));\n}\n\nfunction us(t, e) {\n    var n = O(t), r = n.xl.get(e);\n    if (r && r.Pl) return mn().add(r.key);\n    var i = mn(), o = n.Sl.get(e);\n    if (!o) return i;\n    for (var u = 0, s = o; u < s.length; u++) {\n        var a = s[u], c = n.vl.get(a);\n        i = i.Pe(c.view._l);\n    }\n    return i;\n}\n\n/**\n * Reconcile the list of synced documents in an existing view with those\n * from persistence.\n */ function ss(t, e) {\n    return g(this, void 0, void 0, (function() {\n        var n, r, i;\n        return w(this, (function(o) {\n            switch (o.label) {\n              case 0:\n                return [ 4 /*yield*/ , ho((n = O(t)).bh, e.query, \n                /* usePreviousResults= */ !0) ];\n\n              case 1:\n                return r = o.sent(), i = e.view.Al(r), [ 2 /*return*/ , (n.Ml && es(n, e.targetId, i.Il), \n                i) ];\n            }\n        }));\n    }));\n}\n\n/**\n * Retrieves newly changed documents from remote document cache and raises\n * snapshots if needed.\n */\n// PORTING NOTE: Multi-Tab only.\nfunction as(t) {\n    return g(this, void 0, void 0, (function() {\n        var e;\n        return w(this, (function(n) {\n            return [ 2 /*return*/ , lo((e = O(t)).bh).then((function(t) {\n                return is(e, t);\n            })) ];\n        }));\n    }));\n}\n\n/** Applies a mutation state to an existing batch.  */\n// PORTING NOTE: Multi-Tab only.\nfunction cs(t, e, n, r) {\n    return g(this, void 0, void 0, (function() {\n        var i, o;\n        return w(this, (function(u) {\n            switch (u.label) {\n              case 0:\n                return [ 4 /*yield*/ , function(t, e) {\n                    var n = O(t), r = O(n.zo);\n                    return n.persistence.runTransaction(\"Lookup mutation documents\", \"readonly\", (function(t) {\n                        return r.yi(t, e).next((function(e) {\n                            return e ? n.Tc.Xo(t, e) : lr.resolve(null);\n                        }));\n                    }));\n                }((i = O(t)).bh, e) ];\n\n              case 1:\n                return null === (o = u.sent()) ? [ 3 /*break*/ , 6 ] : \"pending\" !== n ? [ 3 /*break*/ , 3 ] : [ 4 /*yield*/ , pu(i.yl) ];\n\n              case 2:\n                // If we are the primary client, we need to send this write to the\n                // backend. Secondary clients will ignore these writes since their remote\n                // connection is disabled.\n                return u.sent(), [ 3 /*break*/ , 4 ];\n\n              case 3:\n                \"acknowledged\" === n || \"rejected\" === n ? (\n                // NOTE: Both these methods are no-ops for batches that originated from\n                // other clients.\n                Ju(i, e, r || null), Zu(i, e), function(t, e) {\n                    O(O(t).zo).xi(e);\n                }(i.bh, e)) : x(), u.label = 4;\n\n              case 4:\n                return [ 4 /*yield*/ , is(i, o) ];\n\n              case 5:\n                return u.sent(), [ 3 /*break*/ , 7 ];\n\n              case 6:\n                // A throttled tab may not have seen the mutation before it was completed\n                // and removed from the mutation queue, in which case we won't have cached\n                // the affected documents. In this case we can safely ignore the update\n                // since that means we didn't apply the mutation locally at all (if we\n                // had, we would have cached the affected documents), and so we will just\n                // see any resulting document changes via normal remote document updates\n                // as applicable.\n                N(\"SyncEngine\", \"Cannot apply mutation batch with id: \" + e), u.label = 7;\n\n              case 7:\n                return [ 2 /*return*/ ];\n            }\n        }));\n    }));\n}\n\n/** Applies a query target change from a different tab. */\n// PORTING NOTE: Multi-Tab only.\nfunction hs(t, e) {\n    return g(this, void 0, void 0, (function() {\n        var n, r, i, o, u, s, a, c;\n        return w(this, (function(h) {\n            switch (h.label) {\n              case 0:\n                return ys(n = O(t)), ms(n), !0 !== e || !0 === n.kl ? [ 3 /*break*/ , 3 ] : (r = n.Vl.va(), \n                [ 4 /*yield*/ , fs(n, r.it()) ]);\n\n              case 1:\n                return i = h.sent(), n.kl = !0, [ 4 /*yield*/ , bu(n.yl, !0) ];\n\n              case 2:\n                for (h.sent(), o = 0, u = i; o < u.length; o++) s = u[o], tu(n.yl, s);\n                return [ 3 /*break*/ , 7 ];\n\n              case 3:\n                return !1 !== e || !1 === n.kl ? [ 3 /*break*/ , 7 ] : (a = [], c = Promise.resolve(), \n                n.Sl.forEach((function(t, e) {\n                    n.Vl.Ma(e) ? a.push(e) : c = c.then((function() {\n                        return $u(n, e), co(n.bh, e, \n                        /*keepPersistedTargetData=*/ !0);\n                    })), eu(n.yl, e);\n                })), [ 4 /*yield*/ , c ]);\n\n              case 4:\n                return h.sent(), [ 4 /*yield*/ , fs(n, a) ];\n\n              case 5:\n                return h.sent(), \n                // PORTING NOTE: Multi-Tab only.\n                function(t) {\n                    var e = O(t);\n                    e.xl.forEach((function(t, n) {\n                        eu(e.yl, n);\n                    })), e.Nl.Oc(), e.xl = new Map, e.Cl = new rn(tt.H);\n                }(n), n.kl = !1, [ 4 /*yield*/ , bu(n.yl, !1) ];\n\n              case 6:\n                h.sent(), h.label = 7;\n\n              case 7:\n                return [ 2 /*return*/ ];\n            }\n        }));\n    }));\n}\n\nfunction fs(t, e, n) {\n    return g(this, void 0, void 0, (function() {\n        var n, r, i, o, u, s, a, c, h, f, l, p, d, v;\n        return w(this, (function(y) {\n            switch (y.label) {\n              case 0:\n                n = O(t), r = [], i = [], o = 0, u = e, y.label = 1;\n\n              case 1:\n                return o < u.length ? (s = u[o], a = void 0, (c = n.Sl.get(s)) && 0 !== c.length ? [ 4 /*yield*/ , ao(n.bh, he(c[0])) ] : [ 3 /*break*/ , 7 ]) : [ 3 /*break*/ , 13 ];\n\n              case 2:\n                // For queries that have a local View, we fetch their current state\n                // from LocalStore (as the resume token and the snapshot version\n                // might have changed) and reconcile their views with the persisted\n                // state (the list of syncedDocuments may have gotten out of sync).\n                a = y.sent(), h = 0, f = c, y.label = 3;\n\n              case 3:\n                return h < f.length ? (l = f[h], p = n.vl.get(l), [ 4 /*yield*/ , ss(n, p) ]) : [ 3 /*break*/ , 6 ];\n\n              case 4:\n                (d = y.sent()).snapshot && i.push(d.snapshot), y.label = 5;\n\n              case 5:\n                return h++, [ 3 /*break*/ , 3 ];\n\n              case 6:\n                return [ 3 /*break*/ , 11 ];\n\n              case 7:\n                return [ 4 /*yield*/ , fo(n.bh, s) ];\n\n              case 8:\n                return v = y.sent(), [ 4 /*yield*/ , ao(n.bh, v) ];\n\n              case 9:\n                return a = y.sent(), [ 4 /*yield*/ , zu(n, ls(v), s, \n                /*current=*/ !1) ];\n\n              case 10:\n                y.sent(), y.label = 11;\n\n              case 11:\n                r.push(a), y.label = 12;\n\n              case 12:\n                return o++, [ 3 /*break*/ , 1 ];\n\n              case 13:\n                return [ 2 /*return*/ , (n.bl.ah(i), r) ];\n            }\n        }));\n    }));\n}\n\n/**\n * Creates a `Query` object from the specified `Target`. There is no way to\n * obtain the original `Query`, so we synthesize a `Query` from the `Target`\n * object.\n *\n * The synthesized result might be different from the original `Query`, but\n * since the synthesized `Query` should return the same results as the\n * original one (only the presentation of results might differ), the potential\n * difference will not cause issues.\n */\n// PORTING NOTE: Multi-Tab only.\nfunction ls(t) {\n    return ne(t.path, t.collectionGroup, t.orderBy, t.filters, t.limit, \"F\" /* First */ , t.startAt, t.endAt);\n}\n\n/** Returns the IDs of the clients that are currently active. */\n// PORTING NOTE: Multi-Tab only.\nfunction ps(t) {\n    var e = O(t);\n    return O(O(e.bh).persistence).Uo();\n}\n\n/** Applies a query target change from a different tab. */\n// PORTING NOTE: Multi-Tab only.\nfunction ds(t, e, n, r) {\n    return g(this, void 0, void 0, (function() {\n        var i, o, u;\n        return w(this, (function(s) {\n            switch (s.label) {\n              case 0:\n                return (i = O(t)).kl ? (\n                // If we receive a target state notification via WebStorage, we are\n                // either already secondary or another tab has taken the primary lease.\n                N(\"SyncEngine\", \"Ignoring unexpected query state notification.\"), [ 3 /*break*/ , 8 ]) : [ 3 /*break*/ , 1 ];\n\n              case 1:\n                if (!i.Sl.has(e)) return [ 3 /*break*/ , 8 ];\n                switch (n) {\n                  case \"current\":\n                  case \"not-current\":\n                    return [ 3 /*break*/ , 2 ];\n\n                  case \"rejected\":\n                    return [ 3 /*break*/ , 5 ];\n                }\n                return [ 3 /*break*/ , 7 ];\n\n              case 2:\n                return [ 4 /*yield*/ , lo(i.bh) ];\n\n              case 3:\n                return o = s.sent(), u = En.Me(e, \"current\" === n), [ 4 /*yield*/ , is(i, o, u) ];\n\n              case 4:\n                return s.sent(), [ 3 /*break*/ , 8 ];\n\n              case 5:\n                return [ 4 /*yield*/ , co(i.bh, e, \n                /* keepPersistedTargetData */ !0) ];\n\n              case 6:\n                return s.sent(), $u(i, e, r), [ 3 /*break*/ , 8 ];\n\n              case 7:\n                x(), s.label = 8;\n\n              case 8:\n                return [ 2 /*return*/ ];\n            }\n        }));\n    }));\n}\n\n/** Adds or removes Watch targets for queries from different tabs. */ function vs(t, e, n) {\n    return g(this, void 0, void 0, (function() {\n        var r, i, o, u, s, a, c, h, f, l;\n        return w(this, (function(p) {\n            switch (p.label) {\n              case 0:\n                if (!(r = ys(t)).kl) return [ 3 /*break*/ , 10 ];\n                i = 0, o = e, p.label = 1;\n\n              case 1:\n                return i < o.length ? (u = o[i], r.Sl.has(u) ? (\n                // A target might have been added in a previous attempt\n                N(\"SyncEngine\", \"Adding an already active target \" + u), [ 3 /*break*/ , 5 ]) : [ 4 /*yield*/ , fo(r.bh, u) ]) : [ 3 /*break*/ , 6 ];\n\n              case 2:\n                return s = p.sent(), [ 4 /*yield*/ , ao(r.bh, s) ];\n\n              case 3:\n                return a = p.sent(), [ 4 /*yield*/ , zu(r, ls(s), a.targetId, \n                /*current=*/ !1) ];\n\n              case 4:\n                p.sent(), tu(r.yl, a), p.label = 5;\n\n              case 5:\n                return i++, [ 3 /*break*/ , 1 ];\n\n              case 6:\n                c = function(t) {\n                    return w(this, (function(e) {\n                        switch (e.label) {\n                          case 0:\n                            return r.Sl.has(t) ? [ 4 /*yield*/ , co(r.bh, t, \n                            /* keepPersistedTargetData */ !1).then((function() {\n                                eu(r.yl, t), $u(r, t);\n                            })).catch(mi) ] : [ 3 /*break*/ , 2 ];\n\n                            // Release queries that are still active.\n                                                      case 1:\n                            // Release queries that are still active.\n                            e.sent(), e.label = 2;\n\n                          case 2:\n                            return [ 2 /*return*/ ];\n                        }\n                    }));\n                }, h = 0, f = n, p.label = 7;\n\n              case 7:\n                return h < f.length ? (l = f[h], [ 5 /*yield**/ , c(l) ]) : [ 3 /*break*/ , 10 ];\n\n              case 8:\n                p.sent(), p.label = 9;\n\n              case 9:\n                return h++, [ 3 /*break*/ , 7 ];\n\n              case 10:\n                return [ 2 /*return*/ ];\n            }\n        }));\n    }));\n}\n\nfunction ys(t) {\n    var e = O(t);\n    return e.yl.Dh.Lh = Qu.bind(null, e), e.yl.Dh.vn = us.bind(null, e), e.yl.Dh.Mh = Hu.bind(null, e), \n    e.bl.ah = Du.bind(null, e.gl), e.bl.Bl = Su.bind(null, e.gl), e;\n}\n\nfunction ms(t) {\n    var e = O(t);\n    return e.yl.Dh.Bh = Ku.bind(null, e), e.yl.Dh.qh = Xu.bind(null, e), e\n    /**\n * Loads a Firestore bundle into the SDK. The returned promise resolves when\n * the bundle finished loading.\n *\n * @param syncEngine - SyncEngine to use.\n * @param bundleReader - Bundle to load into the SDK.\n * @param task - LoadBundleTask used to update the loading progress to public API.\n */;\n}\n\nfunction gs(t, e, n) {\n    var r = O(t);\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        (function(t, e, n) {\n        return g(this, void 0, void 0, (function() {\n            var r, i, o, u, s, a;\n            return w(this, (function(c) {\n                switch (c.label) {\n                  case 0:\n                    return c.trys.push([ 0, 14, , 15 ]), [ 4 /*yield*/ , e.getMetadata() ];\n\n                  case 1:\n                    return r = c.sent(), [ 4 /*yield*/ , function(t, e) {\n                        var n = O(t), r = Mn(e.createTime);\n                        return n.persistence.runTransaction(\"hasNewerBundle\", \"readonly\", (function(t) {\n                            return n.wo.Os(t, e.id);\n                        })).then((function(t) {\n                            return !!t && t.createTime._(r) >= 0;\n                        }));\n                    }(t.bh, r) ];\n\n                  case 2:\n                    return c.sent() ? [ 4 /*yield*/ , e.close() ] : [ 3 /*break*/ , 4 ];\n\n                  case 3:\n                    return [ 2 /*return*/ , (c.sent(), void n.ql(function(t) {\n                        return {\n                            taskState: \"Success\",\n                            documentsLoaded: t.totalDocuments,\n                            bytesLoaded: t.totalBytes,\n                            totalDocuments: t.totalDocuments,\n                            totalBytes: t.totalBytes\n                        };\n                    }(r))) ];\n\n                  case 4:\n                    return n.Ul(Cu(r)), i = new Vu(r, t.bh, e.Qt), [ 4 /*yield*/ , e.Ql() ];\n\n                  case 5:\n                    o = c.sent(), c.label = 6;\n\n                  case 6:\n                    return o ? [ 4 /*yield*/ , i.rl(o) ] : [ 3 /*break*/ , 10 ];\n\n                  case 7:\n                    return (u = c.sent()) && n.Ul(u), [ 4 /*yield*/ , e.Ql() ];\n\n                  case 8:\n                    o = c.sent(), c.label = 9;\n\n                  case 9:\n                    return [ 3 /*break*/ , 6 ];\n\n                  case 10:\n                    return [ 4 /*yield*/ , i.complete() ];\n\n                  case 11:\n                    // TODO(b/160876443): This currently raises snapshots with\n                    // `fromCache=false` if users already listen to some queries and bundles\n                    // has newer version.\n                    return s = c.sent(), [ 4 /*yield*/ , is(t, s.Go, \n                    /* remoteEvent */ void 0) ];\n\n                  case 12:\n                    // Save metadata, so loading the same bundle will skip.\n                    // TODO(b/160876443): This currently raises snapshots with\n                    // `fromCache=false` if users already listen to some queries and bundles\n                    // has newer version.\n                    return c.sent(), [ 4 /*yield*/ , function(t, e) {\n                        var n = O(t);\n                        return n.persistence.runTransaction(\"Save bundle\", \"readwrite\", (function(t) {\n                            return n.wo.ks(t, e);\n                        }));\n                    }(t.bh, r) ];\n\n                  case 13:\n                    // TODO(b/160876443): This currently raises snapshots with\n                    // `fromCache=false` if users already listen to some queries and bundles\n                    // has newer version.\n                    // Save metadata, so loading the same bundle will skip.\n                    return c.sent(), n.ql(s.progress), [ 3 /*break*/ , 15 ];\n\n                  case 14:\n                    return D(\"SyncEngine\", \"Loading bundle failed with \" + (a = c.sent())), n.Kl(a), \n                    [ 3 /*break*/ , 15 ];\n\n                  case 15:\n                    return [ 2 /*return*/ ];\n                }\n            }));\n        }));\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Provides all components needed for Firestore with in-memory persistence.\n * Uses EagerGC garbage collection.\n */)(r, e, n).then((function() {\n        r.Vl.Wa();\n    }));\n}\n\nvar ws = /** @class */ function() {\n    function t() {\n        this.synchronizeTabs = !1;\n    }\n    return t.prototype.initialize = function(t) {\n        return g(this, void 0, void 0, (function() {\n            return w(this, (function(e) {\n                switch (e.label) {\n                  case 0:\n                    return this.Qt = Bo(t.yu.t), this.Vl = this.Wl(t), this.persistence = this.jl(t), \n                    [ 4 /*yield*/ , this.persistence.start() ];\n\n                  case 1:\n                    return e.sent(), this.Gl = this.zl(t), this.bh = this.Hl(t), [ 2 /*return*/ ];\n                }\n            }));\n        }));\n    }, t.prototype.zl = function(t) {\n        return null;\n    }, t.prototype.Hl = function(t) {\n        return eo(this.persistence, new $i, t.Jl, this.Qt);\n    }, t.prototype.jl = function(t) {\n        return new To(Ao.ia, this.Qt);\n    }, t.prototype.Wl = function(t) {\n        return new Ro;\n    }, t.prototype.terminate = function() {\n        return g(this, void 0, void 0, (function() {\n            return w(this, (function(t) {\n                switch (t.label) {\n                  case 0:\n                    return this.Gl && this.Gl.stop(), [ 4 /*yield*/ , this.Vl.ko() ];\n\n                  case 1:\n                    return t.sent(), [ 4 /*yield*/ , this.persistence.ko() ];\n\n                  case 2:\n                    return t.sent(), [ 2 /*return*/ ];\n                }\n            }));\n        }));\n    }, t;\n}(), bs = /** @class */ function(t) {\n    function e(e, n, r) {\n        var i = this;\n        return (i = t.call(this) || this).Yl = e, i.cacheSizeBytes = n, i.forceOwnership = r, \n        i.synchronizeTabs = !1, i;\n    }\n    return m(e, t), e.prototype.initialize = function(e) {\n        return g(this, void 0, void 0, (function() {\n            return w(this, (function(n) {\n                switch (n.label) {\n                  case 0:\n                    return [ 4 /*yield*/ , t.prototype.initialize.call(this, e) ];\n\n                  case 1:\n                    return n.sent(), [ 4 /*yield*/ , po(this.bh) ];\n\n                  case 2:\n                    return n.sent(), [ 4 /*yield*/ , this.Yl.initialize(this, e) ];\n\n                  case 3:\n                    // Enqueue writes from a previous session\n                    return n.sent(), [ 4 /*yield*/ , ms(this.Yl._a) ];\n\n                  case 4:\n                    // Enqueue writes from a previous session\n                    return n.sent(), [ 4 /*yield*/ , pu(this.Yl.yl) ];\n\n                  case 5:\n                    return n.sent(), [ 2 /*return*/ ];\n                }\n            }));\n        }));\n    }, e.prototype.Hl = function(t) {\n        return eo(this.persistence, new $i, t.Jl, this.Qt);\n    }, e.prototype.zl = function(t) {\n        var e = this.persistence.Ti.lr;\n        return new Ci(e, t._s);\n    }, e.prototype.jl = function(t) {\n        var e = Xi(t.yu.t, t.yu.persistenceKey), n = void 0 !== this.cacheSizeBytes ? yi.Ys(this.cacheSizeBytes) : yi.ti;\n        return new Yi(this.synchronizeTabs, e, t.clientId, n, t._s, zo(), Go(), this.Qt, this.Vl, !!this.forceOwnership);\n    }, e.prototype.Wl = function(t) {\n        return new Ro;\n    }, e;\n}(ws), _s = /** @class */ function(t) {\n    function e(e, n) {\n        var r = this;\n        return (r = t.call(this, e, n, /* forceOwnership= */ !1) || this).Yl = e, r.cacheSizeBytes = n, \n        r.synchronizeTabs = !0, r;\n    }\n    return m(e, t), e.prototype.initialize = function(e) {\n        return g(this, void 0, void 0, (function() {\n            var n, r = this;\n            return w(this, (function(i) {\n                switch (i.label) {\n                  case 0:\n                    return [ 4 /*yield*/ , t.prototype.initialize.call(this, e) ];\n\n                  case 1:\n                    return i.sent(), n = this.Yl._a, this.Vl instanceof Lo ? (this.Vl._a = {\n                        eu: cs.bind(null, n),\n                        nu: ds.bind(null, n),\n                        su: vs.bind(null, n),\n                        Uo: ps.bind(null, n),\n                        tu: as.bind(null, n)\n                    }, [ 4 /*yield*/ , this.Vl.start() ]) : [ 3 /*break*/ , 3 ];\n\n                  case 2:\n                    i.sent(), i.label = 3;\n\n                  case 3:\n                    // NOTE: This will immediately call the listener, so we make sure to\n                    // set it after localStore / remoteStore are started.\n                    return [ 4 /*yield*/ , this.persistence.Ro((function(t) {\n                        return g(r, void 0, void 0, (function() {\n                            return w(this, (function(e) {\n                                switch (e.label) {\n                                  case 0:\n                                    return [ 4 /*yield*/ , hs(this.Yl._a, t) ];\n\n                                  case 1:\n                                    return e.sent(), this.Gl && (t && !this.Gl.Er ? this.Gl.start(this.bh) : t || this.Gl.stop()), \n                                    [ 2 /*return*/ ];\n                                }\n                            }));\n                        }));\n                    })) ];\n\n                  case 4:\n                    // NOTE: This will immediately call the listener, so we make sure to\n                    // set it after localStore / remoteStore are started.\n                    return i.sent(), [ 2 /*return*/ ];\n                }\n            }));\n        }));\n    }, e.prototype.Wl = function(t) {\n        var e = zo();\n        if (!Lo.Kn(e)) throw new q(M.UNIMPLEMENTED, \"IndexedDB persistence is only available on platforms that support LocalStorage.\");\n        var n = Xi(t.yu.t, t.yu.persistenceKey);\n        return new Lo(e, t._s, n, t.clientId, t.Jl);\n    }, e;\n}(bs), Is = /** @class */ function() {\n    function t() {}\n    return t.prototype.initialize = function(t, e) {\n        return g(this, void 0, void 0, (function() {\n            var n = this;\n            return w(this, (function(r) {\n                switch (r.label) {\n                  case 0:\n                    return this.bh ? [ 3 /*break*/ , 2 ] : (this.bh = t.bh, this.Vl = t.Vl, this.Sh = this.Xl(e), \n                    this.yl = this.Zl(e), this.gl = this.t_(e), this._a = this.e_(e, \n                    /* startAsPrimary=*/ !t.synchronizeTabs), this.Vl.fa = function(t) {\n                        return Yu(n._a, t, 1 /* SharedClientState */);\n                    }, this.yl.Dh.n_ = os.bind(null, this._a), [ 4 /*yield*/ , bu(this.yl, this._a.Ml) ]);\n\n                  case 1:\n                    r.sent(), r.label = 2;\n\n                  case 2:\n                    return [ 2 /*return*/ ];\n                }\n            }));\n        }));\n    }, t.prototype.t_ = function(t) {\n        return new Tu;\n    }, t.prototype.Xl = function(t) {\n        var e, n = Bo(t.yu.t), r = (e = t.yu, new jo(e));\n        /** Return the Platform-specific connectivity monitor. */ return function(t, e, n) {\n            return new Xo(t, e, n);\n        }(t.credentials, r, n);\n    }, t.prototype.Zl = function(t) {\n        var e, n, r, i, o, u = this;\n        return e = this.bh, n = this.Sh, r = t._s, i = function(t) {\n            return Yu(u._a, t, 0 /* RemoteStore */);\n        }, o = Mo.Kn() ? new Mo : new Uo, new Zo(e, n, r, i, o);\n    }, t.prototype.e_ = function(t, e) {\n        return function(t, e, n, \n        // PORTING NOTE: Manages state synchronization in multi-tab environments.\n        r, i, o, u) {\n            var s = new Fu(t, e, n, r, i, o);\n            return u && (s.kl = !0), s;\n        }(this.bh, this.yl, this.gl, this.Vl, t.Jl, t.pl, e);\n    }, t.prototype.terminate = function() {\n        return function(t) {\n            return g(this, void 0, void 0, (function() {\n                var e;\n                return w(this, (function(n) {\n                    switch (n.label) {\n                      case 0:\n                        return e = O(t), N(\"RemoteStore\", \"RemoteStore shutting down.\"), e.Nh.add(5 /* Shutdown */), \n                        [ 4 /*yield*/ , $o(e) ];\n\n                      case 1:\n                        return n.sent(), e.Fh.ko(), \n                        // Set the OnlineState to Unknown (rather than Offline) to avoid potentially\n                        // triggering spurious listener events with cached data, etc.\n                        e.Oh.set(\"Unknown\" /* Unknown */), [ 2 /*return*/ ];\n                    }\n                }));\n            }));\n        }(this.yl);\n    }, t;\n}();\n\n/**\n * Provides all components needed for Firestore with IndexedDB persistence.\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * How many bytes to read each time when `ReadableStreamReader.read()` is\n * called. Only applicable for byte streams that we control (e.g. those backed\n * by an UInt8Array).\n */\n/**\n * Builds a `ByteStreamReader` from a UInt8Array.\n * @param source - The data source to use.\n * @param bytesPerRead - How many bytes each `read()` from the returned reader\n *        will read.\n */\nfunction Es(t, e) {\n    void 0 === e && (e = 10240);\n    var n = 0;\n    return {\n        read: function() {\n            return g(this, void 0, void 0, (function() {\n                var r;\n                return w(this, (function(i) {\n                    return n < t.byteLength ? (r = {\n                        value: t.slice(n, n + e),\n                        done: !1\n                    }, [ 2 /*return*/ , (n += e, r) ]) : [ 2 /*return*/ , {\n                        done: !0\n                    } ];\n                    // TypesScript's lib.dom.d.ts doesn't have proper typings of\n                    // ReadableStreamReadResult yet.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                }));\n            }));\n        },\n        cancel: function() {\n            return g(this, void 0, void 0, (function() {\n                return w(this, (function(t) {\n                    return [ 2 /*return*/ ];\n                }));\n            }));\n        },\n        releaseLock: function() {}\n    };\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * On web, a `ReadableStream` is wrapped around by a `ByteStreamReader`.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/*\n * A wrapper implementation of Observer<T> that will dispatch events\n * asynchronously. To allow immediate silencing, a mute call is added which\n * causes events scheduled to no longer be raised.\n */ var Ts = /** @class */ function() {\n    function t(t) {\n        this.observer = t, \n        /**\n             * When set to true, will not raise future events. Necessary to deal with\n             * async detachment of listener.\n             */\n        this.muted = !1;\n    }\n    return t.prototype.next = function(t) {\n        this.observer.next && this.s_(this.observer.next, t);\n    }, t.prototype.error = function(t) {\n        this.observer.error ? this.s_(this.observer.error, t) : console.error(\"Uncaught Error in snapshot listener:\", t);\n    }, t.prototype.i_ = function() {\n        this.muted = !0;\n    }, t.prototype.s_ = function(t, e) {\n        var n = this;\n        this.muted || setTimeout((function() {\n            n.muted || t(e);\n        }), 0);\n    }, t;\n}(), Ns = /** @class */ function() {\n    function t(\n    /** The reader to read from underlying binary bundle data source. */\n    t, e) {\n        var n = this;\n        this.r_ = t, this.Qt = e, \n        /** Cached bundle metadata. */\n        this.metadata = new fr, \n        /**\n             * Internal buffer to hold bundle content, accumulating incomplete element\n             * content.\n             */\n        this.buffer = new Uint8Array, this.o_ = new TextDecoder(\"utf-8\"), \n        // Read the metadata (which is the first element).\n        this.c_().then((function(t) {\n            t && t.sl() ? n.metadata.resolve(t.payload.metadata) : n.metadata.reject(new Error(\"The first element of the bundle is not a metadata, it is\\n             \" + JSON.stringify(null == t ? void 0 : t.payload)));\n        }), (function(t) {\n            return n.metadata.reject(t);\n        }));\n    }\n    return t.prototype.close = function() {\n        return this.r_.cancel();\n    }, t.prototype.getMetadata = function() {\n        return g(this, void 0, void 0, (function() {\n            return w(this, (function(t) {\n                return [ 2 /*return*/ , this.metadata.promise ];\n            }));\n        }));\n    }, t.prototype.Ql = function() {\n        return g(this, void 0, void 0, (function() {\n            return w(this, (function(t) {\n                switch (t.label) {\n                  case 0:\n                    return [ 4 /*yield*/ , this.getMetadata() ];\n\n                  case 1:\n                    // Makes sure metadata is read before proceeding.\n                    return [ 2 /*return*/ , (t.sent(), this.c_()) ];\n                }\n            }));\n        }));\n    }, \n    /**\n     * Reads from the head of internal buffer, and pulling more data from\n     * underlying stream if a complete element cannot be found, until an\n     * element(including the prefixed length and the JSON string) is found.\n     *\n     * Once a complete element is read, it is dropped from internal buffer.\n     *\n     * Returns either the bundled element, or null if we have reached the end of\n     * the stream.\n     */\n    t.prototype.c_ = function() {\n        return g(this, void 0, void 0, (function() {\n            var t, e, n, r;\n            return w(this, (function(i) {\n                switch (i.label) {\n                  case 0:\n                    return [ 4 /*yield*/ , this.a_() ];\n\n                  case 1:\n                    return null === (t = i.sent()) ? [ 2 /*return*/ , null ] : (e = this.o_.decode(t), \n                    n = Number(e), isNaN(n) && this.u_(\"length string (\" + e + \") is not valid number\"), \n                    [ 4 /*yield*/ , this.h_(n) ]);\n\n                  case 2:\n                    return r = i.sent(), [ 2 /*return*/ , new Ou(JSON.parse(r), t.length + n) ];\n                }\n            }));\n        }));\n    }, \n    /** First index of '{' from the underlying buffer. */ t.prototype.l_ = function() {\n        return this.buffer.findIndex((function(t) {\n            return t === \"{\".charCodeAt(0);\n        }));\n    }, \n    /**\n     * Reads from the beginning of the internal buffer, until the first '{', and\n     * return the content.\n     *\n     * If reached end of the stream, returns a null.\n     */\n    t.prototype.a_ = function() {\n        return g(this, void 0, void 0, (function() {\n            var t, e;\n            return w(this, (function(n) {\n                switch (n.label) {\n                  case 0:\n                    return this.l_() < 0 ? [ 4 /*yield*/ , this.__() ] : [ 3 /*break*/ , 3 ];\n\n                  case 1:\n                    if (n.sent()) return [ 3 /*break*/ , 3 ];\n                    n.label = 2;\n\n                  case 2:\n                    return [ 3 /*break*/ , 0 ];\n\n                  case 3:\n                    // Broke out of the loop because underlying stream is closed, and there\n                    // happens to be no more data to process.\n                    return 0 === this.buffer.length ? [ 2 /*return*/ , null ] : (\n                    // Broke out of the loop because underlying stream is closed, but still\n                    // cannot find an open bracket.\n                    (t = this.l_()) < 0 && this.u_(\"Reached the end of bundle when a length string is expected.\"), \n                    e = this.buffer.slice(0, t), [ 2 /*return*/ , (this.buffer = this.buffer.slice(t), \n                    e) ]);\n                }\n            }));\n        }));\n    }, \n    /**\n     * Reads from a specified position from the internal buffer, for a specified\n     * number of bytes, pulling more data from the underlying stream if needed.\n     *\n     * Returns a string decoded from the read bytes.\n     */\n    t.prototype.h_ = function(t) {\n        return g(this, void 0, void 0, (function() {\n            var e;\n            return w(this, (function(n) {\n                switch (n.label) {\n                  case 0:\n                    return this.buffer.length < t ? [ 4 /*yield*/ , this.__() ] : [ 3 /*break*/ , 3 ];\n\n                  case 1:\n                    n.sent() && this.u_(\"Reached the end of bundle when more is expected.\"), n.label = 2;\n\n                  case 2:\n                    return [ 3 /*break*/ , 0 ];\n\n                  case 3:\n                    // Update the internal buffer to drop the read json string.\n                    return e = this.o_.decode(this.buffer.slice(0, t)), [ 2 /*return*/ , (this.buffer = this.buffer.slice(t), \n                    e) ];\n                }\n            }));\n        }));\n    }, t.prototype.u_ = function(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        throw this.r_.cancel(), new Error(\"Invalid bundle format: \" + t);\n    }, \n    /**\n     * Pulls more data from underlying stream to internal buffer.\n     * Returns a boolean indicating whether the stream is finished.\n     */\n    t.prototype.__ = function() {\n        return g(this, void 0, void 0, (function() {\n            var t, e;\n            return w(this, (function(n) {\n                switch (n.label) {\n                  case 0:\n                    return [ 4 /*yield*/ , this.r_.read() ];\n\n                  case 1:\n                    return (t = n.sent()).done || ((e = new Uint8Array(this.buffer.length + t.value.length)).set(this.buffer), \n                    e.set(t.value, this.buffer.length), this.buffer = e), [ 2 /*return*/ , t.done ];\n                }\n            }));\n        }));\n    }, t;\n}(), As = /** @class */ function() {\n    /**\n     * Creates a FieldPath from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    function t() {\n        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];\n        for (var n = 0; n < t.length; ++n) if (0 === t[n].length) throw new q(M.INVALID_ARGUMENT, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this.f_ = new $(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    return t.prototype.isEqual = function(t) {\n        return this.f_.isEqual(t.f_);\n    }, t;\n}(), Ds = \n/**\n     * @param _methodName - The public API endpoint that returns this class.\n     */\nfunction(t) {\n    this._methodName = t;\n}, Ss = function(t) {\n    this.d_ = t;\n};\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A class representing a bundle.\n *\n * Takes a bundle stream or buffer, and presents abstractions to read bundled\n * elements out of the underlying content.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction xs(t, e, n) {\n    if (!n) throw new q(M.INVALID_ARGUMENT, \"Function \" + t + \"() cannot be called with an empty \" + e + \".\");\n}\n\nfunction ks(t, e) {\n    if (void 0 === e) return {\n        merge: !1\n    };\n    if (void 0 !== e.mergeFields && void 0 !== e.merge) throw new q(M.INVALID_ARGUMENT, \"Invalid options passed to function \" + t + '(): You cannot specify both \"merge\" and \"mergeFields\".');\n    return e;\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n */ function Os(t, e, n, r) {\n    if (!0 === e && !0 === r) throw new q(M.INVALID_ARGUMENT, t + \" and \" + n + \" cannot be used together.\");\n}\n\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */ function Ps(t) {\n    if (!tt.wt(t)) throw new q(M.INVALID_ARGUMENT, \"Invalid document reference. Document references must have an even number of segments, but \" + t + \" has \" + t.length + \".\");\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function Vs(t) {\n    if (tt.wt(t)) throw new q(M.INVALID_ARGUMENT, \"Invalid collection reference. Collection references must have an odd number of segments, but \" + t + \" has \" + t.length + \".\");\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */ function Cs(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = t.substring(0, 20) + \"...\"), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        var e = \n        /** Hacky method to try to get the constructor name for an object. */\n        function(t) {\n            if (t.constructor) {\n                var e = /function\\s+([^\\s(]+)\\s*\\(/.exec(t.constructor.toString());\n                if (e && e.length > 1) return e[1];\n            }\n            return null;\n        }(t);\n        return e ? \"a custom \" + e + \" object\" : \"an object\";\n    }\n    return \"function\" == typeof t ? \"a function\" : x();\n}\n\nfunction Ls(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t.d_), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new q(M.INVALID_ARGUMENT, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        var n = Cs(t);\n        throw new q(M.INVALID_ARGUMENT, \"Expected type '\" + e.name + \"', but it was: \" + n);\n    }\n    return t;\n}\n\nfunction Rs(t, e) {\n    if (e <= 0) throw new q(M.INVALID_ARGUMENT, \"Function \" + t + \"() requires a positive number, but it was: \" + e + \".\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// settings() defaults:\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied firestore.Settings object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */ var Us = /** @class */ function() {\n    function t(t) {\n        var e;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new q(M.INVALID_ARGUMENT, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = !0;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new q(M.INVALID_ARGUMENT, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        Os(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    return t.prototype.isEqual = function(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties;\n    }, t;\n}(), Ms = new Map, qs = /** @class */ function() {\n    /** @hideconstructor */\n    function t(t, e) {\n        this.w_ = \"(lite)\", this.E_ = new Us({}), this.T_ = !1, t instanceof I ? (this.I_ = t, \n        this.m_ = new G) : (this.A_ = t, this.I_ = function(t) {\n            if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new q(M.INVALID_ARGUMENT, '\"projectId\" not provided in firebase.initializeApp.');\n            return new I(t.options.projectId);\n        }(t), this.m_ = new B(e));\n    }\n    return Object.defineProperty(t.prototype, \"app\", {\n        /**\n         * The {@link FirebaseApp} associated with this `Firestore` service\n         * instance.\n         */\n        get: function() {\n            if (!this.A_) throw new q(M.FAILED_PRECONDITION, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n            return this.A_;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(t.prototype, \"R_\", {\n        get: function() {\n            return this.T_;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(t.prototype, \"P_\", {\n        get: function() {\n            return void 0 !== this.y_;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), t.prototype.g_ = function(t) {\n        if (this.T_) throw new q(M.FAILED_PRECONDITION, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this.E_ = new Us(t), void 0 !== t.credentials && (this.m_ = function(t) {\n            if (!t) return new G;\n            switch (t.type) {\n              case \"gapi\":\n                var e = t.client;\n                // Make sure this really is a Gapi client.\n                                return k(!(\"object\" != typeof e || null === e || !e.auth || !e.auth.getAuthHeaderValueForFirstParty)), \n                new Y(e, t.sessionIndex || \"0\");\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new q(M.INVALID_ARGUMENT, \"makeCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }, t.prototype.V_ = function() {\n        return this.E_;\n    }, t.prototype.p_ = function() {\n        return this.T_ = !0, this.E_;\n    }, t.prototype._delete = function() {\n        return this.y_ || (this.y_ = this.b_()), this.y_;\n    }, t.prototype.toJSON = function() {\n        return {\n            app: this.A_,\n            t: this.I_,\n            settings: this.E_\n        };\n    }, \n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */\n    t.prototype.b_ = function() {\n        /**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n        return t = this, (e = Ms.get(t)) && (N(\"ComponentProvider\", \"Removing Datastore\"), \n        Ms.delete(t), e.terminate()), Promise.resolve();\n        var t, e;\n    }, t;\n}(), Fs = /** @class */ function() {\n    /** @hideconstructor */\n    function t(t, e, n) {\n        this.v_ = e, this.S_ = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    return Object.defineProperty(t.prototype, \"D_\", {\n        get: function() {\n            return this.S_.path;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(t.prototype, \"id\", {\n        /**\n         * The document's identifier within its collection.\n         */\n        get: function() {\n            return this.S_.path.tt();\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(t.prototype, \"path\", {\n        /**\n         * A string representing the path of the referenced document (relative\n         * to the root of the database).\n         */\n        get: function() {\n            return this.S_.path.rt();\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(t.prototype, \"parent\", {\n        /**\n         * The collection this `DocumentReference` belongs to.\n         */\n        get: function() {\n            return new zs(this.firestore, this.v_, this.S_.path.X());\n        },\n        enumerable: !1,\n        configurable: !0\n    }), \n    /**\n     * Applies a custom data converter to this `DocumentReference`, allowing you\n     * to use your own custom model objects with Firestore. When you call {@link\n     * setDoc}, {@link getDoc}, etc. with the returned `DocumentReference`\n     * instance, the provided converter will convert between Firestore data and\n     * your custom type `U`.\n     *\n     * @param converter - Converts objects to and from Firestore.\n     * @returns A `DocumentReference<U>` that uses the provided converter.\n     */\n    t.prototype.withConverter = function(e) {\n        return new t(this.firestore, e, this.S_);\n    }, t;\n}(), js = /** @class */ function() {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    function t(t, e, n) {\n        this.v_ = e, this.C_ = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t\n        /**\n     * Applies a custom data converter to this query, allowing you to use your own\n     * custom model objects with Firestore. When you call {@link getDocs} with\n     * the returned query, the provided converter will convert between Firestore\n     * data and your custom type `U`.\n     *\n     * @param converter - Converts objects to and from Firestore.\n     * @returns A `Query<U>` that uses the provided converter.\n     */;\n    }\n    return t.prototype.withConverter = function(e) {\n        return new t(this.firestore, e, this.C_);\n    }, t;\n}(), zs = /** @class */ function(t) {\n    /** @hideconstructor */\n    function e(e, n, r) {\n        var i = this;\n        return (i = t.call(this, e, n, re(r)) || this).firestore = e, i.D_ = r, i.type = \"collection\", \n        i;\n    }\n    return m(e, t), Object.defineProperty(e.prototype, \"id\", {\n        /** The collection's identifier. */ get: function() {\n            return this.C_.path.tt();\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(e.prototype, \"path\", {\n        /**\n         * A string representing the path of the referenced collection (relative\n         * to the root of the database).\n         */\n        get: function() {\n            return this.C_.path.rt();\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(e.prototype, \"parent\", {\n        /**\n         * A reference to the containing `DocumentReference` if this is a\n         * subcollection. If this isn't a subcollection, the reference is null.\n         */\n        get: function() {\n            var t = this.D_.X();\n            return t.et() ? null : new Fs(this.firestore, \n            /* converter= */ null, new tt(t));\n        },\n        enumerable: !1,\n        configurable: !0\n    }), \n    /**\n     * Applies a custom data converter to this CollectionReference, allowing you\n     * to use your own custom model objects with Firestore. When you call {@link\n     * addDoc} with the returned `CollectionReference` instance, the provided\n     * converter will convert between Firestore data and your custom type `U`.\n     *\n     * @param converter - Converts objects to and from Firestore.\n     * @returns A `CollectionReference<U>` that uses the provided converter.\n     */\n    e.prototype.withConverter = function(t) {\n        return new e(this.firestore, t, this.D_);\n    }, e;\n}(js);\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function Gs(t, e) {\n    for (var n, r = [], i = 2; i < arguments.length; i++) r[i - 2] = arguments[i];\n    if (t instanceof Ss && (t = t.d_), xs(\"collection\", \"path\", e), t instanceof qs) return Vs(n = Z.ot.apply(Z, b([ e ], r))), \n    new zs(t, /* converter= */ null, n);\n    if (!(t instanceof Fs || t instanceof zs)) throw new q(M.INVALID_ARGUMENT, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n    return Vs(n = Z.ot.apply(Z, b([ t.path ], r)).child(Z.ot(e))), new zs(t.firestore, \n    /* converter= */ null, n);\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root Firestore instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function Bs(t, e) {\n    for (var n, r = [], i = 2; i < arguments.length; i++) r[i - 2] = arguments[i];\n    if (t instanceof Ss && (t = t.d_), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = V.u()), xs(\"doc\", \"path\", e), t instanceof qs) return Ps(n = Z.ot.apply(Z, b([ e ], r))), \n    new Fs(t, \n    /* converter= */ null, new tt(n));\n    if (!(t instanceof Fs || t instanceof zs)) throw new q(M.INVALID_ARGUMENT, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n    return Ps(n = t.D_.child(Z.ot.apply(Z, b([ e ], r)))), new Fs(t.firestore, t instanceof zs ? t.v_ : null, new tt(n));\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function Qs(t, e) {\n    return t instanceof Ss && (t = t.d_), e instanceof Ss && (e = e.d_), (t instanceof Fs || t instanceof zs) && (e instanceof Fs || e instanceof zs) && t.firestore === e.firestore && t.path === e.path && t.v_ === e.v_\n    /**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */;\n}\n\nfunction Ys(t, e) {\n    return t instanceof Ss && (t = t.d_), e instanceof Ss && (e = e.d_), t instanceof js && e instanceof js && t.firestore === e.firestore && le(t.C_, e.C_) && t.v_ === e.v_\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */;\n}\n\nvar Hs = /** @class */ function() {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    function t(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new q(M.INVALID_ARGUMENT, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new q(M.INVALID_ARGUMENT, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this.x_ = t, this.N_ = e;\n    }\n    return Object.defineProperty(t.prototype, \"latitude\", {\n        /**\n         * The latitude of this `GeoPoint` instance.\n         */\n        get: function() {\n            return this.x_;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(t.prototype, \"longitude\", {\n        /**\n         * The longitude of this `GeoPoint` instance.\n         */\n        get: function() {\n            return this.N_;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), \n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */\n    t.prototype.isEqual = function(t) {\n        return this.x_ === t.x_ && this.N_ === t.N_;\n    }, t.prototype.toJSON = function() {\n        return {\n            latitude: this.x_,\n            longitude: this.N_\n        };\n    }, \n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */\n    t.prototype.U = function(t) {\n        return C(this.x_, t.x_) || C(this.N_, t.N_);\n    }, t;\n}(), Ks = /^__.*__$/, Xs = /** @class */ function() {\n    function t(t, e, n) {\n        this.data = t, this.Gt = e, this.fieldTransforms = n;\n    }\n    return t.prototype.F_ = function(t, e) {\n        return null !== this.Gt ? new Qe(t, this.data, this.Gt, e, this.fieldTransforms) : new Be(t, this.data, e, this.fieldTransforms);\n    }, t;\n}(), Ws = /** @class */ function() {\n    function t(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.Gt = e, this.fieldTransforms = n;\n    }\n    return t.prototype.F_ = function(t, e) {\n        return new Qe(t, this.data, this.Gt, e, this.fieldTransforms);\n    }, t;\n}();\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function Zs(t) {\n    switch (t) {\n      case 0 /* Set */ :\n // fall through\n              case 2 /* MergeSet */ :\n // fall through\n              case 1 /* Update */ :\n        return !0;\n\n      case 3 /* Argument */ :\n      case 4 /* ArrayArgument */ :\n        return !1;\n\n      default:\n        throw x();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ var Js = /** @class */ function() {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    function t(t, e, n, r, i, o) {\n        this.settings = t, this.t = e, this.Qt = n, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === i && this.O_(), this.fieldTransforms = i || [], this.Gt = o || [];\n    }\n    return Object.defineProperty(t.prototype, \"path\", {\n        get: function() {\n            return this.settings.path;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(t.prototype, \"k_\", {\n        get: function() {\n            return this.settings.k_;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), \n    /** Returns a new context with the specified settings overwritten. */ t.prototype.M_ = function(e) {\n        return new t(Object.assign(Object.assign({}, this.settings), e), this.t, this.Qt, this.ignoreUndefinedProperties, this.fieldTransforms, this.Gt);\n    }, t.prototype.L_ = function(t) {\n        var e, n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.M_({\n            path: n,\n            B_: !1\n        });\n        return r.q_(t), r;\n    }, t.prototype.U_ = function(t) {\n        var e, n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.M_({\n            path: n,\n            B_: !1\n        });\n        return r.O_(), r;\n    }, t.prototype.Q_ = function(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.M_({\n            path: void 0,\n            B_: !0\n        });\n    }, t.prototype.K_ = function(t) {\n        return ga(t, this.settings.methodName, this.settings.W_ || !1, this.path, this.settings.j_);\n    }, \n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */ t.prototype.contains = function(t) {\n        return void 0 !== this.Gt.find((function(e) {\n            return t.nt(e);\n        })) || void 0 !== this.fieldTransforms.find((function(e) {\n            return t.nt(e.field);\n        }));\n    }, t.prototype.O_ = function() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (var t = 0; t < this.path.length; t++) this.q_(this.path.get(t));\n    }, t.prototype.q_ = function(t) {\n        if (0 === t.length) throw this.K_(\"Document fields must not be empty\");\n        if (Zs(this.k_) && Ks.test(t)) throw this.K_('Document fields cannot begin and end with \"__\"');\n    }, t;\n}(), $s = /** @class */ function() {\n    function t(t, e, n) {\n        this.t = t, this.ignoreUndefinedProperties = e, this.Qt = n || Bo(t)\n        /** Creates a new top-level parse context. */;\n    }\n    return t.prototype.G_ = function(t, e, n, r) {\n        return void 0 === r && (r = !1), new Js({\n            k_: t,\n            methodName: e,\n            j_: n,\n            path: $.ct(),\n            B_: !1,\n            W_: r\n        }, this.t, this.Qt, this.ignoreUndefinedProperties);\n    }, t;\n}();\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ function ta(t) {\n    var e = t.p_(), n = Bo(t.I_);\n    return new $s(t.I_, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function ea(t, e, n, r, i, o) {\n    void 0 === o && (o = {});\n    var u = t.G_(o.merge || o.mergeFields ? 2 /* MergeSet */ : 0 /* Set */ , e, n, i);\n    da(\"Data must be an object, but it was:\", u, r);\n    var s, a, c = la(r, u);\n    if (o.merge) s = new it(u.Gt), a = u.fieldTransforms; else if (o.mergeFields) {\n        for (var h = [], f = 0, l = o.mergeFields; f < l.length; f++) {\n            var p = va(e, l[f], n);\n            if (!u.contains(p)) throw new q(M.INVALID_ARGUMENT, \"Field '\" + p + \"' is specified in your field mask but missing from your input data.\");\n            wa(h, p) || h.push(p);\n        }\n        s = new it(h), a = u.fieldTransforms.filter((function(t) {\n            return s.Tt(t.field);\n        }));\n    } else s = null, a = u.fieldTransforms;\n    return new Xs(new St(c), s, a);\n}\n\nvar na = /** @class */ function(t) {\n    function e() {\n        return null !== t && t.apply(this, arguments) || this;\n    }\n    return m(e, t), e.prototype.z_ = function(t) {\n        if (2 /* MergeSet */ !== t.k_) throw 1 /* Update */ === t.k_ ? t.K_(this._methodName + \"() can only appear at the top level of your update data\") : t.K_(this._methodName + \"() cannot be used with set() unless you pass {merge:true}\");\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n                return t.Gt.push(t.path), null;\n    }, e.prototype.isEqual = function(t) {\n        return t instanceof e;\n    }, e;\n}(Ds);\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function ra(t, e, n) {\n    return new Js({\n        k_: 3 /* Argument */ ,\n        j_: e.settings.j_,\n        methodName: t._methodName,\n        B_: n\n    }, e.t, e.Qt, e.ignoreUndefinedProperties);\n}\n\nvar ia = /** @class */ function(t) {\n    function e() {\n        return null !== t && t.apply(this, arguments) || this;\n    }\n    return m(e, t), e.prototype.z_ = function(t) {\n        return new Ce(t.path, new Ae);\n    }, e.prototype.isEqual = function(t) {\n        return t instanceof e;\n    }, e;\n}(Ds), oa = /** @class */ function(t) {\n    function e(e, n) {\n        var r = this;\n        return (r = t.call(this, e) || this).H_ = n, r;\n    }\n    return m(e, t), e.prototype.z_ = function(t) {\n        var e = ra(this, t, \n        /*array=*/ !0), n = this.H_.map((function(t) {\n            return fa(t, e);\n        })), r = new De(n);\n        return new Ce(t.path, r);\n    }, e.prototype.isEqual = function(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }, e;\n}(Ds), ua = /** @class */ function(t) {\n    function e(e, n) {\n        var r = this;\n        return (r = t.call(this, e) || this).H_ = n, r;\n    }\n    return m(e, t), e.prototype.z_ = function(t) {\n        var e = ra(this, t, \n        /*array=*/ !0), n = this.H_.map((function(t) {\n            return fa(t, e);\n        })), r = new xe(n);\n        return new Ce(t.path, r);\n    }, e.prototype.isEqual = function(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }, e;\n}(Ds), sa = /** @class */ function(t) {\n    function e(e, n) {\n        var r = this;\n        return (r = t.call(this, e) || this).J_ = n, r;\n    }\n    return m(e, t), e.prototype.z_ = function(t) {\n        var e = new Oe(t.Qt, _e(t.Qt, this.J_));\n        return new Ce(t.path, e);\n    }, e.prototype.isEqual = function(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }, e;\n}(Ds);\n\n/** Parse update data from an update() call. */ function aa(t, e, n, r) {\n    var i = t.G_(1 /* Update */ , e, n);\n    da(\"Data must be an object, but it was:\", i, r);\n    var o = [], u = new xt;\n    nt(r, (function(t, r) {\n        var s = ma(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r instanceof Ss && (r = r.d_);\n        var a = i.U_(s);\n        if (r instanceof na) \n        // Add it to the field mask, but don't add anything to updateData.\n        o.push(s); else {\n            var c = fa(r, a);\n            null != c && (o.push(s), u.set(s, c));\n        }\n    }));\n    var s = new it(o);\n    return new Ws(u.Pt(), s, i.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function ca(t, e, n, r, i, o) {\n    var u = t.G_(1 /* Update */ , e, n), s = [ va(e, r, n) ], a = [ i ];\n    if (o.length % 2 != 0) throw new q(M.INVALID_ARGUMENT, \"Function \" + e + \"() needs to be called with an even number of arguments that alternate between field names and values.\");\n    for (var c = 0; c < o.length; c += 2) s.push(va(e, o[c])), a.push(o[c + 1]);\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (var h = [], f = new xt, l = s.length - 1; l >= 0; --l) if (!wa(h, s[l])) {\n        var p = s[l], d = a[l];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n        d instanceof Ss && (d = d.d_);\n        var v = u.U_(p);\n        if (d instanceof na) \n        // Add it to the field mask, but don't add anything to updateData.\n        h.push(p); else {\n            var y = fa(d, v);\n            null != y && (h.push(p), f.set(p, y));\n        }\n    }\n    var m = new it(h);\n    return new Ws(f.Pt(), m, u.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function ha(t, e, n, r) {\n    return void 0 === r && (r = !1), fa(n, t.G_(r ? 4 /* ArrayArgument */ : 3 /* Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function fa(t, e) {\n    if (\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t instanceof Ss && (t = t.d_), pa(t)) return da(\"Unsupported field value:\", e, t), \n    la(t, e);\n    if (t instanceof Ds) \n    // FieldValues usually parse into transforms (except FieldValue.delete())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n     * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n     * context.fieldTransforms.\n     */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!Zs(e.k_)) throw e.K_(t._methodName + \"() can only be used with update() and set()\");\n        if (!e.path) throw e.K_(t._methodName + \"() is not currently supported inside arrays\");\n        var n = t.z_(e);\n        n && e.fieldTransforms.push(n);\n    }(t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.Gt.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.B_ && 4 /* ArrayArgument */ !== e.k_) throw e.K_(\"Nested arrays are not supported\");\n        return function(t, e) {\n            for (var n = [], r = 0, i = 0, o = t; i < o.length; i++) {\n                var u = fa(o[i], e.Q_(r));\n                null == u && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                u = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(u), r++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (t instanceof Ss && (t = t.d_), null === t) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return _e(e.Qt, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            var n = K.fromDate(t);\n            return {\n                timestampValue: Ln(e.Qt, n)\n            };\n        }\n        if (t instanceof K) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            n = new K(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: Ln(e.Qt, n)\n            };\n        }\n        if (t instanceof Hs) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof F) return {\n            bytesValue: Rn(e.Qt, t.I)\n        };\n        if (t instanceof Fs) {\n            n = e.t;\n            var r = t.firestore.I_;\n            if (!r.isEqual(n)) throw e.K_(\"Document reference is for database \" + r.projectId + \"/\" + r.database + \" but should be for database \" + n.projectId + \"/\" + n.database);\n            return {\n                referenceValue: qn(t.firestore.I_ || e.t, t.S_.path)\n            };\n        }\n        throw e.K_(\"Unsupported field value: \" + Cs(t));\n    }(t, e);\n}\n\nfunction la(t, e) {\n    var n = {};\n    return rt(t) ? \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.Gt.push(e.path) : nt(t, (function(t, r) {\n        var i = fa(r, e.L_(t));\n        null != i && (n[t] = i);\n    })), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction pa(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof K || t instanceof Hs || t instanceof F || t instanceof Fs || t instanceof Ds);\n}\n\nfunction da(t, e, n) {\n    if (!pa(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        var r = Cs(n);\n        throw \"an object\" === r ? e.K_(t + \" a custom object\") : e.K_(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function va(t, e, n) {\n    if (\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e instanceof Ss && (e = e.d_), e instanceof As) return e.f_;\n    if (\"string\" == typeof e) return ma(t, e);\n    throw ga(\"Field path arguments must be of type string or FieldPath.\", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ var ya = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function ma(t, e, n) {\n    if (e.search(ya) >= 0) throw ga(\"Invalid field path (\" + e + \"). Paths must not contain '~', '*', '/', '[', or ']'\", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return (new (As.bind.apply(As, b([ void 0 ], e.split(\".\"))))).f_;\n    } catch (r) {\n        throw ga(\"Invalid field path (\" + e + \"). Paths must not be empty, begin with '.', end with '.', or contain '..'\", t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction ga(t, e, n, r, i) {\n    var o = r && !r.et(), u = void 0 !== i, s = \"Function \" + e + \"() called with invalid data\";\n    n && (s += \" (via `toFirestore()`)\");\n    var a = \"\";\n    return (o || u) && (a += \" (found\", o && (a += \" in field \" + r), u && (a += \" in document \" + i), \n    a += \")\"), new q(M.INVALID_ARGUMENT, (s += \". \") + t + a)\n    /** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */;\n}\n\nfunction wa(t, e) {\n    return t.some((function(t) {\n        return t.isEqual(e);\n    }));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ var ba = /** @class */ function() {\n    function t(t) {\n        this.Sh = t, \n        // The version of each document that was read during this transaction.\n        this.Y_ = new Map, this.mutations = [], this.X_ = !1, \n        /**\n             * A deferred usage error that occurred previously in this transaction that\n             * will cause the transaction to fail once it actually commits.\n             */\n        this.Z_ = null, \n        /**\n             * Set of documents that have been written in the transaction.\n             *\n             * When there's more than one write to the same key in a transaction, any\n             * writes after the first are handled differently.\n             */\n        this.tf = new Set;\n    }\n    return t.prototype.ef = function(t) {\n        return g(this, void 0, void 0, (function() {\n            var e, n = this;\n            return w(this, (function(r) {\n                switch (r.label) {\n                  case 0:\n                    if (this.nf(), this.mutations.length > 0) throw new q(M.INVALID_ARGUMENT, \"Firestore transactions require all reads to be executed before all writes.\");\n                    return [ 4 /*yield*/ , function(t, e) {\n                        return g(this, void 0, void 0, (function() {\n                            var n, r, i, o, u, s;\n                            return w(this, (function(a) {\n                                switch (a.label) {\n                                  case 0:\n                                    return n = O(t), r = Qn(n.Qt) + \"/documents\", i = {\n                                        documents: e.map((function(t) {\n                                            return jn(n.Qt, t);\n                                        }))\n                                    }, [ 4 /*yield*/ , n.Du(\"BatchGetDocuments\", r, i) ];\n\n                                  case 1:\n                                    return o = a.sent(), u = new Map, o.forEach((function(t) {\n                                        var e = function(t, e) {\n                                            return \"found\" in e ? function(t, e) {\n                                                k(!!e.found), e.found.name, e.found.updateTime;\n                                                var n = zn(t, e.found.name), r = Mn(e.found.updateTime), i = new St({\n                                                    mapValue: {\n                                                        fields: e.found.fields\n                                                    }\n                                                });\n                                                return new Pt(n, r, i, {});\n                                            }(t, e) : \"missing\" in e ? function(t, e) {\n                                                k(!!e.missing), k(!!e.readTime);\n                                                var n = zn(t, e.missing), r = Mn(e.readTime);\n                                                return new Vt(n, r);\n                                            }(t, e) : x();\n                                        }(n.Qt, t);\n                                        u.set(e.key.toString(), e);\n                                    })), s = [], [ 2 /*return*/ , (e.forEach((function(t) {\n                                        var e = u.get(t.toString());\n                                        k(!!e), s.push(e);\n                                    })), s) ];\n                                }\n                            }));\n                        }));\n                    }(this.Sh, t) ];\n\n                  case 1:\n                    return [ 2 /*return*/ , ((e = r.sent()).forEach((function(t) {\n                        t instanceof Vt || t instanceof Pt ? n.sf(t) : x();\n                    })), e) ];\n                }\n            }));\n        }));\n    }, t.prototype.set = function(t, e) {\n        this.write(e.F_(t, this.jt(t))), this.tf.add(t.toString());\n    }, t.prototype.update = function(t, e) {\n        try {\n            this.write(e.F_(t, this.rf(t)));\n        } catch (t) {\n            this.Z_ = t;\n        }\n        this.tf.add(t.toString());\n    }, t.prototype.delete = function(t) {\n        this.write(new Je(t, this.jt(t))), this.tf.add(t.toString());\n    }, t.prototype.commit = function() {\n        return g(this, void 0, void 0, (function() {\n            var t, e = this;\n            return w(this, (function(n) {\n                switch (n.label) {\n                  case 0:\n                    if (this.nf(), this.Z_) throw this.Z_;\n                    return t = this.Y_, \n                    // For each mutation, note that the doc was written.\n                    this.mutations.forEach((function(e) {\n                        t.delete(e.key.toString());\n                    })), \n                    // For each document that was read but not written to, we want to perform\n                    // a `verify` operation.\n                    t.forEach((function(t, n) {\n                        var r = tt._t(n);\n                        e.mutations.push(new $e(r, e.jt(r)));\n                    })), [ 4 /*yield*/ , function(t, e) {\n                        return g(this, void 0, void 0, (function() {\n                            var n, r, i;\n                            return w(this, (function(o) {\n                                switch (o.label) {\n                                  case 0:\n                                    return n = O(t), r = Qn(n.Qt) + \"/documents\", i = {\n                                        writes: e.map((function(t) {\n                                            return Xn(n.Qt, t);\n                                        }))\n                                    }, [ 4 /*yield*/ , n.pu(\"Commit\", r, i) ];\n\n                                  case 1:\n                                    return o.sent(), [ 2 /*return*/ ];\n                                }\n                            }));\n                        }));\n                    }(this.Sh, this.mutations) ];\n\n                  case 1:\n                    // For each mutation, note that the doc was written.\n                    return n.sent(), this.X_ = !0, [ 2 /*return*/ ];\n                }\n            }));\n        }));\n    }, t.prototype.sf = function(t) {\n        var e;\n        if (t instanceof Pt) e = t.version; else {\n            if (!(t instanceof Vt)) throw x();\n            // For deleted docs, we must use baseVersion 0 when we overwrite them.\n                        e = X.min();\n        }\n        var n = this.Y_.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new q(M.ABORTED, \"Document version changed between two reads.\");\n        } else this.Y_.set(t.key.toString(), e);\n    }, \n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */\n    t.prototype.jt = function(t) {\n        var e = this.Y_.get(t.toString());\n        return !this.tf.has(t.toString()) && e ? Re.updateTime(e) : Re.Kt();\n    }, \n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */\n    t.prototype.rf = function(t) {\n        var e = this.Y_.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.tf.has(t.toString()) && e) {\n            if (e.isEqual(X.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new q(M.INVALID_ARGUMENT, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return Re.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n                return Re.exists(!0);\n    }, t.prototype.write = function(t) {\n        this.nf(), this.mutations.push(t);\n    }, t.prototype.nf = function() {}, t;\n}(), _a = /** @class */ function() {\n    function t(t, e, n, r) {\n        this._s = t, this.Sh = e, this.updateFunction = n, this.Es = r, this.cf = 5, this.Gu = new Qo(this._s, \"transaction_retry\" /* TransactionRetry */)\n        /** Runs the transaction and sets the result on deferred. */;\n    }\n    return t.prototype.run = function() {\n        this.af();\n    }, t.prototype.af = function() {\n        var t = this;\n        this.Gu.Lu((function() {\n            return g(t, void 0, void 0, (function() {\n                var t, e, n = this;\n                return w(this, (function(r) {\n                    return t = new ba(this.Sh), (e = this.uf(t)) && e.then((function(e) {\n                        n._s.Ps((function() {\n                            return t.commit().then((function() {\n                                n.Es.resolve(e);\n                            })).catch((function(t) {\n                                n.hf(t);\n                            }));\n                        }));\n                    })).catch((function(t) {\n                        n.hf(t);\n                    })), [ 2 /*return*/ ];\n                }));\n            }));\n        }));\n    }, t.prototype.uf = function(t) {\n        try {\n            var e = this.updateFunction(t);\n            return !lt(e) && e.catch && e.then ? e : (this.Es.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.Es.reject(t), null;\n        }\n    }, t.prototype.hf = function(t) {\n        var e = this;\n        this.cf > 0 && this.lf(t) ? (this.cf -= 1, this._s.Ps((function() {\n            return e.af(), Promise.resolve();\n        }))) : this.Es.reject(t);\n    }, t.prototype.lf = function(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            var e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || !en(e);\n        }\n        return !1;\n    }, t;\n}(), Ia = /** @class */ function() {\n    function t(t, \n    /**\n     * Asynchronous queue responsible for all of our internal processing. When\n     * we get incoming work from the user (via public API) or the network\n     * (incoming GRPC messages), we should always schedule onto this queue.\n     * This ensures all of our work is properly serialized (e.g. we don't\n     * start processing a new operation while the previous one is waiting for\n     * an async I/O to complete).\n     */\n    e, n) {\n        var r = this;\n        this.credentials = t, this._s = e, this.yu = n, this.user = j.UNAUTHENTICATED, this.clientId = V.u(), \n        this._f = function() {}, this.C = new fr, this.credentials.v((function(t) {\n            N(\"FirestoreClient\", \"Received user=\", t.uid), r.user = t, r._f(t), r.C.resolve();\n        }));\n    }\n    return t.prototype.getConfiguration = function() {\n        return g(this, void 0, void 0, (function() {\n            return w(this, (function(t) {\n                switch (t.label) {\n                  case 0:\n                    return [ 4 /*yield*/ , this.C.promise ];\n\n                  case 1:\n                    return [ 2 /*return*/ , (t.sent(), {\n                        _s: this._s,\n                        yu: this.yu,\n                        clientId: this.clientId,\n                        credentials: this.credentials,\n                        Jl: this.user,\n                        pl: 100\n                    }) ];\n                }\n            }));\n        }));\n    }, t.prototype.ff = function(t) {\n        var e = this;\n        this._f = t, \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.C.promise.then((function() {\n            return e._f(e.user);\n        }));\n    }, \n    /**\n     * Checks that the client has not been terminated. Ensures that other methods on\n     * this class cannot be called after the client is terminated.\n     */\n    t.prototype.df = function() {\n        if (this._s.wf) throw new q(M.FAILED_PRECONDITION, \"The client has already been terminated.\");\n    }, t.prototype.terminate = function() {\n        var t = this;\n        this._s.Ef();\n        var e = new fr;\n        return this._s.Tf((function() {\n            return g(t, void 0, void 0, (function() {\n                var t, n;\n                return w(this, (function(r) {\n                    switch (r.label) {\n                      case 0:\n                        return r.trys.push([ 0, 5, , 6 ]), this.If ? [ 4 /*yield*/ , this.If.terminate() ] : [ 3 /*break*/ , 2 ];\n\n                      case 1:\n                        r.sent(), r.label = 2;\n\n                      case 2:\n                        return this.mf ? [ 4 /*yield*/ , this.mf.terminate() ] : [ 3 /*break*/ , 4 ];\n\n                      case 3:\n                        r.sent(), r.label = 4;\n\n                      case 4:\n                        // `removeChangeListener` must be called after shutting down the\n                        // RemoteStore as it will prevent the RemoteStore from retrieving\n                        // auth tokens.\n                        return this.credentials.S(), e.resolve(), [ 3 /*break*/ , 6 ];\n\n                      case 5:\n                        return t = r.sent(), n = Er(t, \"Failed to shutdown persistence\"), e.reject(n), [ 3 /*break*/ , 6 ];\n\n                      case 6:\n                        return [ 2 /*return*/ ];\n                    }\n                }));\n            }));\n        })), e.promise;\n    }, t;\n}();\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */ function Ea(t, e) {\n    return g(this, void 0, void 0, (function() {\n        var n, r, i = this;\n        return w(this, (function(o) {\n            switch (o.label) {\n              case 0:\n                return t._s.Af(), N(\"FirestoreClient\", \"Initializing OfflineComponentProvider\"), \n                [ 4 /*yield*/ , t.getConfiguration() ];\n\n              case 1:\n                return n = o.sent(), [ 4 /*yield*/ , e.initialize(n) ];\n\n              case 2:\n                return o.sent(), r = n.Jl, t.ff((function(n) {\n                    r.isEqual(n) || (r = n, t._s.po((function() {\n                        return g(i, void 0, void 0, (function() {\n                            return w(this, (function(t) {\n                                switch (t.label) {\n                                  case 0:\n                                    return [ 4 /*yield*/ , no(e.bh, n) ];\n\n                                  case 1:\n                                    return t.sent(), [ 2 /*return*/ ];\n                                }\n                            }));\n                        }));\n                    })));\n                })), \n                // When a user calls clearPersistence() in one client, all other clients\n                // need to be terminated to allow the delete to succeed.\n                e.persistence.Po((function() {\n                    return t.terminate();\n                })), t.mf = e, [ 2 /*return*/ ];\n            }\n        }));\n    }));\n}\n\nfunction Ta(t, e) {\n    return g(this, void 0, void 0, (function() {\n        var n, r;\n        return w(this, (function(i) {\n            switch (i.label) {\n              case 0:\n                return t._s.Af(), [ 4 /*yield*/ , Na(t) ];\n\n              case 1:\n                return n = i.sent(), N(\"FirestoreClient\", \"Initializing OnlineComponentProvider\"), \n                [ 4 /*yield*/ , t.getConfiguration() ];\n\n              case 2:\n                return r = i.sent(), [ 4 /*yield*/ , e.initialize(n, r) ];\n\n              case 3:\n                return i.sent(), \n                // The CredentialChangeListener of the online component provider takes\n                // precedence over the offline component provider.\n                t.ff((function(n) {\n                    return t._s.po((function() {\n                        return function(t, e) {\n                            return g(this, void 0, void 0, (function() {\n                                var n, r;\n                                return w(this, (function(i) {\n                                    switch (i.label) {\n                                      case 0:\n                                        return (n = O(t))._s.Af(), N(\"RemoteStore\", \"RemoteStore received new credentials\"), \n                                        r = uu(n), \n                                        // Tear down and re-create our network streams. This will ensure we get a\n                                        // fresh auth token for the new user and re-fill the write pipeline with\n                                        // new mutations from the LocalStore (since mutations are per-user).\n                                        n.Nh.add(3 /* CredentialChange */), [ 4 /*yield*/ , $o(n) ];\n\n                                      case 1:\n                                        return i.sent(), r && \n                                        // Don't set the network status to Unknown if we are offline.\n                                        n.Oh.set(\"Unknown\" /* Unknown */), [ 4 /*yield*/ , n.Dh.n_(e) ];\n\n                                      case 2:\n                                        return i.sent(), n.Nh.delete(3 /* CredentialChange */), [ 4 /*yield*/ , Jo(n) ];\n\n                                      case 3:\n                                        // Tear down and re-create our network streams. This will ensure we get a\n                                        // fresh auth token for the new user and re-fill the write pipeline with\n                                        // new mutations from the LocalStore (since mutations are per-user).\n                                        return i.sent(), [ 2 /*return*/ ];\n                                    }\n                                }));\n                            }));\n                        }(e.yl, n);\n                    }));\n                })), t.If = e, [ 2 /*return*/ ];\n            }\n        }));\n    }));\n}\n\nfunction Na(t) {\n    return g(this, void 0, void 0, (function() {\n        return w(this, (function(e) {\n            switch (e.label) {\n              case 0:\n                return t.mf ? [ 3 /*break*/ , 2 ] : (N(\"FirestoreClient\", \"Using default OfflineComponentProvider\"), \n                [ 4 /*yield*/ , Ea(t, new ws) ]);\n\n              case 1:\n                e.sent(), e.label = 2;\n\n              case 2:\n                return [ 2 /*return*/ , t.mf ];\n            }\n        }));\n    }));\n}\n\nfunction Aa(t) {\n    return g(this, void 0, void 0, (function() {\n        return w(this, (function(e) {\n            switch (e.label) {\n              case 0:\n                return t.If ? [ 3 /*break*/ , 2 ] : (N(\"FirestoreClient\", \"Using default OnlineComponentProvider\"), \n                [ 4 /*yield*/ , Ta(t, new Is) ]);\n\n              case 1:\n                e.sent(), e.label = 2;\n\n              case 2:\n                return [ 2 /*return*/ , t.If ];\n            }\n        }));\n    }));\n}\n\nfunction Da(t) {\n    return Na(t).then((function(t) {\n        return t.persistence;\n    }));\n}\n\nfunction Sa(t) {\n    return Na(t).then((function(t) {\n        return t.bh;\n    }));\n}\n\nfunction xa(t) {\n    return Aa(t).then((function(t) {\n        return t.yl;\n    }));\n}\n\nfunction ka(t) {\n    return Aa(t).then((function(t) {\n        return t._a;\n    }));\n}\n\nfunction Oa(t) {\n    return g(this, void 0, void 0, (function() {\n        var e, n;\n        return w(this, (function(r) {\n            switch (r.label) {\n              case 0:\n                return [ 4 /*yield*/ , Aa(t) ];\n\n              case 1:\n                return e = r.sent(), [ 2 /*return*/ , ((n = e.gl).jh = ju.bind(null, e._a), n.Hh = Gu.bind(null, e._a), \n                n) ];\n            }\n        }));\n    }));\n}\n\n/** Enables the network connection and re-enqueues all pending operations. */ function Pa(t, e, n) {\n    var r = this;\n    void 0 === n && (n = {});\n    var i = new fr;\n    return t._s.Ps((function() {\n        return g(r, void 0, void 0, (function() {\n            var r;\n            return w(this, (function(o) {\n                switch (o.label) {\n                  case 0:\n                    return r = function(t, e, n, r, i) {\n                        var o = new Ts({\n                            next: function(o) {\n                                // Remove query first before passing event to user to avoid\n                                // user actions affecting the now stale query.\n                                e.Ps((function() {\n                                    return Au(t, u);\n                                }));\n                                var s = o.docs.has(n);\n                                !s && o.fromCache ? \n                                // TODO(dimond): If we're online and the document doesn't\n                                // exist then we resolve with a doc.exists set to false. If\n                                // we're offline however, we reject the Promise in this\n                                // case. Two options: 1) Cache the negative response from\n                                // the server so we can deliver that even when you're\n                                // offline 2) Actually reject the Promise in the online case\n                                // if the document doesn't exist.\n                                i.reject(new q(M.UNAVAILABLE, \"Failed to get document because the client is offline.\")) : s && o.fromCache && r && \"server\" === r.source ? i.reject(new q(M.UNAVAILABLE, 'Failed to get document from server. (However, this document does exist in the local cache. Run again without setting source to \"server\" to retrieve the cached document.)')) : i.resolve(o);\n                            },\n                            error: function(t) {\n                                return i.reject(t);\n                            }\n                        }), u = new ku(re(n.path), o, {\n                            includeMetadataChanges: !0,\n                            nl: !0\n                        });\n                        return Nu(t, u);\n                    }, [ 4 /*yield*/ , Oa(t) ];\n\n                  case 1:\n                    return [ 2 /*return*/ , r.apply(void 0, [ o.sent(), t._s, e, n, i ]) ];\n                }\n            }));\n        }));\n    })), i.promise;\n}\n\nfunction Va(t, e, n) {\n    var r = this;\n    void 0 === n && (n = {});\n    var i = new fr;\n    return t._s.Ps((function() {\n        return g(r, void 0, void 0, (function() {\n            var r;\n            return w(this, (function(o) {\n                switch (o.label) {\n                  case 0:\n                    return r = function(t, e, n, r, i) {\n                        var o = new Ts({\n                            next: function(n) {\n                                // Remove query first before passing event to user to avoid\n                                // user actions affecting the now stale query.\n                                e.Ps((function() {\n                                    return Au(t, u);\n                                })), n.fromCache && \"server\" === r.source ? i.reject(new q(M.UNAVAILABLE, 'Failed to get documents from server. (However, these documents may exist in the local cache. Run again without setting source to \"server\" to retrieve the cached documents.)')) : i.resolve(n);\n                            },\n                            error: function(t) {\n                                return i.reject(t);\n                            }\n                        }), u = new ku(n, o, {\n                            includeMetadataChanges: !0,\n                            nl: !0\n                        });\n                        return Nu(t, u);\n                    }, [ 4 /*yield*/ , Oa(t) ];\n\n                  case 1:\n                    return [ 2 /*return*/ , r.apply(void 0, [ o.sent(), t._s, e, n, i ]) ];\n                }\n            }));\n        }));\n    })), i.promise;\n}\n\nvar Ca = /** @class */ function() {\n    function t() {\n        var t = this;\n        // The last promise in the queue.\n                this.Rf = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Pf = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.yf = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.gf = [], \n        // visible for testing\n        this.Vf = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.pf = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.bf = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.Gu = new Qo(this, \"async_queue_retry\" /* AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.vf = function() {\n            var e = Go();\n            e && N(\"AsyncQueue\", \"Visibility state changed to \" + e.visibilityState), t.Gu.qu();\n        };\n        var e = Go();\n        e && \"function\" == typeof e.addEventListener && e.addEventListener(\"visibilitychange\", this.vf);\n    }\n    return Object.defineProperty(t.prototype, \"wf\", {\n        get: function() {\n            return this.yf;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), \n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */\n    t.prototype.Ps = function(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }, t.prototype.Tf = function(t) {\n        this.Sf(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.Df(t);\n    }, t.prototype.Ef = function() {\n        if (!this.yf) {\n            this.yf = !0;\n            var t = Go();\n            t && \"function\" == typeof t.removeEventListener && t.removeEventListener(\"visibilitychange\", this.vf);\n        }\n    }, t.prototype.enqueue = function(t) {\n        return this.Sf(), this.yf ? new Promise((function(t) {})) : this.Df(t);\n    }, t.prototype.po = function(t) {\n        var e = this;\n        this.Ps((function() {\n            return e.Pf.push(t), e.Cf();\n        }));\n    }, \n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */\n    t.prototype.Cf = function() {\n        return g(this, void 0, void 0, (function() {\n            var t, e = this;\n            return w(this, (function(n) {\n                switch (n.label) {\n                  case 0:\n                    if (0 === this.Pf.length) return [ 3 /*break*/ , 5 ];\n                    n.label = 1;\n\n                  case 1:\n                    return n.trys.push([ 1, 3, , 4 ]), [ 4 /*yield*/ , this.Pf[0]() ];\n\n                  case 2:\n                    return n.sent(), this.Pf.shift(), this.Gu.reset(), [ 3 /*break*/ , 4 ];\n\n                  case 3:\n                    if (!mr(t = n.sent())) throw t;\n                    // Failure will be handled by AsyncQueue\n                                        return N(\"AsyncQueue\", \"Operation failed with retryable error: \" + t), \n                    [ 3 /*break*/ , 4 ];\n\n                  case 4:\n                    this.Pf.length > 0 && \n                    // If there are additional operations, we re-schedule `retryNextOp()`.\n                    // This is necessary to run retryable operations that failed during\n                    // their initial attempt since we don't know whether they are already\n                    // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n                    // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n                    // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n                    // call scheduled here.\n                    // Since `backoffAndRun()` cancels an existing backoff and schedules a\n                    // new backoff on every call, there is only ever a single additional\n                    // operation in the queue.\n                    this.Gu.Lu((function() {\n                        return e.Cf();\n                    })), n.label = 5;\n\n                  case 5:\n                    return [ 2 /*return*/ ];\n                }\n            }));\n        }));\n    }, t.prototype.Df = function(t) {\n        var e = this, n = this.Rf.then((function() {\n            return e.pf = !0, t().catch((function(t) {\n                // Re-throw the error so that this.tail becomes a rejected Promise and\n                // all further attempts to chain (via .then) will just short-circuit\n                // and return the rejected Promise.\n                throw e.Vf = t, e.pf = !1, A(\"INTERNAL UNHANDLED ERROR: \", \n                /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n                function(t) {\n                    var e = t.message || \"\";\n                    return t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack), \n                    e;\n                }(t)), t;\n            })).then((function(t) {\n                return e.pf = !1, t;\n            }));\n        }));\n        return this.Rf = n, n;\n    }, t.prototype.Tr = function(t, e, n) {\n        var r = this;\n        this.Sf(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.bf.indexOf(t) > -1 && (e = 0);\n        var i = Ir.Ts(this, t, e, n, (function(t) {\n            return r.xf(t);\n        }));\n        return this.gf.push(i), i;\n    }, t.prototype.Sf = function() {\n        this.Vf && x();\n    }, t.prototype.Af = function() {}, \n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */\n    t.prototype.Nf = function() {\n        return g(this, void 0, void 0, (function() {\n            var t;\n            return w(this, (function(e) {\n                switch (e.label) {\n                  case 0:\n                    return [ 4 /*yield*/ , t = this.Rf ];\n\n                  case 1:\n                    e.sent(), e.label = 2;\n\n                  case 2:\n                    if (t !== this.Rf) return [ 3 /*break*/ , 0 ];\n                    e.label = 3;\n\n                  case 3:\n                    return [ 2 /*return*/ ];\n                }\n            }));\n        }));\n    }, \n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */\n    t.prototype.$f = function(t) {\n        for (var e = 0, n = this.gf; e < n.length; e++) {\n            if (n[e].fs === t) return !0;\n        }\n        return !1;\n    }, \n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */\n    t.prototype.Ff = function(t) {\n        var e = this;\n        // Note that draining may generate more delayed ops, so we do that first.\n                return this.Nf().then((function() {\n            // Run ops in the same order they'd run if they ran naturally.\n            e.gf.sort((function(t, e) {\n                return t.ds - e.ds;\n            }));\n            for (var n = 0, r = e.gf; n < r.length; n++) {\n                var i = r[n];\n                if (i.Rs(), \"all\" /* All */ !== t && i.fs === t) break;\n            }\n            return e.Nf();\n        }));\n    }, \n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */\n    t.prototype.Of = function(t) {\n        this.bf.push(t);\n    }, \n    /** Called once a DelayedOperation is run or canceled. */ t.prototype.xf = function(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        var e = this.gf.indexOf(t);\n        this.gf.splice(e, 1);\n    }, t;\n}();\n\nfunction La(t) {\n    /**\n * Returns true if obj is an object and contains at least one of the specified\n * methods.\n */\n    return function(t, e) {\n        if (\"object\" != typeof t || null === t) return !1;\n        for (var n = t, r = 0, i = [ \"next\", \"error\", \"complete\" ]; r < i.length; r++) {\n            var o = i[r];\n            if (o in n && \"function\" == typeof n[o]) return !0;\n        }\n        return !1;\n    }(t);\n}\n\nvar Ra = /** @class */ function() {\n    function t() {\n        this.kf = {}, this.Mf = new fr, this.Lf = {\n            taskState: \"Running\",\n            totalBytes: 0,\n            totalDocuments: 0,\n            bytesLoaded: 0,\n            documentsLoaded: 0\n        }\n        /**\n     * Registers functions to listen to bundle loading progress events.\n     * @param next - Called when there is a progress update from bundle loading. Typically `next` calls occur\n     *   each time a Firestore document is loaded from the bundle.\n     * @param error - Called when an error occurs during bundle loading. The task aborts after reporting the\n     *   error, and there should be no more updates after this.\n     * @param complete - Called when the loading task is complete.\n     */;\n    }\n    return t.prototype.onProgress = function(t, e, n) {\n        this.kf = {\n            next: t,\n            error: e,\n            complete: n\n        };\n    }, \n    /**\n     * Implements the `Promise<LoadBundleTaskProgress>.catch` interface.\n     *\n     * @param onRejected - Called when an error occurs during bundle loading.\n     */\n    t.prototype.catch = function(t) {\n        return this.Mf.promise.catch(t);\n    }, \n    /**\n     * Implements the `Promise<LoadBundleTaskProgress>.then` interface.\n     *\n     * @param onFulfilled - Called on the completion of the loading task with a final `LoadBundleTaskProgress` update.\n     *   The update will always have its `taskState` set to `\"Success\"`.\n     * @param onRejected - Called when an error occurs during bundle loading.\n     */\n    t.prototype.then = function(t, e) {\n        return this.Mf.promise.then(t, e);\n    }, \n    /**\n     * Notifies all observers that bundle loading has completed, with a provided\n     * `LoadBundleTaskProgress` object.\n     *\n     * @private\n     */\n    t.prototype.ql = function(t) {\n        this.Ul(t), this.kf.complete && this.kf.complete(), this.Mf.resolve(t);\n    }, \n    /**\n     * Notifies all observers that bundle loading has failed, with a provided\n     * `Error` as the reason.\n     *\n     * @private\n     */\n    t.prototype.Kl = function(t) {\n        this.Lf.taskState = \"Error\", this.kf.next && this.kf.next(this.Lf), this.kf.error && this.kf.error(t), \n        this.Mf.reject(t);\n    }, \n    /**\n     * Notifies a progress update of loading a bundle.\n     * @param progress - The new progress.\n     *\n     * @private\n     */\n    t.prototype.Ul = function(t) {\n        this.Lf = t, this.kf.next && this.kf.next(t);\n    }, t;\n}(), Ua = -1, Ma = /** @class */ function(t) {\n    /** @hideconstructor */\n    function e(e, n) {\n        var r = this;\n        return (r = t.call(this, e, n) || this).Bf = new Ca, r.w_ = \"name\" in e ? e.name : \"[DEFAULT]\", \n        r;\n    }\n    return m(e, t), e.prototype.b_ = function() {\n        return this.qf || \n        // The client must be initialized to ensure that all subsequent API\n        // usage throws an exception.\n        Fa(this), this.qf.terminate();\n    }, e;\n}(qs);\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** DOMException error code constants. */ function qa(t) {\n    return t.qf || Fa(t), t.qf.df(), t.qf;\n}\n\nfunction Fa(t) {\n    var e = t.p_(), n = function(t, e, n) {\n        return new _(t, e, n.host, n.ssl, n.experimentalForceLongPolling, n.experimentalAutoDetectLongPolling);\n    }(t.I_, t.w_, e);\n    t.qf = new Ia(t.m_, t.Bf, n);\n}\n\n/**\n * Attempts to enable persistent storage, if possible.\n *\n * Must be called before any other functions (other than\n * {@link initializeFirestore}, {@link getFirestore} or\n * {@link clearIndexedDbPersistence}.\n *\n * If this fails, `enableIndexedDbPersistence()` will reject the promise it\n * returns. Note that even after this failure, the `Firestore` instance will\n * remain usable, however offline persistence will be disabled.\n *\n * There are several reasons why this can fail, which can be identified by\n * the `code` on the error.\n *\n *   * failed-precondition: The app is already open in another browser tab.\n *   * unimplemented: The browser is incompatible with the offline\n *     persistence implementation.\n *\n * @param firestore - The `Firestore` instance to enable persistence for.\n * @param persistenceSettings - Optional settings object to configure\n * persistence.\n * @returns A promise that represents successfully enabling persistent storage.\n */\n/**\n * Registers both the `OfflineComponentProvider` and `OnlineComponentProvider`.\n * If the operation fails with a recoverable error (see\n * `canRecoverFromIndexedDbError()` below), the returned Promise is rejected\n * but the client remains usable.\n */ function ja(t, e, n) {\n    var r = this, i = new fr;\n    return t._s.enqueue((function() {\n        return g(r, void 0, void 0, (function() {\n            var r;\n            return w(this, (function(o) {\n                switch (o.label) {\n                  case 0:\n                    return o.trys.push([ 0, 3, , 4 ]), [ 4 /*yield*/ , Ea(t, n) ];\n\n                  case 1:\n                    return o.sent(), [ 4 /*yield*/ , Ta(t, e) ];\n\n                  case 2:\n                    return o.sent(), i.resolve(), [ 3 /*break*/ , 4 ];\n\n                  case 3:\n                    if (!\n                    /**\n         * Decides whether the provided error allows us to gracefully disable\n         * persistence (as opposed to crashing the client).\n         */\n                    function(t) {\n                        return \"FirebaseError\" === t.name ? t.code === M.FAILED_PRECONDITION || t.code === M.UNIMPLEMENTED : !(\"undefined\" != typeof DOMException && t instanceof DOMException) || (22 === t.code || 20 === t.code || \n                        // Firefox Private Browsing mode disables IndexedDb and returns\n                        // INVALID_STATE for any usage.\n                        11 === t.code);\n                    }(r = o.sent())) throw r;\n                    return console.warn(\"Error enabling offline persistence. Falling back to persistence disabled: \" + r), \n                    i.reject(r), [ 3 /*break*/ , 4 ];\n\n                  case 4:\n                    return [ 2 /*return*/ ];\n                }\n            }));\n        }));\n    })).then((function() {\n        return i.promise;\n    }));\n}\n\n/**\n * Re-enables use of the network for this Firestore instance after a prior\n * call to {@link disableNetwork}.\n *\n * @returns A promise that is resolved once the network has been enabled.\n */\nfunction za(t) {\n    if (t.R_ || t.P_) throw new q(M.FAILED_PRECONDITION, \"Firestore has already been started and persistence can no longer be enabled. You can only enable persistence before calling any other methods on a Firestore object.\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n */ var Ga = /** @class */ function() {\n    function t() {}\n    return t.prototype.Uf = function(t, e) {\n        switch (void 0 === e && (e = \"none\"), vt(t)) {\n          case 0 /* NullValue */ :\n            return null;\n\n          case 1 /* BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* NumberValue */ :\n            return st(t.integerValue || t.doubleValue);\n\n          case 3 /* TimestampValue */ :\n            return this.Qf(t.timestampValue);\n\n          case 4 /* ServerTimestampValue */ :\n            return this.Kf(t, e);\n\n          case 5 /* StringValue */ :\n            return t.stringValue;\n\n          case 6 /* BlobValue */ :\n            return this.Wf(at(t.bytesValue));\n\n          case 7 /* RefValue */ :\n            return this.jf(t.referenceValue);\n\n          case 8 /* GeoPointValue */ :\n            return this.Gf(t.geoPointValue);\n\n          case 9 /* ArrayValue */ :\n            return this.zf(t.arrayValue, e);\n\n          case 10 /* ObjectValue */ :\n            return this.Hf(t.mapValue, e);\n\n          default:\n            throw x();\n        }\n    }, t.prototype.Hf = function(t, e) {\n        var n = this, r = {};\n        return nt(t.fields || {}, (function(t, i) {\n            r[t] = n.Uf(i, e);\n        })), r;\n    }, t.prototype.Gf = function(t) {\n        return new Hs(st(t.latitude), st(t.longitude));\n    }, t.prototype.zf = function(t, e) {\n        var n = this;\n        return (t.values || []).map((function(t) {\n            return n.Uf(t, e);\n        }));\n    }, t.prototype.Kf = function(t, e) {\n        switch (e) {\n          case \"previous\":\n            var n = ht(t);\n            return null == n ? null : this.Uf(n, e);\n\n          case \"estimate\":\n            return this.Qf(ft(t));\n\n          default:\n            return null;\n        }\n    }, t.prototype.Qf = function(t) {\n        var e = ut(t);\n        return new K(e.seconds, e.nanos);\n    }, t.prototype.Jf = function(t, e) {\n        var n = Z.ot(t);\n        k(hr(n));\n        var r = new I(n.get(1), n.get(3)), i = new tt(n.Y(5));\n        return r.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        A(\"Document \" + i + \" contains a document reference within a different database (\" + r.projectId + \"/\" + r.database + \") which is not supported. It will be treated as a reference in the current database (\" + e.projectId + \"/\" + e.database + \") instead.\"), \n        i;\n    }, t;\n}(), Ba = /** @class */ function() {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    function t(t, e, n, r, i) {\n        this.Yf = t, this.Xf = e, this.S_ = n, this.Zf = r, this.v_ = i;\n    }\n    return Object.defineProperty(t.prototype, \"id\", {\n        /** Property of the `DocumentSnapshot` that provides the document's ID. */ get: function() {\n            return this.S_.path.tt();\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(t.prototype, \"ref\", {\n        /**\n         * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n         */\n        get: function() {\n            return new Fs(this.Yf, this.v_, this.S_);\n        },\n        enumerable: !1,\n        configurable: !0\n    }), \n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */\n    t.prototype.exists = function() {\n        return null !== this.Zf;\n    }, \n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */\n    t.prototype.data = function() {\n        if (this.Zf) {\n            if (this.v_) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                var t = new Qa(this.Yf, this.Xf, this.S_, this.Zf, \n                /* converter= */ null);\n                return this.v_.fromFirestore(t);\n            }\n            return this.Xf.Uf(this.Zf.bt());\n        }\n    }, \n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t.prototype.get = function(t) {\n        if (this.Zf) {\n            var e = this.Zf.data().field(Ya(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this.Xf.Uf(e);\n        }\n    }, t;\n}(), Qa = /** @class */ function(t) {\n    function e() {\n        return null !== t && t.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */    return m(e, t), e.prototype.data = function() {\n        return t.prototype.data.call(this);\n    }, e;\n}(Ba);\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */\nfunction Ya(t, e) {\n    return \"string\" == typeof e ? ma(t, e) : e instanceof Ss ? e.d_.f_ : e.f_;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function Ha(t) {\n    if (oe(t) && 0 === t.xt.length) throw new q(M.UNIMPLEMENTED, \"limitToLast() queries require specifying at least one orderBy() clause\");\n}\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link startAt}, {@link startAfter}, {@link\n * endBefore}, {@link endAt}, {@link limit} or {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */ var Ka = function() {};\n\n/**\n * Creates a new immutable instance of `query` that is extended to also include\n * additional query constraints.\n *\n * @param query - The query instance to use as a base for the new constraints.\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */ function Xa(t) {\n    for (var e = [], n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];\n    for (var r = 0, i = e; r < i.length; r++) {\n        var o = i[r];\n        t = o.td(t);\n    }\n    return t;\n}\n\nvar Wa = /** @class */ function(t) {\n    function e(e, n, r) {\n        var i = this;\n        return (i = t.call(this) || this).ed = e, i.nd = n, i.sd = r, i.type = \"where\", \n        i;\n    }\n    return m(e, t), e.prototype.td = function(t) {\n        var e = ta(t.firestore), n = function(t, e, n, r, i, o, u) {\n            var s;\n            if (i.ut()) {\n                if (\"array-contains\" /* ARRAY_CONTAINS */ === o || \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === o) throw new q(M.INVALID_ARGUMENT, \"Invalid Query. You can't perform '\" + o + \"' queries on FieldPath.documentId().\");\n                if (\"in\" /* IN */ === o || \"not-in\" /* NOT_IN */ === o) {\n                    rc(u, o);\n                    for (var a = [], c = 0, h = u; c < h.length; c++) {\n                        var f = h[c];\n                        a.push(nc(r, t, f));\n                    }\n                    s = {\n                        arrayValue: {\n                            values: a\n                        }\n                    };\n                } else s = nc(r, t, u);\n            } else \"in\" /* IN */ !== o && \"not-in\" /* NOT_IN */ !== o && \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ !== o || rc(u, o), \n            s = ha(n, \"where\", u, \n            /* allowArrays= */ \"in\" /* IN */ === o || \"not-in\" /* NOT_IN */ === o);\n            var l = Ft.create(i, o, s);\n            return function(t, e) {\n                if (e.Ct()) {\n                    var n = se(t);\n                    if (null !== n && !n.isEqual(e.field)) throw new q(M.INVALID_ARGUMENT, \"Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '\" + n.toString() + \"' and '\" + e.field.toString() + \"'\");\n                    var r = ue(t);\n                    null !== r && ic(t, e.field, r);\n                }\n                var i = function(t, e) {\n                    for (var n = 0, r = t.filters; n < r.length; n++) {\n                        var i = r[n];\n                        if (e.indexOf(i.op) >= 0) return i.op;\n                    }\n                    return null;\n                }(t, \n                /**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one array operator is allowed.\n * 2. Only one disjunctive operator is allowed.\n * 3. NOT_EQUAL cannot be used with another NOT_EQUAL operator.\n * 4. NOT_IN cannot be used with array, disjunctive, or NOT_EQUAL operators.\n *\n * Array operators: ARRAY_CONTAINS, ARRAY_CONTAINS_ANY\n * Disjunctive operators: IN, ARRAY_CONTAINS_ANY, NOT_IN\n */\n                function(t) {\n                    switch (t) {\n                      case \"!=\" /* NOT_EQUAL */ :\n                        return [ \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains\" /* ARRAY_CONTAINS */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"in\" /* IN */ :\n                        return [ \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"not-in\" /* NOT_IN */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ , \"!=\" /* NOT_EQUAL */ ];\n\n                      default:\n                        return [];\n                    }\n                }(e.op));\n                if (null !== i) \n                // Special case when it's a duplicate op to give a slightly clearer error message.\n                throw i === e.op ? new q(M.INVALID_ARGUMENT, \"Invalid query. You cannot use more than one '\" + e.op.toString() + \"' filter.\") : new q(M.INVALID_ARGUMENT, \"Invalid query. You cannot use '\" + e.op.toString() + \"' filters with '\" + i.toString() + \"' filters.\");\n            }(t, l), l;\n        }(t.C_, 0, e, t.firestore.I_, this.ed, this.nd, this.sd);\n        return new js(t.firestore, t.v_, function(t, e) {\n            var n = t.filters.concat([ e ]);\n            return new ee(t.path, t.collectionGroup, t.xt.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n        }(t.C_, n));\n    }, e;\n}(Ka), Za = /** @class */ function(t) {\n    function e(e, n) {\n        var r = this;\n        return (r = t.call(this) || this).ed = e, r.rd = n, r.type = \"orderBy\", r;\n    }\n    return m(e, t), e.prototype.td = function(t) {\n        var e = function(t, e, n) {\n            if (null !== t.startAt) throw new q(M.INVALID_ARGUMENT, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new q(M.INVALID_ARGUMENT, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            var r = new Zt(e, n);\n            return function(t, e) {\n                if (null === ue(t)) {\n                    // This is the first order by. It must match any inequality.\n                    var n = se(t);\n                    null !== n && ic(t, n, e.field);\n                }\n            }(t, r), r;\n        }(t.C_, this.ed, this.rd);\n        return new js(t.firestore, t.v_, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            var n = t.xt.concat([ e ]);\n            return new ee(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t.C_, e));\n    }, e;\n}(Ka), Ja = /** @class */ function(t) {\n    function e(e, n, r) {\n        var i = this;\n        return (i = t.call(this) || this).type = e, i.od = n, i.ad = r, i;\n    }\n    return m(e, t), e.prototype.td = function(t) {\n        return new js(t.firestore, t.v_, fe(t.C_, this.od, this.ad));\n    }, e;\n}(Ka), $a = /** @class */ function(t) {\n    function e(e, n, r) {\n        var i = this;\n        return (i = t.call(this) || this).type = e, i.ud = n, i.hd = r, i;\n    }\n    return m(e, t), e.prototype.td = function(t) {\n        var e = ec(t, this.type, this.ud, this.hd);\n        return new js(t.firestore, t.v_, function(t, e) {\n            return new ee(t.path, t.collectionGroup, t.xt.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t.C_, e));\n    }, e;\n}(Ka), tc = /** @class */ function(t) {\n    function e(e, n, r) {\n        var i = this;\n        return (i = t.call(this) || this).type = e, i.ud = n, i.hd = r, i;\n    }\n    return m(e, t), e.prototype.td = function(t) {\n        var e = ec(t, this.type, this.ud, this.hd);\n        return new js(t.firestore, t.v_, function(t, e) {\n            return new ee(t.path, t.collectionGroup, t.xt.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t.C_, e));\n    }, e;\n}(Ka);\n\n/**\n * Creates a `QueryConstraint` that enforces that documents must contain the\n * specified field and that the value should satisfy the relation constraint\n * provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created `Query`.\n */\n/** Helper function to create a bound from a document or fields */\nfunction ec(t, e, n, r) {\n    if (n[0] instanceof Ss && (n[0] = n[0].d_), n[0] instanceof Ba) return function(t, e, n, r, i) {\n        if (!r) throw new q(M.NOT_FOUND, \"Can't use a DocumentSnapshot that doesn't exist for \" + n + \"().\");\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n        for (var o = [], u = 0, s = ce(t); u < s.length; u++) {\n            var a = s[u];\n            if (a.field.ut()) o.push(It(e, r.key)); else {\n                var c = r.field(a.field);\n                if (ct(c)) throw new q(M.INVALID_ARGUMENT, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + a.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n                if (null === c) {\n                    var h = a.field.rt();\n                    throw new q(M.INVALID_ARGUMENT, \"Invalid query. You are trying to start or end a query using a document for which the field '\" + h + \"' (used as the orderBy) does not exist.\");\n                }\n                o.push(c);\n            }\n        }\n        return new Xt(o, i);\n    }(t.C_, t.firestore.I_, e, n[0].Zf, r);\n    var i = ta(t.firestore);\n    return function(t, e, n, r, i, o) {\n        // Use explicit order by's because it has to match the query the user made\n        var u = t.xt;\n        if (i.length > u.length) throw new q(M.INVALID_ARGUMENT, \"Too many arguments provided to \" + r + \"(). The number of arguments must be less than or equal to the number of orderBy() clauses\");\n        for (var s = [], a = 0; a < i.length; a++) {\n            var c = i[a];\n            if (u[a].field.ut()) {\n                if (\"string\" != typeof c) throw new q(M.INVALID_ARGUMENT, \"Invalid query. Expected a string for document ID in \" + r + \"(), but got a \" + typeof c);\n                if (!ae(t) && -1 !== c.indexOf(\"/\")) throw new q(M.INVALID_ARGUMENT, \"Invalid query. When querying a collection and ordering by FieldPath.documentId(), the value passed to \" + r + \"() must be a plain document ID, but '\" + c + \"' contains a slash.\");\n                var h = t.path.child(Z.ot(c));\n                if (!tt.wt(h)) throw new q(M.INVALID_ARGUMENT, \"Invalid query. When querying a collection group and ordering by FieldPath.documentId(), the value passed to \" + r + \"() must result in a valid document path, but '\" + h + \"' is not because it contains an odd number of segments.\");\n                var f = new tt(h);\n                s.push(It(e, f));\n            } else {\n                var l = ha(n, r, c);\n                s.push(l);\n            }\n        }\n        return new Xt(s, o);\n    }(t.C_, t.firestore.I_, i, e, n, r);\n}\n\nfunction nc(t, e, n) {\n    if (n instanceof Ss && (n = n.d_), \"string\" == typeof n) {\n        if (\"\" === n) throw new q(M.INVALID_ARGUMENT, \"Invalid query. When querying with FieldPath.documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!ae(e) && -1 !== n.indexOf(\"/\")) throw new q(M.INVALID_ARGUMENT, \"Invalid query. When querying a collection by FieldPath.documentId(), you must provide a plain document ID, but '\" + n + \"' contains a '/' character.\");\n        var r = e.path.child(Z.ot(n));\n        if (!tt.wt(r)) throw new q(M.INVALID_ARGUMENT, \"Invalid query. When querying a collection group by FieldPath.documentId(), the value provided must result in a valid document path, but '\" + r + \"' is not because it has an odd number of segments (\" + r.length + \").\");\n        return It(t, new tt(r));\n    }\n    if (n instanceof Fs) return It(t, n.S_);\n    throw new q(M.INVALID_ARGUMENT, \"Invalid query. When querying with FieldPath.documentId(), you must provide a valid string or a DocumentReference, but it was: \" + Cs(n) + \".\");\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function rc(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new q(M.INVALID_ARGUMENT, \"Invalid Query. A non-empty array is required for '\" + e.toString() + \"' filters.\");\n    if (t.length > 10) throw new q(M.INVALID_ARGUMENT, \"Invalid Query. '\" + e.toString() + \"' filters support a maximum of 10 elements in the value array.\");\n}\n\nfunction ic(t, e, n) {\n    if (!n.isEqual(e)) throw new q(M.INVALID_ARGUMENT, \"Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '\" + e.toString() + \"' and so you must also use '\" + e.toString() + \"' as your first argument to orderBy(), but your first orderBy() is on field '\" + n.toString() + \"' instead.\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into DocumentData by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to DocumentData\n * because we want to provide the user with a more specific error message if\n * their set() or fails due to invalid data originating from a toFirestore()\n * call.\n */ function oc(t, e, n) {\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e;\n}\n\nvar uc = /** @class */ function(t) {\n    function e(e) {\n        var n = this;\n        return (n = t.call(this) || this).firestore = e, n;\n    }\n    return m(e, t), e.prototype.Wf = function(t) {\n        return new F(t);\n    }, e.prototype.jf = function(t) {\n        var e = this.Jf(t, this.firestore.I_);\n        return new Fs(this.firestore, /* converter= */ null, e);\n    }, e;\n}(Ga), sc = /** @class */ function() {\n    /** @hideconstructor */\n    function t(t, e) {\n        this.hasPendingWrites = t, this.fromCache = e\n        /**\n     * Returns true if this `SnapshotMetadata` is equal to the provided one.\n     *\n     * @param other - The `SnapshotMetadata` to compare against.\n     * @returns true if this `SnapshotMetadata` is equal to the provided one.\n     */;\n    }\n    return t.prototype.isEqual = function(t) {\n        return this.hasPendingWrites === t.hasPendingWrites && this.fromCache === t.fromCache;\n    }, t;\n}(), ac = /** @class */ function(t) {\n    /** @hideconstructor protected */\n    function e(e, n, r, i, o, u) {\n        var s = this;\n        return (s = t.call(this, e, n, r, i, u) || this).Yf = e, s.ld = e, s.metadata = o, \n        s;\n    }\n    /**\n     * Property of the `DocumentSnapshot` that signals whether or not the data\n     * exists. True if the document exists.\n     */    return m(e, t), e.prototype.exists = function() {\n        return t.prototype.exists.call(this);\n    }, \n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * By default, `FieldValue.serverTimestamp()` values that have not yet been\n     * set to their final value will be returned as `null`. You can override\n     * this by passing an options object.\n     *\n     * @param options - An options object to configure how data is retrieved from\n     * the snapshot (for example the desired behavior for server timestamps that\n     * have not yet been set to their final value).\n     * @returns An `Object` containing all fields in the document or `undefined` if\n     * the document doesn't exist.\n     */\n    e.prototype.data = function(t) {\n        if (void 0 === t && (t = {}), this.Zf) {\n            if (this.v_) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                var e = new cc(this.Yf, this.Xf, this.S_, this.Zf, this.metadata, \n                /* converter= */ null);\n                return this.v_.fromFirestore(e, t);\n            }\n            return this.Xf.Uf(this.Zf.bt(), t.serverTimestamps);\n        }\n    }, \n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * By default, a `FieldValue.serverTimestamp()` that has not yet been set to\n     * its final value will be returned as `null`. You can override this by\n     * passing an options object.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @param options - An options object to configure how the field is retrieved\n     * from the snapshot (for example the desired behavior for server timestamps\n     * that have not yet been set to their final value).\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    e.prototype.get = function(t, e) {\n        if (void 0 === e && (e = {}), this.Zf) {\n            var n = this.Zf.data().field(Ya(\"DocumentSnapshot.get\", t));\n            if (null !== n) return this.Xf.Uf(n, e.serverTimestamps);\n        }\n    }, e;\n}(Ba), cc = /** @class */ function(t) {\n    function e() {\n        return null !== t && t.apply(this, arguments) || this;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * By default, `FieldValue.serverTimestamp()` values that have not yet been\n     * set to their final value will be returned as `null`. You can override\n     * this by passing an options object.\n     *\n     * @override\n     * @param options - An options object to configure how data is retrieved from\n     * the snapshot (for example the desired behavior for server timestamps that\n     * have not yet been set to their final value).\n     * @returns An `Object` containing all fields in the document.\n     */    return m(e, t), e.prototype.data = function(e) {\n        return void 0 === e && (e = {}), t.prototype.data.call(this, e);\n    }, e;\n}(ac), hc = /** @class */ function() {\n    /** @hideconstructor */\n    function t(t, e, n, r) {\n        this.Yf = t, this.Xf = e, this._d = r, this.metadata = new sc(r.hasPendingWrites, r.fromCache), \n        this.query = n;\n    }\n    return Object.defineProperty(t.prototype, \"docs\", {\n        /** An array of all the documents in the `QuerySnapshot`. */ get: function() {\n            var t = [];\n            return this.forEach((function(e) {\n                return t.push(e);\n            })), t;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(t.prototype, \"size\", {\n        /** The number of documents in the `QuerySnapshot`. */ get: function() {\n            return this._d.docs.size;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(t.prototype, \"empty\", {\n        /** True if there are no documents in the `QuerySnapshot`. */ get: function() {\n            return 0 === this.size;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), \n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */\n    t.prototype.forEach = function(t, e) {\n        var n = this;\n        this._d.docs.forEach((function(r) {\n            t.call(e, new cc(n.Yf, n.Xf, r.key, r, new sc(n._d.De.has(r.key), n._d.fromCache), n.query.v_));\n        }));\n    }, \n    /**\n     * Returns an array of the documents changes since the last snapshot. If this\n     * is the first snapshot, all documents will be in the list as 'added'\n     * changes.\n     *\n     * @param options - `SnapshotListenOptions` that control whether metadata-only\n     * changes (i.e. only `DocumentSnapshot.metadata` changed) should trigger\n     * snapshot events.\n     */\n    t.prototype.docChanges = function(t) {\n        void 0 === t && (t = {});\n        var e = !!t.includeMetadataChanges;\n        if (e && this._d.xe) throw new q(M.INVALID_ARGUMENT, \"To include metadata changes with your document changes, you must also pass { includeMetadataChanges:true } to onSnapshot().\");\n        return this.fd && this.dd === e || (this.fd = \n        /** Calculates the array of DocumentChanges for a given ViewSnapshot. */\n        function(t, e) {\n            if (t._d.Se.et()) {\n                // Special case the first snapshot because index calculation is easy and\n                // fast\n                var n = 0;\n                return t._d.docChanges.map((function(e) {\n                    var r = new cc(t.Yf, t.Xf, e.doc.key, e.doc, new sc(t._d.De.has(e.doc.key), t._d.fromCache), t.query.v_);\n                    return e.doc, {\n                        type: \"added\",\n                        doc: r,\n                        oldIndex: -1,\n                        newIndex: n++\n                    };\n                }));\n            }\n            // A DocumentSet that is updated incrementally as changes are applied to use\n            // to lookup the index of a document.\n            var r = t._d.Se;\n            return t._d.docChanges.filter((function(t) {\n                return e || 3 /* Metadata */ !== t.type;\n            })).map((function(e) {\n                var n = new cc(t.Yf, t.Xf, e.doc.key, e.doc, new sc(t._d.De.has(e.doc.key), t._d.fromCache), t.query.v_), i = -1, o = -1;\n                return 0 /* Added */ !== e.type && (i = r.indexOf(e.doc.key), r = r.delete(e.doc.key)), \n                1 /* Removed */ !== e.type && (o = (r = r.add(e.doc)).indexOf(e.doc.key)), {\n                    type: fc(e.type),\n                    doc: n,\n                    oldIndex: i,\n                    newIndex: o\n                };\n            }));\n        }(this, e), this.dd = e), this.fd;\n    }, t;\n}();\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Metadata about a snapshot, describing the state of the snapshot.\n */ function fc(t) {\n    switch (t) {\n      case 0 /* Added */ :\n        return \"added\";\n\n      case 2 /* Modified */ :\n      case 3 /* Metadata */ :\n        return \"modified\";\n\n      case 1 /* Removed */ :\n        return \"removed\";\n\n      default:\n        return x();\n    }\n}\n\n// TODO(firestoreexp): Add tests for snapshotEqual with different snapshot\n// metadata\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function lc(t, e) {\n    return t instanceof ac && e instanceof ac ? t.Yf === e.Yf && t.S_.isEqual(e.S_) && (null === t.Zf ? null === e.Zf : t.Zf.isEqual(e.Zf)) && t.v_ === e.v_ : t instanceof hc && e instanceof hc && t.Yf === e.Yf && Ys(t.query, e.query) && t.metadata.isEqual(e.metadata) && t._d.isEqual(e._d);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Reads the document referred to by this `DocumentReference`.\n *\n * Note: `getDoc()` attempts to provide up-to-date data when possible by waiting\n * for data from the server, but it may return cached data or fail if you are\n * offline and the server cannot be reached. To specify this behavior, invoke\n * {@link getDocFromCache} or {@link getDocFromServer}.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the\n * current document contents.\n */ var pc = /** @class */ function(t) {\n    function e(e) {\n        var n = this;\n        return (n = t.call(this) || this).firestore = e, n;\n    }\n    return m(e, t), e.prototype.Wf = function(t) {\n        return new F(t);\n    }, e.prototype.jf = function(t) {\n        var e = this.Jf(t, this.firestore.I_);\n        return new Fs(this.firestore, /* converter= */ null, e);\n    }, e;\n}(Ga);\n\n/**\n * Reads the document referred to by this `DocumentReference` from cache.\n * Returns an error if the document is not currently cached.\n *\n * @returns A Promise resolved with a `DocumentSnapshot` containing the\n * current document contents.\n */ function dc(t, e, n) {\n    for (var r = [], i = 3; i < arguments.length; i++) r[i - 3] = arguments[i];\n    t = Ls(t, Fs);\n    var o = Ls(t.firestore, Ma), u = ta(o);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n    return e instanceof Ss && (e = e.d_), yc(o, [ (\"string\" == typeof e || e instanceof As ? ca(u, \"updateDoc\", t.S_, e, n, r) : aa(u, \"updateDoc\", t.S_, e)).F_(t.S_, Re.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * @param reference - A reference to the document to delete.\n * @returns A Promise resolved once the document has been successfully\n * deleted from the backend (note that it won't resolve while you're offline).\n */ function vc(t) {\n    for (var e, n, r, i = [], o = 1; o < arguments.length; o++) i[o - 1] = arguments[o];\n    t instanceof Ss && (t = t.d_);\n    var u = {\n        includeMetadataChanges: !1\n    }, s = 0;\n    \"object\" != typeof i[s] || La(i[s]) || (u = i[s], s++);\n    var a, c, h, f = {\n        includeMetadataChanges: u.includeMetadataChanges\n    };\n    if (La(i[s])) {\n        var l = i[s];\n        i[s] = null === (e = l.next) || void 0 === e ? void 0 : e.bind(l), i[s + 1] = null === (n = l.error) || void 0 === n ? void 0 : n.bind(l), \n        i[s + 2] = null === (r = l.complete) || void 0 === r ? void 0 : r.bind(l);\n    }\n    if (t instanceof Fs) c = Ls(t.firestore, Ma), h = re(t.S_.path), a = {\n        next: function(e) {\n            i[s] && i[s](mc(c, t, e));\n        },\n        error: i[s + 1],\n        complete: i[s + 2]\n    }; else {\n        var p = Ls(t, js);\n        c = Ls(p.firestore, Ma), h = p.C_;\n        var d = new pc(c);\n        a = {\n            next: function(t) {\n                i[s] && i[s](new hc(c, d, p, t));\n            },\n            error: i[s + 1],\n            complete: i[s + 2]\n        }, Ha(t.C_);\n    }\n    return function(t, e, n, r) {\n        var i = this, o = new Ts(r), u = new ku(e, o, n);\n        return t._s.Ps((function() {\n            return g(i, void 0, void 0, (function() {\n                var e;\n                return w(this, (function(n) {\n                    switch (n.label) {\n                      case 0:\n                        return e = Nu, [ 4 /*yield*/ , Oa(t) ];\n\n                      case 1:\n                        return [ 2 /*return*/ , e.apply(void 0, [ n.sent(), u ]) ];\n                    }\n                }));\n            }));\n        })), function() {\n            o.i_(), t._s.Ps((function() {\n                return g(i, void 0, void 0, (function() {\n                    var e;\n                    return w(this, (function(n) {\n                        switch (n.label) {\n                          case 0:\n                            return e = Au, [ 4 /*yield*/ , Oa(t) ];\n\n                          case 1:\n                            return [ 2 /*return*/ , e.apply(void 0, [ n.sent(), u ]) ];\n                        }\n                    }));\n                }));\n            }));\n        };\n    }(qa(c), h, f, a);\n}\n\n/** Locally writes `mutations` on the async queue. */ function yc(t, e) {\n    return function(t, e) {\n        var n = this, r = new fr;\n        return t._s.Ps((function() {\n            return g(n, void 0, void 0, (function() {\n                var n;\n                return w(this, (function(i) {\n                    switch (i.label) {\n                      case 0:\n                        return n = Bu, [ 4 /*yield*/ , ka(t) ];\n\n                      case 1:\n                        return [ 2 /*return*/ , n.apply(void 0, [ i.sent(), e, r ]) ];\n                    }\n                }));\n            }));\n        })), r.promise;\n    }(qa(t), e);\n}\n\n/**\n * Converts a ViewSnapshot that contains the single document specified by `ref`\n * to a DocumentSnapshot.\n */ function mc(t, e, n) {\n    var r = n.docs.get(e.S_), i = new pc(t);\n    return new ac(t, i, e.S_, r, new sc(n.hasPendingWrites, n.fromCache), e.v_);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch#commit} is\n * called.\n */ var gc = /** @class */ function() {\n    /** @hideconstructor */\n    function t(t, e) {\n        this.Yf = t, this.wd = e, this.Ed = [], this.Td = !1, this.Id = ta(t);\n    }\n    return t.prototype.set = function(t, e, n) {\n        this.md();\n        var r = wc(t, this.Yf), i = oc(r.v_, e, n), o = ea(this.Id, \"WriteBatch.set\", r.S_, i, null !== r.v_, n);\n        return this.Ed.push(o.F_(r.S_, Re.Kt())), this;\n    }, t.prototype.update = function(t, e, n) {\n        for (var r = [], i = 3; i < arguments.length; i++) r[i - 3] = arguments[i];\n        this.md();\n        var o, u = wc(t, this.Yf);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                return e instanceof Ss && (e = e.d_), o = \"string\" == typeof e || e instanceof As ? ca(this.Id, \"WriteBatch.update\", u.S_, e, n, r) : aa(this.Id, \"WriteBatch.update\", u.S_, e), \n        this.Ed.push(o.F_(u.S_, Re.exists(!0))), this;\n    }, \n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */\n    t.prototype.delete = function(t) {\n        this.md();\n        var e = wc(t, this.Yf);\n        return this.Ed = this.Ed.concat(new Je(e.S_, Re.Kt())), this;\n    }, \n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned Promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A Promise resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */\n    t.prototype.commit = function() {\n        return this.md(), this.Td = !0, this.Ed.length > 0 ? this.wd(this.Ed) : Promise.resolve();\n    }, t.prototype.md = function() {\n        if (this.Td) throw new q(M.FAILED_PRECONDITION, \"A write batch can no longer be used after commit() has been called.\");\n    }, t;\n}();\n\nfunction wc(t, e) {\n    if (t instanceof Ss && (t = t.d_), t.firestore !== e) throw new q(M.INVALID_ARGUMENT, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n// legacy SDK.\n/**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ var bc = /** @class */ function(t) {\n    // This class implements the same logic as the Transaction API in the Lite SDK\n    // but is subclassed in order to return its own DocumentSnapshot types.\n    /** @hideconstructor */\n    function e(e, n) {\n        var r = this;\n        return (r = t.call(this, e, n) || this).Yf = e, r;\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    return m(e, t), e.prototype.get = function(e) {\n        var n = this, r = wc(e, this.Yf), i = new pc(this.Yf);\n        return t.prototype.get.call(this, e).then((function(t) {\n            return new ac(n.Yf, i, r.S_, t.Zf, new sc(\n            /* hasPendingWrites= */ !1, \n            /* fromCache= */ !1), r.v_);\n        }));\n    }, e;\n}(/** @class */ function() {\n    /** @hideconstructor */\n    function t(t, e) {\n        this.Yf = t, this.Ad = e, this.Id = ta(t)\n        /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */;\n    }\n    return t.prototype.get = function(t) {\n        var e = this, n = wc(t, this.Yf), r = new uc(this.Yf);\n        return this.Ad.ef([ n.S_ ]).then((function(t) {\n            if (!t || 1 !== t.length) return x();\n            var i = t[0];\n            if (i instanceof Vt) return new Ba(e.Yf, r, n.S_, null, n.v_);\n            if (i instanceof Pt) return new Ba(e.Yf, r, i.key, i, n.v_);\n            throw x();\n        }));\n    }, t.prototype.set = function(t, e, n) {\n        var r = wc(t, this.Yf), i = oc(r.v_, e, n), o = ea(this.Id, \"Transaction.set\", r.S_, i, null !== r.v_, n);\n        return this.Ad.set(r.S_, o), this;\n    }, t.prototype.update = function(t, e, n) {\n        for (var r = [], i = 3; i < arguments.length; i++) r[i - 3] = arguments[i];\n        var o, u = wc(t, this.Yf);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                return e instanceof Ss && (e = e.d_), o = \"string\" == typeof e || e instanceof As ? ca(this.Id, \"Transaction.update\", u.S_, e, n, r) : aa(this.Id, \"Transaction.update\", u.S_, e), \n        this.Ad.update(u.S_, o), this;\n    }, \n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */\n    t.prototype.delete = function(t) {\n        var e = wc(t, this.Yf);\n        return this.Ad.delete(e.S_), this;\n    }, t;\n}());\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Helper function to assert Uint8Array is available at runtime. */ function _c() {\n    if (\"undefined\" == typeof Uint8Array) throw new q(M.UNIMPLEMENTED, \"Uint8Arrays are not available in this environment.\");\n}\n\n/** Helper function to assert Base64 functions are available at runtime. */ function Ic() {\n    if (\"undefined\" == typeof atob) throw new q(M.UNIMPLEMENTED, \"Blobs are unavailable in Firestore in this environment.\");\n}\n\n/** Immutable class holding a blob (binary data) */ var Ec = /** @class */ function(t) {\n    function e() {\n        return null !== t && t.apply(this, arguments) || this;\n    }\n    return m(e, t), e.fromBase64String = function(t) {\n        return Ic(), new e(F.fromBase64String(t));\n    }, e.fromUint8Array = function(t) {\n        return _c(), new e(F.fromUint8Array(t));\n    }, e.prototype.toBase64 = function() {\n        return Ic(), this.d_.toBase64();\n    }, e.prototype.toUint8Array = function() {\n        return _c(), this.d_.toUint8Array();\n    }, e.prototype.isEqual = function(t) {\n        return this.d_.isEqual(t.d_);\n    }, e.prototype.toString = function() {\n        return \"Blob(base64: \" + this.toBase64() + \")\";\n    }, e;\n}(Ss), Tc = /** @class */ function() {\n    function t() {}\n    return t.prototype.enableIndexedDbPersistence = function(t, e) {\n        return function(t, e) {\n            za(t = Ls(t, Ma));\n            var n = qa(t), r = t.p_(), i = new Is;\n            return ja(n, i, new bs(i, r.cacheSizeBytes, null == e ? void 0 : e.forceOwnership));\n        }(t.d_, {\n            forceOwnership: e\n        });\n    }, t.prototype.enableMultiTabIndexedDbPersistence = function(t) {\n        return function(t) {\n            za(t = Ls(t, Ma));\n            var e = qa(t), n = t.p_(), r = new Is;\n            return ja(e, r, new _s(r, n.cacheSizeBytes));\n        }(t.d_);\n    }, t.prototype.clearIndexedDbPersistence = function(t) {\n        return function(t) {\n            var e = this;\n            if (t.R_ && !t.P_) throw new q(M.FAILED_PRECONDITION, \"Persistence can only be cleared before a Firestore instance is initialized or after it is terminated.\");\n            var n = new fr;\n            return t.Bf.Tf((function() {\n                return g(e, void 0, void 0, (function() {\n                    var e;\n                    return w(this, (function(r) {\n                        switch (r.label) {\n                          case 0:\n                            return r.trys.push([ 0, 2, , 3 ]), [ 4 /*yield*/ , function(t) {\n                                return g(this, void 0, void 0, (function() {\n                                    var e;\n                                    return w(this, (function(n) {\n                                        switch (n.label) {\n                                          case 0:\n                                            return dr.Kn() ? (e = t + \"main\", [ 4 /*yield*/ , dr.delete(e) ]) : [ 2 /*return*/ , Promise.resolve() ];\n\n                                          case 1:\n                                            return n.sent(), [ 2 /*return*/ ];\n                                        }\n                                    }));\n                                }));\n                            }(Xi(t.I_, t.w_)) ];\n\n                          case 1:\n                            return r.sent(), n.resolve(), [ 3 /*break*/ , 3 ];\n\n                          case 2:\n                            return e = r.sent(), n.reject(e), [ 3 /*break*/ , 3 ];\n\n                          case 3:\n                            return [ 2 /*return*/ ];\n                        }\n                    }));\n                }));\n            })), n.promise\n            /**\n * Waits until all currently pending writes for the active user have been\n * acknowledged by the backend.\n *\n * The returned Promise resolves immediately if there are no outstanding writes.\n * Otherwise, the Promise waits for all previously issued writes (including\n * those written in a previous app session), but it does not wait for writes\n * that were added after the function is called. If you want to wait for\n * additional writes, call `waitForPendingWrites()` again.\n *\n * Any outstanding `waitForPendingWrites()` Promises are rejected during user\n * changes.\n *\n * @returns A Promise which resolves when all currently pending writes have been\n * acknowledged by the backend.\n */;\n        }(t.d_);\n    }, t;\n}(), Nc = /** @class */ function(t) {\n    function e(e, n, r) {\n        var i = this;\n        return (i = t.call(this, n) || this).Rd = r, i.INTERNAL = {\n            delete: function() {\n                return i.terminate();\n            }\n        }, e instanceof I || (i.Pd = e), i;\n    }\n    return m(e, t), Object.defineProperty(e.prototype, \"I_\", {\n        get: function() {\n            return this.d_.I_;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), e.prototype.settings = function(t) {\n        t.merge && \n        // Remove the property from the settings once the merge is completed\n        delete (t = Object.assign(Object.assign({}, this.d_.V_()), t)).merge, this.d_.g_(t);\n    }, e.prototype.useEmulator = function(t, e) {\n        !function(t, e, n) {\n            var r = (t = Ls(t, qs)).V_();\n            \"firestore.googleapis.com\" !== r.host && r.host !== e && D(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n            t.g_(Object.assign(Object.assign({}, r), {\n                host: e + \":\" + n,\n                ssl: !1\n            }));\n        }(this.d_, t, e);\n    }, e.prototype.enableNetwork = function() {\n        return function(t) {\n            var e = this;\n            return t._s.enqueue((function() {\n                return g(e, void 0, void 0, (function() {\n                    var e, n;\n                    return w(this, (function(r) {\n                        switch (r.label) {\n                          case 0:\n                            return [ 4 /*yield*/ , Da(t) ];\n\n                          case 1:\n                            return e = r.sent(), [ 4 /*yield*/ , xa(t) ];\n\n                          case 2:\n                            return n = r.sent(), [ 2 /*return*/ , (e.yo(!0), function(t) {\n                                var e = O(t);\n                                return e.Nh.delete(0 /* UserDisabled */), Jo(e);\n                            }(n)) ];\n                        }\n                    }));\n                }));\n            }));\n        }\n        /** Disables the network connection. Pending operations will not complete. */ (qa(Ls(this.d_, Ma)));\n    }, e.prototype.disableNetwork = function() {\n        return function(t) {\n            var e = this;\n            return t._s.enqueue((function() {\n                return g(e, void 0, void 0, (function() {\n                    var e, n;\n                    return w(this, (function(r) {\n                        switch (r.label) {\n                          case 0:\n                            return [ 4 /*yield*/ , Da(t) ];\n\n                          case 1:\n                            return e = r.sent(), [ 4 /*yield*/ , xa(t) ];\n\n                          case 2:\n                            return n = r.sent(), [ 2 /*return*/ , (e.yo(!1), function(t) {\n                                return g(this, void 0, void 0, (function() {\n                                    var e;\n                                    return w(this, (function(n) {\n                                        switch (n.label) {\n                                          case 0:\n                                            return (e = O(t)).Nh.add(0 /* UserDisabled */), [ 4 /*yield*/ , $o(e) ];\n\n                                          case 1:\n                                            return n.sent(), \n                                            // Set the OnlineState to Offline so get()s return from cache, etc.\n                                            e.Oh.set(\"Offline\" /* Offline */), [ 2 /*return*/ ];\n                                        }\n                                    }));\n                                }));\n                            }(n)) ];\n                        }\n                    }));\n                }));\n            }));\n        }\n        /**\n * Returns a Promise that resolves when all writes that were pending at the time\n * this method was called received server acknowledgement. An acknowledgement\n * can be either acceptance or rejection.\n */ (qa(Ls(this.d_, Ma)));\n    }, e.prototype.enablePersistence = function(t) {\n        var e = !1, n = !1;\n        return t && Os(\"synchronizeTabs\", e = !!t.synchronizeTabs, \"experimentalForceOwningTab\", n = !!t.experimentalForceOwningTab), \n        e ? this.Rd.enableMultiTabIndexedDbPersistence(this) : this.Rd.enableIndexedDbPersistence(this, n);\n    }, e.prototype.clearPersistence = function() {\n        return this.Rd.clearIndexedDbPersistence(this);\n    }, e.prototype.terminate = function() {\n        return this.Pd && (this.Pd._removeServiceInstance(\"firestore\"), this.Pd._removeServiceInstance(\"firestore-exp\")), \n        this.d_._delete();\n    }, e.prototype.waitForPendingWrites = function() {\n        return function(t) {\n            var e = this, n = new fr;\n            return t._s.Ps((function() {\n                return g(e, void 0, void 0, (function() {\n                    var e;\n                    return w(this, (function(r) {\n                        switch (r.label) {\n                          case 0:\n                            return e = Wu, [ 4 /*yield*/ , ka(t) ];\n\n                          case 1:\n                            return [ 2 /*return*/ , e.apply(void 0, [ r.sent(), n ]) ];\n                        }\n                    }));\n                }));\n            })), n.promise;\n        }(qa(Ls(this.d_, Ma)));\n    }, e.prototype.onSnapshotsInSync = function(t) {\n        return function(t, e) {\n            return function(t, e) {\n                var n = this, r = new Ts(e);\n                return t._s.Ps((function() {\n                    return g(n, void 0, void 0, (function() {\n                        var e;\n                        return w(this, (function(n) {\n                            switch (n.label) {\n                              case 0:\n                                return e = function(t, e) {\n                                    O(t).Wh.add(e), \n                                    // Immediately fire an initial event, indicating all existing listeners\n                                    // are in-sync.\n                                    e.next();\n                                }, [ 4 /*yield*/ , Oa(t) ];\n\n                              case 1:\n                                return [ 2 /*return*/ , e.apply(void 0, [ n.sent(), r ]) ];\n                            }\n                        }));\n                    }));\n                })), function() {\n                    r.i_(), t._s.Ps((function() {\n                        return g(n, void 0, void 0, (function() {\n                            var e;\n                            return w(this, (function(n) {\n                                switch (n.label) {\n                                  case 0:\n                                    return e = function(t, e) {\n                                        O(t).Wh.delete(e);\n                                    }, [ 4 /*yield*/ , Oa(t) ];\n\n                                  case 1:\n                                    return [ 2 /*return*/ , e.apply(void 0, [ n.sent(), r ]) ];\n                                }\n                            }));\n                        }));\n                    }));\n                }\n                /**\n * Takes an updateFunction in which a set of reads and writes can be performed\n * atomically. In the updateFunction, the client can read and write values\n * using the supplied transaction object. After the updateFunction, all\n * changes will be committed. If a retryable error occurs (ex: some other\n * client has changed any of the data referenced), then the updateFunction\n * will be called again after a backoff. If the updateFunction still fails\n * after all retries, then the transaction will be rejected.\n *\n * The transaction object passed to the updateFunction contains methods for\n * accessing documents and collections. Unlike other datastore access, data\n * accessed with the transaction will not reflect local changes that have not\n * been committed. For this reason, it is required that all reads are\n * performed before any writes. Transactions must be performed while online.\n */;\n            }(qa(t = Ls(t, Ma)), La(e) ? e : {\n                next: e\n            });\n        }(this.d_, t);\n    }, Object.defineProperty(e.prototype, \"app\", {\n        get: function() {\n            if (!this.Pd) throw new q(M.FAILED_PRECONDITION, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n            return this.Pd;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), e.prototype.collection = function(t) {\n        try {\n            return new Fc(this, Gs(this.d_, t));\n        } catch (t) {\n            throw Pc(t, \"collection()\", \"Firestore.collection()\");\n        }\n    }, e.prototype.doc = function(t) {\n        try {\n            return new Oc(this, Bs(this.d_, t));\n        } catch (t) {\n            throw Pc(t, \"doc()\", \"Firestore.doc()\");\n        }\n    }, e.prototype.collectionGroup = function(t) {\n        try {\n            return new Uc(this, function(t, e) {\n                if (t = Ls(t, qs), xs(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new q(M.INVALID_ARGUMENT, \"Invalid collection ID '\" + e + \"' passed to function collectionGroup(). Collection IDs must not contain '/'.\");\n                return new js(t, \n                /* converter= */ null, \n                /**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n                function(t) {\n                    return new ee(Z.ct(), t);\n                }(e));\n            }(this.d_, t));\n        } catch (t) {\n            throw Pc(t, \"collectionGroup()\", \"Firestore.collectionGroup()\");\n        }\n    }, e.prototype.runTransaction = function(t) {\n        var e = this;\n        return function(t, e) {\n            return function(t, e) {\n                var n = this, r = new fr;\n                return t._s.Ps((function() {\n                    return g(n, void 0, void 0, (function() {\n                        var n;\n                        return w(this, (function(i) {\n                            switch (i.label) {\n                              case 0:\n                                return [ 4 /*yield*/ , function(t) {\n                                    return Aa(t).then((function(t) {\n                                        return t.Sh;\n                                    }));\n                                }(t) ];\n\n                              case 1:\n                                return n = i.sent(), new _a(t._s, n, e, r).run(), [ 2 /*return*/ ];\n                            }\n                        }));\n                    }));\n                })), r.promise;\n            }(qa(t), (function(n) {\n                return e(new bc(t, n));\n            }));\n        }(this.d_, (function(n) {\n            return t(new Sc(e, n));\n        }));\n    }, e.prototype.batch = function() {\n        var t = this;\n        return qa(this.d_), new xc(new gc(this.d_, (function(e) {\n            return yc(t.d_, e);\n        })));\n    }, e.prototype.loadBundle = function(t) {\n        throw new q(M.FAILED_PRECONDITION, '\"loadBundle()\" does not exist, have you imported \"firebase/firestore/bundle\"?');\n    }, e.prototype.namedQuery = function(t) {\n        throw new q(M.FAILED_PRECONDITION, '\"namedQuery()\" does not exist, have you imported \"firebase/firestore/bundle\"?');\n    }, e;\n}(Ss), Ac = /** @class */ function(t) {\n    function e(e) {\n        var n = this;\n        return (n = t.call(this) || this).firestore = e, n;\n    }\n    return m(e, t), e.prototype.Wf = function(t) {\n        return new Ec(new F(t));\n    }, e.prototype.jf = function(t) {\n        var e = this.Jf(t, this.firestore.I_);\n        return Oc.yd(e, this.firestore, /* converter= */ null);\n    }, e;\n}(Ga);\n\n/**\n * The persistence provider included with the full Firestore SDK.\n */ function Dc(t) {\n    var e;\n    e = t, E.setLogLevel(e);\n}\n\n/**\n * A reference to a transaction.\n */ var Sc = /** @class */ function(t) {\n    function e(e, n) {\n        var r = this;\n        return (r = t.call(this, n) || this).Yf = e, r.Xf = new Ac(e), r;\n    }\n    return m(e, t), e.prototype.get = function(t) {\n        var e = this, n = jc(t);\n        return this.d_.get(n).then((function(t) {\n            return new Lc(e.Yf, new ac(e.Yf.d_, e.Xf, t.S_, t.Zf, t.metadata, n.v_));\n        }));\n    }, e.prototype.set = function(t, e, n) {\n        var r = jc(t);\n        return n ? (ks(\"Transaction.set\", n), this.d_.set(r, e, n)) : this.d_.set(r, e), \n        this;\n    }, e.prototype.update = function(t, e, n) {\n        for (var r, i = [], o = 3; o < arguments.length; o++) i[o - 3] = arguments[o];\n        var u = jc(t);\n        return 2 === arguments.length ? this.d_.update(u, e) : (r = this.d_).update.apply(r, b([ u, e, n ], i)), \n        this;\n    }, e.prototype.delete = function(t) {\n        var e = jc(t);\n        return this.d_.delete(e), this;\n    }, e;\n}(Ss), xc = /** @class */ function(t) {\n    function e() {\n        return null !== t && t.apply(this, arguments) || this;\n    }\n    return m(e, t), e.prototype.set = function(t, e, n) {\n        var r = jc(t);\n        return n ? (ks(\"WriteBatch.set\", n), this.d_.set(r, e, n)) : this.d_.set(r, e), \n        this;\n    }, e.prototype.update = function(t, e, n) {\n        for (var r, i = [], o = 3; o < arguments.length; o++) i[o - 3] = arguments[o];\n        var u = jc(t);\n        return 2 === arguments.length ? this.d_.update(u, e) : (r = this.d_).update.apply(r, b([ u, e, n ], i)), \n        this;\n    }, e.prototype.delete = function(t) {\n        var e = jc(t);\n        return this.d_.delete(e), this;\n    }, e.prototype.commit = function() {\n        return this.d_.commit();\n    }, e;\n}(Ss), kc = /** @class */ function(t) {\n    function e(e, n, r) {\n        var i = this;\n        return (i = t.call(this, r) || this).Yf = e, i.Xf = n, i;\n    }\n    return m(e, t), e.prototype.fromFirestore = function(t, e) {\n        var n = new cc(this.Yf.d_, this.Xf, t.S_, t.Zf, t.metadata, \n        /* converter= */ null);\n        return this.d_.fromFirestore(new Rc(this.Yf, n), null != e ? e : {});\n    }, e.prototype.toFirestore = function(t, e) {\n        return e ? this.d_.toFirestore(t, e) : this.d_.toFirestore(t);\n    }, \n    // Use the same instance of `FirestoreDataConverter` for the given instances\n    // of `Firestore` and `PublicFirestoreDataConverter` so that isEqual() will\n    // compare equal for two objects created with the same converter instance.\n    e.gd = function(t, n) {\n        var r = e.Vd, i = r.get(t);\n        i || (i = new WeakMap, r.set(t, i));\n        var o = i.get(n);\n        return o || (o = new e(t, new Ac(t), n), i.set(n, o)), o;\n    }, e;\n}(Ss);\n\nkc.Vd = new WeakMap;\n\n/**\n * A reference to a particular document in a collection in the database.\n */\nvar Oc = /** @class */ function(t) {\n    function e(e, n) {\n        var r = this;\n        return (r = t.call(this, n) || this).firestore = e, r.Xf = new Ac(e), r;\n    }\n    return m(e, t), e.pd = function(t, n, r) {\n        if (t.length % 2 != 0) throw new q(M.INVALID_ARGUMENT, \"Invalid document reference. Document references must have an even number of segments, but \" + t.rt() + \" has \" + t.length);\n        return new e(n, new Fs(n.d_, r, new tt(t)));\n    }, e.yd = function(t, n, r) {\n        return new e(n, new Fs(n.d_, r, t));\n    }, Object.defineProperty(e.prototype, \"id\", {\n        get: function() {\n            return this.d_.id;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(e.prototype, \"parent\", {\n        get: function() {\n            return new Fc(this.firestore, this.d_.parent);\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(e.prototype, \"path\", {\n        get: function() {\n            return this.d_.path;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), e.prototype.collection = function(t) {\n        try {\n            return new Fc(this.firestore, Gs(this.d_, t));\n        } catch (t) {\n            throw Pc(t, \"collection()\", \"DocumentReference.collection()\");\n        }\n    }, e.prototype.isEqual = function(t) {\n        return t instanceof Ss && (t = t.d_), t instanceof Fs && Qs(this.d_, t);\n    }, e.prototype.set = function(t, e) {\n        e = ks(\"DocumentReference.set\", e);\n        try {\n            return function(t, e, n) {\n                t = Ls(t, Fs);\n                var r = Ls(t.firestore, Ma), i = oc(t.v_, e, n);\n                return yc(r, [ ea(ta(r), \"setDoc\", t.S_, i, null !== t.v_, n).F_(t.S_, Re.Kt()) ]);\n            }(this.d_, t, e);\n        } catch (t) {\n            throw Pc(t, \"setDoc()\", \"DocumentReference.set()\");\n        }\n    }, e.prototype.update = function(t, e) {\n        for (var n = [], r = 2; r < arguments.length; r++) n[r - 2] = arguments[r];\n        try {\n            return 1 === arguments.length ? dc(this.d_, t) : dc.apply(void 0, b([ this.d_, t, e ], n));\n        } catch (t) {\n            throw Pc(t, \"updateDoc()\", \"DocumentReference.update()\");\n        }\n    }, e.prototype.delete = function() {\n        return yc(Ls((t = this.d_).firestore, Ma), [ new Je(t.S_, Re.Kt()) ]);\n        var t;\n        /**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @returns A Promise resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend (Note that it\n * won't resolve while you're offline).\n */    }, e.prototype.onSnapshot = function() {\n        for (var t = this, e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];\n        var r = Vc(e), i = Cc(e, (function(e) {\n            return new Lc(t.firestore, new ac(t.firestore.d_, t.Xf, e.S_, e.Zf, e.metadata, t.d_.v_));\n        }));\n        return vc(this.d_, r, i);\n    }, e.prototype.get = function(t) {\n        var e = this;\n        return (\"cache\" === (null == t ? void 0 : t.source) ? function(t) {\n            t = Ls(t, Fs);\n            var e = Ls(t.firestore, Ma), n = qa(e), r = new pc(e);\n            return function(t, e) {\n                var n = this, r = new fr;\n                return t._s.Ps((function() {\n                    return g(n, void 0, void 0, (function() {\n                        var n;\n                        return w(this, (function(i) {\n                            switch (i.label) {\n                              case 0:\n                                return n = function(t, e, n) {\n                                    return g(this, void 0, void 0, (function() {\n                                        var r, i;\n                                        return w(this, (function(o) {\n                                            switch (o.label) {\n                                              case 0:\n                                                return o.trys.push([ 0, 2, , 3 ]), [ 4 /*yield*/ , function(t, e) {\n                                                    var n = O(t);\n                                                    return n.persistence.runTransaction(\"read document\", \"readonly\", (function(t) {\n                                                        return n.Tc.Ho(t, e);\n                                                    }));\n                                                }(t, e) ];\n\n                                              case 1:\n                                                return (i = o.sent()) instanceof Pt ? n.resolve(i) : i instanceof Vt ? n.resolve(null) : n.reject(new q(M.UNAVAILABLE, \"Failed to get document from cache. (However, this document may exist on the server. Run again without setting 'source' in the GetOptions to attempt to retrieve the document from the server.)\")), \n                                                [ 3 /*break*/ , 3 ];\n\n                                              case 2:\n                                                return r = o.sent(), i = Er(r, \"Failed to get document '\" + e + \" from cache\"), \n                                                n.reject(i), [ 3 /*break*/ , 3 ];\n\n                                              case 3:\n                                                return [ 2 /*return*/ ];\n                                            }\n                                        }));\n                                    }));\n                                }, [ 4 /*yield*/ , Sa(t) ];\n\n                              case 1:\n                                return [ 2 /*return*/ , n.apply(void 0, [ i.sent(), e, r ]) ];\n                            }\n                        }));\n                    }));\n                })), r.promise;\n            }(n, t.S_).then((function(n) {\n                return new ac(e, r, t.S_, n, new sc(n instanceof Pt && n.Vt, \n                /* fromCache= */ !0), t.v_);\n            }));\n        }(this.d_) : \"server\" === (null == t ? void 0 : t.source) ? function(t) {\n            t = Ls(t, Fs);\n            var e = Ls(t.firestore, Ma);\n            return Pa(qa(e), t.S_, {\n                source: \"server\"\n            }).then((function(n) {\n                return mc(e, t, n);\n            }));\n        }(this.d_) : function(t) {\n            t = Ls(t, Fs);\n            var e = Ls(t.firestore, Ma);\n            return Pa(qa(e), t.S_).then((function(n) {\n                return mc(e, t, n);\n            }));\n        }(this.d_)).then((function(t) {\n            return new Lc(e.firestore, new ac(e.firestore.d_, e.Xf, t.S_, t.Zf, t.metadata, e.d_.v_));\n        }));\n    }, e.prototype.withConverter = function(t) {\n        return new e(this.firestore, this.d_.withConverter(kc.gd(this.firestore, t)));\n    }, e;\n}(Ss);\n\n/**\n * Replaces the function name in an error thrown by the firestore-exp API\n * with the function names used in the classic API.\n */ function Pc(t, e, n) {\n    return t.message = t.message.replace(e, n), t\n    /**\n * Iterates the list of arguments from an `onSnapshot` call and returns the\n * first argument that may be an `SnapshotListenOptions` object. Returns an\n * empty object if none is found.\n */;\n}\n\nfunction Vc(t) {\n    for (var e = 0, n = t; e < n.length; e++) {\n        var r = n[e];\n        if (\"object\" == typeof r && !La(r)) return r;\n    }\n    return {};\n}\n\n/**\n * Creates an observer that can be passed to the firestore-exp SDK. The\n * observer converts all observed values into the format expected by the classic\n * SDK.\n *\n * @param args - The list of arguments from an `onSnapshot` call.\n * @param wrapper - The function that converts the firestore-exp type into the\n * type used by this shim.\n */ function Cc(t, e) {\n    var n, r, i;\n    return {\n        next: function(t) {\n            i.next && i.next(e(t));\n        },\n        error: null === (n = (i = La(t[0]) ? t[0] : La(t[1]) ? t[1] : \"function\" == typeof t[0] ? {\n            next: t[0],\n            error: t[1],\n            complete: t[2]\n        } : {\n            next: t[1],\n            error: t[2],\n            complete: t[3]\n        }).error) || void 0 === n ? void 0 : n.bind(i),\n        complete: null === (r = i.complete) || void 0 === r ? void 0 : r.bind(i)\n    };\n}\n\nvar Lc = /** @class */ function(t) {\n    function e(e, n) {\n        var r = this;\n        return (r = t.call(this, n) || this).Yf = e, r;\n    }\n    return m(e, t), Object.defineProperty(e.prototype, \"ref\", {\n        get: function() {\n            return new Oc(this.Yf, this.d_.ref);\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(e.prototype, \"id\", {\n        get: function() {\n            return this.d_.id;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(e.prototype, \"metadata\", {\n        get: function() {\n            return this.d_.metadata;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(e.prototype, \"exists\", {\n        get: function() {\n            return this.d_.exists();\n        },\n        enumerable: !1,\n        configurable: !0\n    }), e.prototype.data = function(t) {\n        return this.d_.data(t);\n    }, e.prototype.get = function(t, e) {\n        return this.d_.get(t, e);\n    }, e.prototype.isEqual = function(t) {\n        return lc(this.d_, t.d_);\n    }, e;\n}(Ss), Rc = /** @class */ function(t) {\n    function e() {\n        return null !== t && t.apply(this, arguments) || this;\n    }\n    return m(e, t), e.prototype.data = function(t) {\n        return this.d_.data(t);\n    }, e;\n}(Lc), Uc = /** @class */ function(t) {\n    function e(e, n) {\n        var r = this;\n        return (r = t.call(this, n) || this).firestore = e, r.Xf = new Ac(e), r;\n    }\n    return m(e, t), e.prototype.where = function(t, n, r) {\n        try {\n            // The \"as string\" cast is a little bit of a hack. `where` accepts the\n            // FieldPath Compat type as input, but is not typed as such in order to\n            // not expose this via our public typings file.\n            return new e(this.firestore, Xa(this.d_, function(t, e, n) {\n                var r = e, i = Ya(\"where\", t);\n                return new Wa(i, r, n);\n            }(t, n, r)));\n        } catch (t) {\n            throw Pc(t, /(orderBy|where)\\(\\)/, \"Query.$1()\");\n        }\n    }, e.prototype.orderBy = function(t, n) {\n        try {\n            // The \"as string\" cast is a little bit of a hack. `orderBy` accepts the\n            // FieldPath Compat type as input, but is not typed as such in order to\n            // not expose this via our public typings file.\n            return new e(this.firestore, Xa(this.d_, function(t, e) {\n                void 0 === e && (e = \"asc\");\n                var n = e, r = Ya(\"orderBy\", t);\n                return new Za(r, n);\n            }(t, n)));\n        } catch (t) {\n            throw Pc(t, /(orderBy|where)\\(\\)/, \"Query.$1()\");\n        }\n    }, e.prototype.limit = function(t) {\n        try {\n            return new e(this.firestore, Xa(this.d_, function(t) {\n                return Rs(\"limit\", t), new Ja(\"limit\", t, \"F\" /* First */);\n            }(t)));\n        } catch (t) {\n            throw Pc(t, \"limit()\", \"Query.limit()\");\n        }\n    }, e.prototype.limitToLast = function(t) {\n        try {\n            return new e(this.firestore, Xa(this.d_, function(t) {\n                return Rs(\"limitToLast\", t), new Ja(\"limitToLast\", t, \"L\" /* Last */);\n            }(t)));\n        } catch (t) {\n            throw Pc(t, \"limitToLast()\", \"Query.limitToLast()\");\n        }\n    }, e.prototype.startAt = function() {\n        for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];\n        try {\n            return new e(this.firestore, Xa(this.d_, function() {\n                for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];\n                return new $a(\"startAt\", t, /*before=*/ !0);\n            }.apply(void 0, t)));\n        } catch (t) {\n            throw Pc(t, \"startAt()\", \"Query.startAt()\");\n        }\n    }, e.prototype.startAfter = function() {\n        for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];\n        try {\n            return new e(this.firestore, Xa(this.d_, function() {\n                for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];\n                return new $a(\"startAfter\", t, \n                /*before=*/ !1);\n            }.apply(void 0, t)));\n        } catch (t) {\n            throw Pc(t, \"startAfter()\", \"Query.startAfter()\");\n        }\n    }, e.prototype.endBefore = function() {\n        for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];\n        try {\n            return new e(this.firestore, Xa(this.d_, function() {\n                for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];\n                return new tc(\"endBefore\", t, /*before=*/ !0);\n            }.apply(void 0, t)));\n        } catch (t) {\n            throw Pc(t, \"endBefore()\", \"Query.endBefore()\");\n        }\n    }, e.prototype.endAt = function() {\n        for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];\n        try {\n            return new e(this.firestore, Xa(this.d_, function() {\n                for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];\n                return new tc(\"endAt\", t, /*before=*/ !1);\n            }.apply(void 0, t)));\n        } catch (t) {\n            throw Pc(t, \"endAt()\", \"Query.endAt()\");\n        }\n    }, e.prototype.isEqual = function(t) {\n        return Ys(this.d_, t.d_);\n    }, e.prototype.get = function(t) {\n        var e = this;\n        return (\"cache\" === (null == t ? void 0 : t.source) ? \n        /**\n     * Executes the query and returns the results as a `QuerySnapshot` from cache.\n     * Returns an error if the document is not currently cached.\n     *\n     * @returns A Promise that will be resolved with the results of the query.\n     */\n        function(t) {\n            t = Ls(t, js);\n            var e = Ls(t.firestore, Ma), n = qa(e), r = new pc(e);\n            return function(t, e) {\n                var n = this, r = new fr;\n                return t._s.Ps((function() {\n                    return g(n, void 0, void 0, (function() {\n                        var n;\n                        return w(this, (function(i) {\n                            switch (i.label) {\n                              case 0:\n                                return n = function(t, e, n) {\n                                    return g(this, void 0, void 0, (function() {\n                                        var r, i, o, u, s;\n                                        return w(this, (function(a) {\n                                            switch (a.label) {\n                                              case 0:\n                                                return a.trys.push([ 0, 2, , 3 ]), [ 4 /*yield*/ , ho(t, e, \n                                                /* usePreviousResults= */ !0) ];\n\n                                              case 1:\n                                                return s = a.sent(), r = new Uu(e, s.Rc), i = r.fl(s.documents), o = r.wi(i, \n                                                /* updateLimboDocuments= */ !1), n.resolve(o.snapshot), [ 3 /*break*/ , 3 ];\n\n                                              case 2:\n                                                return u = a.sent(), s = Er(u, \"Failed to execute query '\" + e + \" against cache\"), \n                                                n.reject(s), [ 3 /*break*/ , 3 ];\n\n                                              case 3:\n                                                return [ 2 /*return*/ ];\n                                            }\n                                        }));\n                                    }));\n                                }, [ 4 /*yield*/ , Sa(t) ];\n\n                              case 1:\n                                return [ 2 /*return*/ , n.apply(void 0, [ i.sent(), e, r ]) ];\n                            }\n                        }));\n                    }));\n                })), r.promise;\n            }(n, t.C_).then((function(n) {\n                return new hc(e, r, t, n);\n            }));\n        }(this.d_) : \"server\" === (null == t ? void 0 : t.source) ? function(t) {\n            t = Ls(t, js);\n            var e = Ls(t.firestore, Ma), n = qa(e), r = new pc(e);\n            return Va(n, t.C_, {\n                source: \"server\"\n            }).then((function(n) {\n                return new hc(e, r, t, n);\n            }));\n        }(this.d_) : function(t) {\n            t = Ls(t, js);\n            var e = Ls(t.firestore, Ma), n = qa(e), r = new pc(e);\n            return Ha(t.C_), Va(n, t.C_).then((function(n) {\n                return new hc(e, r, t, n);\n            }));\n        }(this.d_)).then((function(t) {\n            return new qc(e.firestore, new hc(e.firestore.d_, e.Xf, e.d_, t._d));\n        }));\n    }, e.prototype.onSnapshot = function() {\n        for (var t = this, e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];\n        var r = Vc(e), i = Cc(e, (function(e) {\n            return new qc(t.firestore, new hc(t.firestore.d_, t.Xf, t.d_, e._d));\n        }));\n        return vc(this.d_, r, i);\n    }, e.prototype.withConverter = function(t) {\n        return new e(this.firestore, this.d_.withConverter(kc.gd(this.firestore, t)));\n    }, e;\n}(Ss), Mc = /** @class */ function(t) {\n    function e(e, n) {\n        var r = this;\n        return (r = t.call(this, n) || this).Yf = e, r;\n    }\n    return m(e, t), Object.defineProperty(e.prototype, \"type\", {\n        get: function() {\n            return this.d_.type;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(e.prototype, \"doc\", {\n        get: function() {\n            return new Rc(this.Yf, this.d_.doc);\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(e.prototype, \"oldIndex\", {\n        get: function() {\n            return this.d_.oldIndex;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(e.prototype, \"newIndex\", {\n        get: function() {\n            return this.d_.newIndex;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), e;\n}(Ss), qc = /** @class */ function(t) {\n    function e(e, n) {\n        var r = this;\n        return (r = t.call(this, n) || this).Yf = e, r;\n    }\n    return m(e, t), Object.defineProperty(e.prototype, \"query\", {\n        get: function() {\n            return new Uc(this.Yf, this.d_.query);\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(e.prototype, \"metadata\", {\n        get: function() {\n            return this.d_.metadata;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(e.prototype, \"size\", {\n        get: function() {\n            return this.d_.size;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(e.prototype, \"empty\", {\n        get: function() {\n            return this.d_.empty;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(e.prototype, \"docs\", {\n        get: function() {\n            var t = this;\n            return this.d_.docs.map((function(e) {\n                return new Rc(t.Yf, e);\n            }));\n        },\n        enumerable: !1,\n        configurable: !0\n    }), e.prototype.docChanges = function(t) {\n        var e = this;\n        return this.d_.docChanges(t).map((function(t) {\n            return new Mc(e.Yf, t);\n        }));\n    }, e.prototype.forEach = function(t, e) {\n        var n = this;\n        this.d_.forEach((function(r) {\n            t.call(e, new Rc(n.Yf, r));\n        }));\n    }, e.prototype.isEqual = function(t) {\n        return lc(this.d_, t.d_);\n    }, e;\n}(Ss), Fc = /** @class */ function(t) {\n    function e(e, n) {\n        var r = this;\n        return (r = t.call(this, e, n) || this).firestore = e, r.d_ = n, r;\n    }\n    return m(e, t), Object.defineProperty(e.prototype, \"id\", {\n        get: function() {\n            return this.d_.id;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(e.prototype, \"path\", {\n        get: function() {\n            return this.d_.path;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), Object.defineProperty(e.prototype, \"parent\", {\n        get: function() {\n            var t = this.d_.parent;\n            return t ? new Oc(this.firestore, t) : null;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), e.prototype.doc = function(t) {\n        try {\n            return new Oc(this.firestore, void 0 === t ? Bs(this.d_) : Bs(this.d_, t));\n        } catch (t) {\n            throw Pc(t, \"doc()\", \"CollectionReference.doc()\");\n        }\n    }, e.prototype.add = function(t) {\n        var e = this;\n        return function(t, e) {\n            var n = Ls(t.firestore, Ma), r = Bs(t), i = oc(t.v_, e);\n            return yc(n, [ ea(ta(t.firestore), \"addDoc\", r.S_, i, null !== t.v_, {}).F_(r.S_, Re.exists(!1)) ]).then((function() {\n                return r;\n            }));\n        }(this.d_, t).then((function(t) {\n            return new Oc(e.firestore, t);\n        }));\n    }, e.prototype.isEqual = function(t) {\n        return Qs(this.d_, t.d_);\n    }, e.prototype.withConverter = function(t) {\n        return new e(this.firestore, this.d_.withConverter(kc.gd(this.firestore, t)));\n    }, e;\n}(Uc);\n\nfunction jc(t) {\n    return t instanceof Ss && (t = t.d_), Ls(t, Fs);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The objects that are a part of this API are exposed to third-parties as\n// compiled javascript so we want to flag our private members with a leading\n// underscore to discourage their use.\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a list\n * of field names (referring to a nested field in the document).\n */ var zc = /** @class */ function(t) {\n    /**\n     * Creates a FieldPath from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    function e() {\n        for (var e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];\n        return t.call(this, new (As.bind.apply(As, b([ void 0 ], e)))) || this;\n    }\n    return m(e, t), e.documentId = function() {\n        /**\n         * Internal Note: The backend doesn't technically support querying by\n         * document ID. Instead it queries by the entire document name (full path\n         * included), but in the cases we currently support documentId(), the net\n         * effect is the same.\n         */\n        return new e($.ht().rt());\n    }, e.prototype.isEqual = function(t) {\n        return t instanceof Ss && (t = t.d_), t instanceof As && this.d_.f_.isEqual(t.f_);\n    }, e;\n}(Ss), Gc = /** @class */ function(t) {\n    function e() {\n        return null !== t && t.apply(this, arguments) || this;\n    }\n    return m(e, t), e.serverTimestamp = function() {\n        var t = new ia(\"serverTimestamp\");\n        return t._methodName = \"FieldValue.serverTimestamp\", new e(t);\n    }, e.delete = function() {\n        var t = new na(\"deleteField\");\n        return t._methodName = \"FieldValue.delete\", new e(t);\n    }, e.arrayUnion = function() {\n        for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];\n        var r = \n        /**\n * Returns a special value that can be used with {@link setDoc} or {@link\n * updateDoc} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */\n        function() {\n            for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];\n            // NOTE: We don't actually parse the data until it's used in set() or\n            // update() since we'd need the Firestore instance to do this.\n                        return new oa(\"arrayUnion\", t);\n        }.apply(void 0, t);\n        return r._methodName = \"FieldValue.arrayUnion\", new e(r);\n    }, e.arrayRemove = function() {\n        for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];\n        var r = function() {\n            for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];\n            // NOTE: We don't actually parse the data until it's used in set() or\n            // update() since we'd need the Firestore instance to do this.\n                        return new ua(\"arrayRemove\", t);\n        }.apply(void 0, t);\n        return r._methodName = \"FieldValue.arrayRemove\", new e(r);\n    }, e.increment = function(t) {\n        var n = function(t) {\n            return new sa(\"increment\", t);\n        }(t);\n        return n._methodName = \"FieldValue.increment\", new e(n);\n    }, e.prototype.isEqual = function(t) {\n        return this.d_.isEqual(t.d_);\n    }, e;\n}(Ss);\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link updateDoc} or\n * {@link setDoc} with `{merge: true}` to mark a field for deletion.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction Bc(t) {\n    /**\n * Loads a Firestore bundle into the local cache.\n *\n * @param firestore - The `Firestore` instance to load bundles for for.\n * @param bundleData - An object representing the bundle to be loaded. Valid objects are\n *   `ArrayBuffer`, `ReadableStream<Uint8Array>` or `string`.\n *\n * @return\n *   A `LoadBundleTask` object, which notifies callers with progress updates, and completion\n *   or error events. It can be used as a `Promise<LoadBundleTaskProgress>`.\n */\n    return function(t, e) {\n        var n = qa(t = Ls(t, Ma)), r = new Ra;\n        return function(t, e, n, r) {\n            var i = this, o = function(t, e) {\n                return function(t, e) {\n                    return new Ns(t, e);\n                }(function(t, e) {\n                    if (t instanceof Uint8Array) return Es(t, e);\n                    if (t instanceof ArrayBuffer) return Es(new Uint8Array(t), e);\n                    if (t instanceof ReadableStream) return t.getReader();\n                    throw new Error(\"Source of `toByteStreamReader` has to be a ArrayBuffer or ReadableStream\");\n                }(\"string\" == typeof t ? (new TextEncoder).encode(t) : t), e);\n            }(n, Bo(e));\n            t._s.Ps((function() {\n                return g(i, void 0, void 0, (function() {\n                    var e;\n                    return w(this, (function(n) {\n                        switch (n.label) {\n                          case 0:\n                            return e = gs, [ 4 /*yield*/ , ka(t) ];\n\n                          case 1:\n                            return e.apply(void 0, [ n.sent(), o, r ]), [ 2 /*return*/ ];\n                        }\n                    }));\n                }));\n            }));\n        }(n, t.I_, e, r), r;\n    }(this.d_, t);\n}\n\nfunction Qc(t) {\n    var e, n, r = this;\n    return (e = this.d_, n = t, function(t, e) {\n        var n = this;\n        return t._s.enqueue((function() {\n            return g(n, void 0, void 0, (function() {\n                var n;\n                return w(this, (function(r) {\n                    switch (r.label) {\n                      case 0:\n                        return n = function(t, e) {\n                            var n = O(t);\n                            return n.persistence.runTransaction(\"Get named query\", \"readonly\", (function(t) {\n                                return n.wo.Ms(t, e);\n                            }));\n                        }, [ 4 /*yield*/ , Sa(t) ];\n\n                      case 1:\n                        return [ 2 /*return*/ , n.apply(void 0, [ r.sent(), e ]) ];\n                    }\n                }));\n            }));\n        }));\n    }(qa(e = Ls(e, Ma)), n).then((function(t) {\n        return t ? new js(e, null, t.query) : null;\n    }))).then((function(t) {\n        return t ? new Uc(r, t) : null;\n    }));\n}\n\nexport { xc as G, Oc as H, K, Ec as L, Nc as Q, Tc as U, Dc as W, Ma as X, Ua as Y, Hs as Z, Lc as a, Bc as b, Gc as c, Uc as e, Fc as i, Sc as j, zc as o, qc as s, Rc as t, Qc as u };\n//# sourceMappingURL=prebuilt-7840cb8c-52081c7f.js.map\n","import firebase from '@firebase/app';\nimport '@firebase/installations';\nimport { __spreadArrays, __assign } from 'tslib';\nimport { ErrorFactory, isIndexedDBAvailable, validateIndexedDBOpenable } from '@firebase/util';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { Component } from '@firebase/component';\n\nvar name = \"@firebase/performance\";\nvar version = \"0.4.5\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SDK_VERSION = version;\r\n/** The prefix for start User Timing marks used for creating Traces. */\r\nvar TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\r\n/** The prefix for stop User Timing marks used for creating Traces. */\r\nvar TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\r\n/** The prefix for User Timing measure used for creating Traces. */\r\nvar TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\r\n/** The prefix for out of the box page load Trace name. */\r\nvar OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\r\nvar FIRST_PAINT_COUNTER_NAME = '_fp';\r\nvar FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\r\nvar FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\r\nvar CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\r\nvar CONFIG_EXPIRY_LOCAL_STORAGE_KEY = '@firebase/performance/configexpire';\r\nvar SERVICE = 'performance';\r\nvar SERVICE_NAME = 'Performance';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_DESCRIPTION_MAP = (_a = {},\r\n    _a[\"trace started\" /* TRACE_STARTED_BEFORE */] = 'Trace {$traceName} was started before.',\r\n    _a[\"trace stopped\" /* TRACE_STOPPED_BEFORE */] = 'Trace {$traceName} is not running.',\r\n    _a[\"nonpositive trace startTime\" /* NONPOSITIVE_TRACE_START_TIME */] = 'Trace {$traceName} startTime should be positive.',\r\n    _a[\"nonpositive trace duration\" /* NONPOSITIVE_TRACE_DURATION */] = 'Trace {$traceName} duration should be positive.',\r\n    _a[\"no window\" /* NO_WINDOW */] = 'Window is not available.',\r\n    _a[\"no app id\" /* NO_APP_ID */] = 'App id is not available.',\r\n    _a[\"no project id\" /* NO_PROJECT_ID */] = 'Project id is not available.',\r\n    _a[\"no api key\" /* NO_API_KEY */] = 'Api key is not available.',\r\n    _a[\"invalid cc log\" /* INVALID_CC_LOG */] = 'Attempted to queue invalid cc event',\r\n    _a[\"FB not default\" /* FB_NOT_DEFAULT */] = 'Performance can only start when Firebase app instance is the default one.',\r\n    _a[\"RC response not ok\" /* RC_NOT_OK */] = 'RC response is not ok',\r\n    _a[\"invalid attribute name\" /* INVALID_ATTRIBUTE_NAME */] = 'Attribute name {$attributeName} is invalid.',\r\n    _a[\"invalid attribute value\" /* INVALID_ATTRIBUTE_VALUE */] = 'Attribute value {$attributeValue} is invalid.',\r\n    _a[\"invalid custom metric name\" /* INVALID_CUSTOM_METRIC_NAME */] = 'Custom metric name {$customMetricName} is invalid',\r\n    _a[\"invalid String merger input\" /* INVALID_STRING_MERGER_PARAMETER */] = 'Input for String merger is invalid, contact support team to resolve.',\r\n    _a);\r\nvar ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar consoleLogger = new Logger(SERVICE_NAME);\r\nconsoleLogger.logLevel = LogLevel.INFO;\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar apiInstance;\r\nvar windowInstance;\r\n/**\r\n * This class holds a reference to various browser related objects injected by\r\n * set methods.\r\n */\r\nvar Api = /** @class */ (function () {\r\n    function Api(window) {\r\n        this.window = window;\r\n        if (!window) {\r\n            throw ERROR_FACTORY.create(\"no window\" /* NO_WINDOW */);\r\n        }\r\n        this.performance = window.performance;\r\n        this.PerformanceObserver = window.PerformanceObserver;\r\n        this.windowLocation = window.location;\r\n        this.navigator = window.navigator;\r\n        this.document = window.document;\r\n        if (this.navigator && this.navigator.cookieEnabled) {\r\n            // If user blocks cookies on the browser, accessing localStorage will\r\n            // throw an exception.\r\n            this.localStorage = window.localStorage;\r\n        }\r\n        if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\r\n            this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\r\n        }\r\n    }\r\n    Api.prototype.getUrl = function () {\r\n        // Do not capture the string query part of url.\r\n        return this.windowLocation.href.split('?')[0];\r\n    };\r\n    Api.prototype.mark = function (name) {\r\n        if (!this.performance || !this.performance.mark) {\r\n            return;\r\n        }\r\n        this.performance.mark(name);\r\n    };\r\n    Api.prototype.measure = function (measureName, mark1, mark2) {\r\n        if (!this.performance || !this.performance.measure) {\r\n            return;\r\n        }\r\n        this.performance.measure(measureName, mark1, mark2);\r\n    };\r\n    Api.prototype.getEntriesByType = function (type) {\r\n        if (!this.performance || !this.performance.getEntriesByType) {\r\n            return [];\r\n        }\r\n        return this.performance.getEntriesByType(type);\r\n    };\r\n    Api.prototype.getEntriesByName = function (name) {\r\n        if (!this.performance || !this.performance.getEntriesByName) {\r\n            return [];\r\n        }\r\n        return this.performance.getEntriesByName(name);\r\n    };\r\n    Api.prototype.getTimeOrigin = function () {\r\n        // Polyfill the time origin with performance.timing.navigationStart.\r\n        return (this.performance &&\r\n            (this.performance.timeOrigin || this.performance.timing.navigationStart));\r\n    };\r\n    Api.prototype.requiredApisAvailable = function () {\r\n        if (!fetch ||\r\n            !Promise ||\r\n            !this.navigator ||\r\n            !this.navigator.cookieEnabled) {\r\n            consoleLogger.info('Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.');\r\n            return false;\r\n        }\r\n        if (!isIndexedDBAvailable()) {\r\n            consoleLogger.info('IndexedDB is not supported by current browswer');\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    Api.prototype.setupObserver = function (entryType, callback) {\r\n        if (!this.PerformanceObserver) {\r\n            return;\r\n        }\r\n        var observer = new this.PerformanceObserver(function (list) {\r\n            for (var _i = 0, _a = list.getEntries(); _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                // `entry` is a PerformanceEntry instance.\r\n                callback(entry);\r\n            }\r\n        });\r\n        // Start observing the entry types you care about.\r\n        observer.observe({ entryTypes: [entryType] });\r\n    };\r\n    Api.getInstance = function () {\r\n        if (apiInstance === undefined) {\r\n            apiInstance = new Api(windowInstance);\r\n        }\r\n        return apiInstance;\r\n    };\r\n    return Api;\r\n}());\r\nfunction setupApi(window) {\r\n    windowInstance = window;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction mergeStrings(part1, part2) {\r\n    var sizeDiff = part1.length - part2.length;\r\n    if (sizeDiff < 0 || sizeDiff > 1) {\r\n        throw ERROR_FACTORY.create(\"invalid String merger input\" /* INVALID_STRING_MERGER_PARAMETER */);\r\n    }\r\n    var resultArray = [];\r\n    for (var i = 0; i < part1.length; i++) {\r\n        resultArray.push(part1.charAt(i));\r\n        if (part2.length > i) {\r\n            resultArray.push(part2.charAt(i));\r\n        }\r\n    }\r\n    return resultArray.join('');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar settingsServiceInstance;\r\nvar SettingsService = /** @class */ (function () {\r\n    function SettingsService() {\r\n        // The variable which controls logging of automatic traces and HTTP/S network monitoring.\r\n        this.instrumentationEnabled = true;\r\n        // The variable which controls logging of custom traces.\r\n        this.dataCollectionEnabled = true;\r\n        // Configuration flags set through remote config.\r\n        this.loggingEnabled = false;\r\n        // Sampling rate between 0 and 1.\r\n        this.tracesSamplingRate = 1;\r\n        this.networkRequestsSamplingRate = 1;\r\n        // Address of logging service.\r\n        this.logEndPointUrl = 'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\r\n        // Performance event transport endpoint URL which should be compatible with proto3.\r\n        // New Address for transport service, not configurable via Remote Config.\r\n        this.flTransportEndpointUrl = mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\r\n        this.transportKey = mergeStrings('AzSC8r6ReiGqFMyfvgow', 'Iayx0u-XT3vksVM-pIV');\r\n        // Source type for performance event logs.\r\n        this.logSource = 462;\r\n        // Flags which control per session logging of traces and network requests.\r\n        this.logTraceAfterSampling = false;\r\n        this.logNetworkAfterSampling = false;\r\n        // TTL of config retrieved from remote config in hours.\r\n        this.configTimeToLive = 12;\r\n    }\r\n    SettingsService.prototype.getAppId = function () {\r\n        var appId = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.appId;\r\n        if (!appId) {\r\n            throw ERROR_FACTORY.create(\"no app id\" /* NO_APP_ID */);\r\n        }\r\n        return appId;\r\n    };\r\n    SettingsService.prototype.getProjectId = function () {\r\n        var projectId = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.projectId;\r\n        if (!projectId) {\r\n            throw ERROR_FACTORY.create(\"no project id\" /* NO_PROJECT_ID */);\r\n        }\r\n        return projectId;\r\n    };\r\n    SettingsService.prototype.getApiKey = function () {\r\n        var apiKey = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.apiKey;\r\n        if (!apiKey) {\r\n            throw ERROR_FACTORY.create(\"no api key\" /* NO_API_KEY */);\r\n        }\r\n        return apiKey;\r\n    };\r\n    SettingsService.prototype.getFlTransportFullUrl = function () {\r\n        return this.flTransportEndpointUrl.concat('?key=', this.transportKey);\r\n    };\r\n    SettingsService.getInstance = function () {\r\n        if (settingsServiceInstance === undefined) {\r\n            settingsServiceInstance = new SettingsService();\r\n        }\r\n        return settingsServiceInstance;\r\n    };\r\n    return SettingsService;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar iid;\r\nfunction getIidPromise() {\r\n    var iidPromise = SettingsService.getInstance().installationsService.getId();\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    iidPromise.then(function (iidVal) {\r\n        iid = iidVal;\r\n    });\r\n    return iidPromise;\r\n}\r\n// This method should be used after the iid is retrieved by getIidPromise method.\r\nfunction getIid() {\r\n    return iid;\r\n}\r\nfunction getAuthTokenPromise() {\r\n    var authTokenPromise = SettingsService.getInstance().installationsService.getToken();\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    authTokenPromise.then(function (authTokenVal) {\r\n    });\r\n    return authTokenPromise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VisibilityState;\r\n(function (VisibilityState) {\r\n    VisibilityState[VisibilityState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\r\n    VisibilityState[VisibilityState[\"VISIBLE\"] = 1] = \"VISIBLE\";\r\n    VisibilityState[VisibilityState[\"HIDDEN\"] = 2] = \"HIDDEN\";\r\n})(VisibilityState || (VisibilityState = {}));\r\nvar RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\r\nvar ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\r\nvar MAX_ATTRIBUTE_NAME_LENGTH = 40;\r\nvar MAX_ATTRIBUTE_VALUE_LENGTH = 100;\r\nfunction getServiceWorkerStatus() {\r\n    var navigator = Api.getInstance().navigator;\r\n    if ('serviceWorker' in navigator) {\r\n        if (navigator.serviceWorker.controller) {\r\n            return 2 /* CONTROLLED */;\r\n        }\r\n        else {\r\n            return 3 /* UNCONTROLLED */;\r\n        }\r\n    }\r\n    else {\r\n        return 1 /* UNSUPPORTED */;\r\n    }\r\n}\r\nfunction getVisibilityState() {\r\n    var document = Api.getInstance().document;\r\n    var visibilityState = document.visibilityState;\r\n    switch (visibilityState) {\r\n        case 'visible':\r\n            return VisibilityState.VISIBLE;\r\n        case 'hidden':\r\n            return VisibilityState.HIDDEN;\r\n        default:\r\n            return VisibilityState.UNKNOWN;\r\n    }\r\n}\r\nfunction getEffectiveConnectionType() {\r\n    var navigator = Api.getInstance().navigator;\r\n    var navigatorConnection = navigator.connection;\r\n    var effectiveType = navigatorConnection && navigatorConnection.effectiveType;\r\n    switch (effectiveType) {\r\n        case 'slow-2g':\r\n            return 1 /* CONNECTION_SLOW_2G */;\r\n        case '2g':\r\n            return 2 /* CONNECTION_2G */;\r\n        case '3g':\r\n            return 3 /* CONNECTION_3G */;\r\n        case '4g':\r\n            return 4 /* CONNECTION_4G */;\r\n        default:\r\n            return 0 /* UNKNOWN */;\r\n    }\r\n}\r\nfunction isValidCustomAttributeName(name) {\r\n    if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\r\n        return false;\r\n    }\r\n    var matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(function (prefix) {\r\n        return name.startsWith(prefix);\r\n    });\r\n    return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\r\n}\r\nfunction isValidCustomAttributeValue(value) {\r\n    return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar REMOTE_CONFIG_SDK_VERSION = '0.0.1';\r\n// These values will be used if the remote config object is successfully\r\n// retrieved, but the template does not have these fields.\r\nvar DEFAULT_CONFIGS = {\r\n    loggingEnabled: true\r\n};\r\nvar FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\r\nfunction getConfig(iid) {\r\n    var config = getStoredConfig();\r\n    if (config) {\r\n        processConfig(config);\r\n        return Promise.resolve();\r\n    }\r\n    return getRemoteConfig(iid)\r\n        .then(processConfig)\r\n        .then(function (config) { return storeConfig(config); }, \r\n    /** Do nothing for error, use defaults set in settings service. */\r\n    function () { });\r\n}\r\nfunction getStoredConfig() {\r\n    var localStorage = Api.getInstance().localStorage;\r\n    if (!localStorage) {\r\n        return;\r\n    }\r\n    var expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\r\n    if (!expiryString || !configValid(expiryString)) {\r\n        return;\r\n    }\r\n    var configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\r\n    if (!configStringified) {\r\n        return;\r\n    }\r\n    try {\r\n        var configResponse = JSON.parse(configStringified);\r\n        return configResponse;\r\n    }\r\n    catch (_a) {\r\n        return;\r\n    }\r\n}\r\nfunction storeConfig(config) {\r\n    var localStorage = Api.getInstance().localStorage;\r\n    if (!config || !localStorage) {\r\n        return;\r\n    }\r\n    localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\r\n    localStorage.setItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY, String(Date.now() +\r\n        SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000));\r\n}\r\nvar COULD_NOT_GET_CONFIG_MSG = 'Could not fetch config, will use default configs';\r\nfunction getRemoteConfig(iid) {\r\n    // Perf needs auth token only to retrieve remote config.\r\n    return getAuthTokenPromise()\r\n        .then(function (authToken) {\r\n        var projectId = SettingsService.getInstance().getProjectId();\r\n        var configEndPoint = \"https://firebaseremoteconfig.googleapis.com/v1/projects/\" + projectId + \"/namespaces/fireperf:fetch?key=\" + SettingsService.getInstance().getApiKey();\r\n        var request = new Request(configEndPoint, {\r\n            method: 'POST',\r\n            headers: { Authorization: FIS_AUTH_PREFIX + \" \" + authToken },\r\n            /* eslint-disable camelcase */\r\n            body: JSON.stringify({\r\n                app_instance_id: iid,\r\n                app_instance_id_token: authToken,\r\n                app_id: SettingsService.getInstance().getAppId(),\r\n                app_version: SDK_VERSION,\r\n                sdk_version: REMOTE_CONFIG_SDK_VERSION\r\n            })\r\n            /* eslint-enable camelcase */\r\n        });\r\n        return fetch(request).then(function (response) {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            // In case response is not ok. This will be caught by catch.\r\n            throw ERROR_FACTORY.create(\"RC response not ok\" /* RC_NOT_OK */);\r\n        });\r\n    })\r\n        .catch(function () {\r\n        consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\r\n        return undefined;\r\n    });\r\n}\r\n/**\r\n * Processes config coming either from calling RC or from local storage.\r\n * This method only runs if call is successful or config in storage\r\n * is valid.\r\n */\r\nfunction processConfig(config) {\r\n    if (!config) {\r\n        return config;\r\n    }\r\n    var settingsServiceInstance = SettingsService.getInstance();\r\n    var entries = config.entries || {};\r\n    if (entries.fpr_enabled !== undefined) {\r\n        // TODO: Change the assignment of loggingEnabled once the received type is\r\n        // known.\r\n        settingsServiceInstance.loggingEnabled =\r\n            String(entries.fpr_enabled) === 'true';\r\n    }\r\n    else {\r\n        // Config retrieved successfully, but there is no fpr_enabled in template.\r\n        // Use secondary configs value.\r\n        settingsServiceInstance.loggingEnabled = DEFAULT_CONFIGS.loggingEnabled;\r\n    }\r\n    if (entries.fpr_log_source) {\r\n        settingsServiceInstance.logSource = Number(entries.fpr_log_source);\r\n    }\r\n    if (entries.fpr_log_endpoint_url) {\r\n        settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\r\n    }\r\n    // Key from Remote Config has to be non-empty string, otherwsie use local value.\r\n    if (entries.fpr_log_transport_key) {\r\n        settingsServiceInstance.transportKey = entries.fpr_log_transport_key;\r\n    }\r\n    if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\r\n        settingsServiceInstance.networkRequestsSamplingRate = Number(entries.fpr_vc_network_request_sampling_rate);\r\n    }\r\n    if (entries.fpr_vc_trace_sampling_rate !== undefined) {\r\n        settingsServiceInstance.tracesSamplingRate = Number(entries.fpr_vc_trace_sampling_rate);\r\n    }\r\n    // Set the per session trace and network logging flags.\r\n    settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(settingsServiceInstance.tracesSamplingRate);\r\n    settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(settingsServiceInstance.networkRequestsSamplingRate);\r\n    return config;\r\n}\r\nfunction configValid(expiry) {\r\n    return Number(expiry) > Date.now();\r\n}\r\nfunction shouldLogAfterSampling(samplingRate) {\r\n    return Math.random() <= samplingRate;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar initializationStatus = 1 /* notInitialized */;\r\nvar initializationPromise;\r\nfunction getInitializationPromise() {\r\n    initializationStatus = 2 /* initializationPending */;\r\n    initializationPromise = initializationPromise || initializePerf();\r\n    return initializationPromise;\r\n}\r\nfunction isPerfInitialized() {\r\n    return initializationStatus === 3 /* initialized */;\r\n}\r\nfunction initializePerf() {\r\n    return getDocumentReadyComplete()\r\n        .then(function () { return getIidPromise(); })\r\n        .then(function (iid) { return getConfig(iid); })\r\n        .then(function () { return changeInitializationStatus(); }, function () { return changeInitializationStatus(); });\r\n}\r\n/**\r\n * Returns a promise which resolves whenever the document readystate is complete or\r\n * immediately if it is called after page load complete.\r\n */\r\nfunction getDocumentReadyComplete() {\r\n    var document = Api.getInstance().document;\r\n    return new Promise(function (resolve) {\r\n        if (document && document.readyState !== 'complete') {\r\n            var handler_1 = function () {\r\n                if (document.readyState === 'complete') {\r\n                    document.removeEventListener('readystatechange', handler_1);\r\n                    resolve();\r\n                }\r\n            };\r\n            document.addEventListener('readystatechange', handler_1);\r\n        }\r\n        else {\r\n            resolve();\r\n        }\r\n    });\r\n}\r\nfunction changeInitializationStatus() {\r\n    initializationStatus = 3 /* initialized */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\r\nvar INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000;\r\n// If end point does not work, the call will be tried for these many times.\r\nvar DEFAULT_REMAINING_TRIES = 3;\r\nvar MAX_EVENT_COUNT_PER_REQUEST = 1000;\r\nvar remainingTries = DEFAULT_REMAINING_TRIES;\r\n/* eslint-enable camelcase */\r\nvar queue = [];\r\nvar isTransportSetup = false;\r\nfunction setupTransportService() {\r\n    if (!isTransportSetup) {\r\n        processQueue(INITIAL_SEND_TIME_DELAY_MS);\r\n        isTransportSetup = true;\r\n    }\r\n}\r\nfunction processQueue(timeOffset) {\r\n    setTimeout(function () {\r\n        // If there is no remainingTries left, stop retrying.\r\n        if (remainingTries === 0) {\r\n            return;\r\n        }\r\n        // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\r\n        if (!queue.length) {\r\n            return processQueue(DEFAULT_SEND_INTERVAL_MS);\r\n        }\r\n        dispatchQueueEvents();\r\n    }, timeOffset);\r\n}\r\nfunction dispatchQueueEvents() {\r\n    // Extract events up to the maximum cap of single logRequest from top of \"official queue\".\r\n    // The staged events will be used for current logRequest attempt, remaining events will be kept\r\n    // for next attempt.\r\n    var staged = queue.splice(0, MAX_EVENT_COUNT_PER_REQUEST);\r\n    /* eslint-disable camelcase */\r\n    // We will pass the JSON serialized event to the backend.\r\n    var log_event = staged.map(function (evt) { return ({\r\n        source_extension_json_proto3: evt.message,\r\n        event_time_ms: String(evt.eventTime)\r\n    }); });\r\n    var data = {\r\n        request_time_ms: String(Date.now()),\r\n        client_info: {\r\n            client_type: 1,\r\n            js_client_info: {}\r\n        },\r\n        log_source: SettingsService.getInstance().logSource,\r\n        log_event: log_event\r\n    };\r\n    /* eslint-enable camelcase */\r\n    sendEventsToFl(data, staged).catch(function () {\r\n        // If the request fails for some reason, add the events that were attempted\r\n        // back to the primary queue to retry later.\r\n        queue = __spreadArrays(staged, queue);\r\n        remainingTries--;\r\n        consoleLogger.info(\"Tries left: \" + remainingTries + \".\");\r\n        processQueue(DEFAULT_SEND_INTERVAL_MS);\r\n    });\r\n}\r\nfunction sendEventsToFl(data, staged) {\r\n    return postToFlEndpoint(data)\r\n        .then(function (res) {\r\n        if (!res.ok) {\r\n            consoleLogger.info('Call to Firebase backend failed.');\r\n        }\r\n        return res.json();\r\n    })\r\n        .then(function (res) {\r\n        // Find the next call wait time from the response.\r\n        var transportWait = Number(res.nextRequestWaitMillis);\r\n        var requestOffset = DEFAULT_SEND_INTERVAL_MS;\r\n        if (!isNaN(transportWait)) {\r\n            requestOffset = Math.max(transportWait, requestOffset);\r\n        }\r\n        // Delete request if response include RESPONSE_ACTION_UNKNOWN or DELETE_REQUEST action.\r\n        // Otherwise, retry request using normal scheduling if response include RETRY_REQUEST_LATER.\r\n        var logResponseDetails = res.logResponseDetails;\r\n        if (Array.isArray(logResponseDetails) &&\r\n            logResponseDetails.length > 0 &&\r\n            logResponseDetails[0].responseAction === 'RETRY_REQUEST_LATER') {\r\n            queue = __spreadArrays(staged, queue);\r\n            consoleLogger.info(\"Retry transport request later.\");\r\n        }\r\n        remainingTries = DEFAULT_REMAINING_TRIES;\r\n        // Schedule the next process.\r\n        processQueue(requestOffset);\r\n    });\r\n}\r\nfunction postToFlEndpoint(data) {\r\n    var flTransportFullUrl = SettingsService.getInstance().getFlTransportFullUrl();\r\n    return fetch(flTransportFullUrl, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data)\r\n    });\r\n}\r\nfunction addToQueue(evt) {\r\n    if (!evt.eventTime || !evt.message) {\r\n        throw ERROR_FACTORY.create(\"invalid cc log\" /* INVALID_CC_LOG */);\r\n    }\r\n    // Add the new event to the queue.\r\n    queue = __spreadArrays(queue, [evt]);\r\n}\r\n/** Log handler for cc service to send the performance logs to the server. */\r\nfunction transportHandler(\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nserializer) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        var message = serializer.apply(void 0, args);\r\n        addToQueue({\r\n            message: message,\r\n            eventTime: Date.now()\r\n        });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/* eslint-enble camelcase */\r\nvar logger;\r\n// This method is not called before initialization.\r\nfunction sendLog(resource, resourceType) {\r\n    if (!logger) {\r\n        logger = transportHandler(serializer);\r\n    }\r\n    logger(resource, resourceType);\r\n}\r\nfunction logTrace(trace) {\r\n    var settingsService = SettingsService.getInstance();\r\n    // Do not log if trace is auto generated and instrumentation is disabled.\r\n    if (!settingsService.instrumentationEnabled && trace.isAuto) {\r\n        return;\r\n    }\r\n    // Do not log if trace is custom and data collection is disabled.\r\n    if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\r\n        return;\r\n    }\r\n    // Do not log if required apis are not available.\r\n    if (!Api.getInstance().requiredApisAvailable()) {\r\n        return;\r\n    }\r\n    // Only log the page load auto traces if page is visible.\r\n    if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\r\n        return;\r\n    }\r\n    if (isPerfInitialized()) {\r\n        sendTraceLog(trace);\r\n    }\r\n    else {\r\n        // Custom traces can be used before the initialization but logging\r\n        // should wait until after.\r\n        getInitializationPromise().then(function () { return sendTraceLog(trace); }, function () { return sendTraceLog(trace); });\r\n    }\r\n}\r\nfunction sendTraceLog(trace) {\r\n    if (!getIid()) {\r\n        return;\r\n    }\r\n    var settingsService = SettingsService.getInstance();\r\n    if (!settingsService.loggingEnabled ||\r\n        !settingsService.logTraceAfterSampling) {\r\n        return;\r\n    }\r\n    setTimeout(function () { return sendLog(trace, 1 /* Trace */); }, 0);\r\n}\r\nfunction logNetworkRequest(networkRequest) {\r\n    var settingsService = SettingsService.getInstance();\r\n    // Do not log network requests if instrumentation is disabled.\r\n    if (!settingsService.instrumentationEnabled) {\r\n        return;\r\n    }\r\n    // Do not log the js sdk's call to transport service domain to avoid unnecessary cycle.\r\n    // Need to blacklist both old and new endpoints to avoid migration gap.\r\n    var networkRequestUrl = networkRequest.url;\r\n    // Blacklist old log endpoint and new transport endpoint.\r\n    // Because Performance SDK doesn't instrument requests sent from SDK itself.\r\n    var logEndpointUrl = settingsService.logEndPointUrl.split('?')[0];\r\n    var flEndpointUrl = settingsService.flTransportEndpointUrl.split('?')[0];\r\n    if (networkRequestUrl === logEndpointUrl ||\r\n        networkRequestUrl === flEndpointUrl) {\r\n        return;\r\n    }\r\n    if (!settingsService.loggingEnabled ||\r\n        !settingsService.logNetworkAfterSampling) {\r\n        return;\r\n    }\r\n    setTimeout(function () { return sendLog(networkRequest, 0 /* NetworkRequest */); }, 0);\r\n}\r\nfunction serializer(resource, resourceType) {\r\n    if (resourceType === 0 /* NetworkRequest */) {\r\n        return serializeNetworkRequest(resource);\r\n    }\r\n    return serializeTrace(resource);\r\n}\r\nfunction serializeNetworkRequest(networkRequest) {\r\n    var networkRequestMetric = {\r\n        url: networkRequest.url,\r\n        http_method: networkRequest.httpMethod || 0,\r\n        http_response_code: 200,\r\n        response_payload_bytes: networkRequest.responsePayloadBytes,\r\n        client_start_time_us: networkRequest.startTimeUs,\r\n        time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\r\n        time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\r\n    };\r\n    var perfMetric = {\r\n        application_info: getApplicationInfo(),\r\n        network_request_metric: networkRequestMetric\r\n    };\r\n    return JSON.stringify(perfMetric);\r\n}\r\nfunction serializeTrace(trace) {\r\n    var traceMetric = {\r\n        name: trace.name,\r\n        is_auto: trace.isAuto,\r\n        client_start_time_us: trace.startTimeUs,\r\n        duration_us: trace.durationUs\r\n    };\r\n    if (Object.keys(trace.counters).length !== 0) {\r\n        traceMetric.counters = trace.counters;\r\n    }\r\n    var customAttributes = trace.getAttributes();\r\n    if (Object.keys(customAttributes).length !== 0) {\r\n        traceMetric.custom_attributes = customAttributes;\r\n    }\r\n    var perfMetric = {\r\n        application_info: getApplicationInfo(),\r\n        trace_metric: traceMetric\r\n    };\r\n    return JSON.stringify(perfMetric);\r\n}\r\nfunction getApplicationInfo() {\r\n    return {\r\n        google_app_id: SettingsService.getInstance().getAppId(),\r\n        app_instance_id: getIid(),\r\n        web_app_info: {\r\n            sdk_version: SDK_VERSION,\r\n            page_url: Api.getInstance().getUrl(),\r\n            service_worker_status: getServiceWorkerStatus(),\r\n            visibility_state: getVisibilityState(),\r\n            effective_connection_type: getEffectiveConnectionType()\r\n        },\r\n        application_process_state: 0\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_METRIC_NAME_LENGTH = 100;\r\nvar RESERVED_AUTO_PREFIX = '_';\r\nvar oobMetrics = [\r\n    FIRST_PAINT_COUNTER_NAME,\r\n    FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\r\n    FIRST_INPUT_DELAY_COUNTER_NAME\r\n];\r\n/**\r\n * Returns true if the metric is custom and does not start with reserved prefix, or if\r\n * the metric is one of out of the box page load trace metrics.\r\n */\r\nfunction isValidMetricName(name, traceName) {\r\n    if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\r\n        return false;\r\n    }\r\n    return ((traceName &&\r\n        traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) &&\r\n        oobMetrics.indexOf(name) > -1) ||\r\n        !name.startsWith(RESERVED_AUTO_PREFIX));\r\n}\r\n/**\r\n * Converts the provided value to an integer value to be used in case of a metric.\r\n * @param providedValue Provided number value of the metric that needs to be converted to an integer.\r\n *\r\n * @returns Converted integer number to be set for the metric.\r\n */\r\nfunction convertMetricValueToInteger(providedValue) {\r\n    var valueAsInteger = Math.floor(providedValue);\r\n    if (valueAsInteger < providedValue) {\r\n        consoleLogger.info(\"Metric value should be an Integer, setting the value as : \" + valueAsInteger + \".\");\r\n    }\r\n    return valueAsInteger;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Trace = /** @class */ (function () {\r\n    /**\r\n     * @param name The name of the trace.\r\n     * @param isAuto If the trace is auto-instrumented.\r\n     * @param traceMeasureName The name of the measure marker in user timing specification. This field\r\n     * is only set when the trace is built for logging when the user directly uses the user timing\r\n     * api (performance.mark and performance.measure).\r\n     */\r\n    function Trace(name, isAuto, traceMeasureName) {\r\n        if (isAuto === void 0) { isAuto = false; }\r\n        this.name = name;\r\n        this.isAuto = isAuto;\r\n        this.state = 1 /* UNINITIALIZED */;\r\n        this.customAttributes = {};\r\n        this.counters = {};\r\n        this.api = Api.getInstance();\r\n        this.randomId = Math.floor(Math.random() * 1000000);\r\n        if (!this.isAuto) {\r\n            this.traceStartMark = TRACE_START_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            this.traceStopMark = TRACE_STOP_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            this.traceMeasure =\r\n                traceMeasureName ||\r\n                    TRACE_MEASURE_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            if (traceMeasureName) {\r\n                // For the case of direct user timing traces, no start stop will happen. The measure object\r\n                // is already available.\r\n                this.calculateTraceMetrics();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Starts a trace. The measurement of the duration starts at this point.\r\n     */\r\n    Trace.prototype.start = function () {\r\n        if (this.state !== 1 /* UNINITIALIZED */) {\r\n            throw ERROR_FACTORY.create(\"trace started\" /* TRACE_STARTED_BEFORE */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.api.mark(this.traceStartMark);\r\n        this.state = 2 /* RUNNING */;\r\n    };\r\n    /**\r\n     * Stops the trace. The measurement of the duration of the trace stops at this point and trace\r\n     * is logged.\r\n     */\r\n    Trace.prototype.stop = function () {\r\n        if (this.state !== 2 /* RUNNING */) {\r\n            throw ERROR_FACTORY.create(\"trace stopped\" /* TRACE_STOPPED_BEFORE */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.state = 3 /* TERMINATED */;\r\n        this.api.mark(this.traceStopMark);\r\n        this.api.measure(this.traceMeasure, this.traceStartMark, this.traceStopMark);\r\n        this.calculateTraceMetrics();\r\n        logTrace(this);\r\n    };\r\n    /**\r\n     * Records a trace with predetermined values. If this method is used a trace is created and logged\r\n     * directly. No need to use start and stop methods.\r\n     * @param startTime Trace start time since epoch in millisec\r\n     * @param duration The duraction of the trace in millisec\r\n     * @param options An object which can optionally hold maps of custom metrics and custom attributes\r\n     */\r\n    Trace.prototype.record = function (startTime, duration, options) {\r\n        if (startTime <= 0) {\r\n            throw ERROR_FACTORY.create(\"nonpositive trace startTime\" /* NONPOSITIVE_TRACE_START_TIME */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        if (duration <= 0) {\r\n            throw ERROR_FACTORY.create(\"nonpositive trace duration\" /* NONPOSITIVE_TRACE_DURATION */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.durationUs = Math.floor(duration * 1000);\r\n        this.startTimeUs = Math.floor(startTime * 1000);\r\n        if (options && options.attributes) {\r\n            this.customAttributes = __assign({}, options.attributes);\r\n        }\r\n        if (options && options.metrics) {\r\n            for (var _i = 0, _a = Object.keys(options.metrics); _i < _a.length; _i++) {\r\n                var metric = _a[_i];\r\n                if (!isNaN(Number(options.metrics[metric]))) {\r\n                    this.counters[metric] = Number(Math.floor(options.metrics[metric]));\r\n                }\r\n            }\r\n        }\r\n        logTrace(this);\r\n    };\r\n    /**\r\n     * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\r\n     * custom metric if one with the given name does not exist. The value will be floored down to an\r\n     * integer.\r\n     * @param counter Name of the custom metric\r\n     * @param numAsInteger Increment by value\r\n     */\r\n    Trace.prototype.incrementMetric = function (counter, numAsInteger) {\r\n        if (numAsInteger === void 0) { numAsInteger = 1; }\r\n        if (this.counters[counter] === undefined) {\r\n            this.putMetric(counter, numAsInteger);\r\n        }\r\n        else {\r\n            this.putMetric(counter, this.counters[counter] + numAsInteger);\r\n        }\r\n    };\r\n    /**\r\n     * Sets a custom metric to a specified value. Will create a new custom metric if one with the\r\n     * given name does not exist. The value will be floored down to an integer.\r\n     * @param counter Name of the custom metric\r\n     * @param numAsInteger Set custom metric to this value\r\n     */\r\n    Trace.prototype.putMetric = function (counter, numAsInteger) {\r\n        if (isValidMetricName(counter, this.name)) {\r\n            this.counters[counter] = convertMetricValueToInteger(numAsInteger);\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"invalid custom metric name\" /* INVALID_CUSTOM_METRIC_NAME */, {\r\n                customMetricName: counter\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Returns the value of the custom metric by that name. If a custom metric with that name does\r\n     * not exist will return zero.\r\n     * @param counter\r\n     */\r\n    Trace.prototype.getMetric = function (counter) {\r\n        return this.counters[counter] || 0;\r\n    };\r\n    /**\r\n     * Sets a custom attribute of a trace to a certain value.\r\n     * @param attr\r\n     * @param value\r\n     */\r\n    Trace.prototype.putAttribute = function (attr, value) {\r\n        var isValidName = isValidCustomAttributeName(attr);\r\n        var isValidValue = isValidCustomAttributeValue(value);\r\n        if (isValidName && isValidValue) {\r\n            this.customAttributes[attr] = value;\r\n            return;\r\n        }\r\n        // Throw appropriate error when the attribute name or value is invalid.\r\n        if (!isValidName) {\r\n            throw ERROR_FACTORY.create(\"invalid attribute name\" /* INVALID_ATTRIBUTE_NAME */, {\r\n                attributeName: attr\r\n            });\r\n        }\r\n        if (!isValidValue) {\r\n            throw ERROR_FACTORY.create(\"invalid attribute value\" /* INVALID_ATTRIBUTE_VALUE */, {\r\n                attributeValue: value\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Retrieves the value a custom attribute of a trace is set to.\r\n     * @param attr\r\n     */\r\n    Trace.prototype.getAttribute = function (attr) {\r\n        return this.customAttributes[attr];\r\n    };\r\n    Trace.prototype.removeAttribute = function (attr) {\r\n        if (this.customAttributes[attr] === undefined) {\r\n            return;\r\n        }\r\n        delete this.customAttributes[attr];\r\n    };\r\n    Trace.prototype.getAttributes = function () {\r\n        return __assign({}, this.customAttributes);\r\n    };\r\n    Trace.prototype.setStartTime = function (startTime) {\r\n        this.startTimeUs = startTime;\r\n    };\r\n    Trace.prototype.setDuration = function (duration) {\r\n        this.durationUs = duration;\r\n    };\r\n    /**\r\n     * Calculates and assigns the duration and start time of the trace using the measure performance\r\n     * entry.\r\n     */\r\n    Trace.prototype.calculateTraceMetrics = function () {\r\n        var perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\r\n        var perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\r\n        if (perfMeasureEntry) {\r\n            this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\r\n            this.startTimeUs = Math.floor((perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000);\r\n        }\r\n    };\r\n    /**\r\n     * @param navigationTimings A single element array which contains the navigationTIming object of\r\n     * the page load\r\n     * @param paintTimings A array which contains paintTiming object of the page load\r\n     * @param firstInputDelay First input delay in millisec\r\n     */\r\n    Trace.createOobTrace = function (navigationTimings, paintTimings, firstInputDelay) {\r\n        var route = Api.getInstance().getUrl();\r\n        if (!route) {\r\n            return;\r\n        }\r\n        var trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\r\n        var timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\r\n        trace.setStartTime(timeOriginUs);\r\n        // navigationTimings includes only one element.\r\n        if (navigationTimings && navigationTimings[0]) {\r\n            trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\r\n            trace.putMetric('domInteractive', Math.floor(navigationTimings[0].domInteractive * 1000));\r\n            trace.putMetric('domContentLoadedEventEnd', Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000));\r\n            trace.putMetric('loadEventEnd', Math.floor(navigationTimings[0].loadEventEnd * 1000));\r\n        }\r\n        var FIRST_PAINT = 'first-paint';\r\n        var FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\r\n        if (paintTimings) {\r\n            var firstPaint = paintTimings.find(function (paintObject) { return paintObject.name === FIRST_PAINT; });\r\n            if (firstPaint && firstPaint.startTime) {\r\n                trace.putMetric(FIRST_PAINT_COUNTER_NAME, Math.floor(firstPaint.startTime * 1000));\r\n            }\r\n            var firstContentfulPaint = paintTimings.find(function (paintObject) { return paintObject.name === FIRST_CONTENTFUL_PAINT; });\r\n            if (firstContentfulPaint && firstContentfulPaint.startTime) {\r\n                trace.putMetric(FIRST_CONTENTFUL_PAINT_COUNTER_NAME, Math.floor(firstContentfulPaint.startTime * 1000));\r\n            }\r\n            if (firstInputDelay) {\r\n                trace.putMetric(FIRST_INPUT_DELAY_COUNTER_NAME, Math.floor(firstInputDelay * 1000));\r\n            }\r\n        }\r\n        logTrace(trace);\r\n    };\r\n    Trace.createUserTimingTrace = function (measureName) {\r\n        var trace = new Trace(measureName, false, measureName);\r\n        logTrace(trace);\r\n    };\r\n    return Trace;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createNetworkRequestEntry(entry) {\r\n    var performanceEntry = entry;\r\n    if (!performanceEntry || performanceEntry.responseStart === undefined) {\r\n        return;\r\n    }\r\n    var timeOrigin = Api.getInstance().getTimeOrigin();\r\n    var startTimeUs = Math.floor((performanceEntry.startTime + timeOrigin) * 1000);\r\n    var timeToResponseInitiatedUs = performanceEntry.responseStart\r\n        ? Math.floor((performanceEntry.responseStart - performanceEntry.startTime) * 1000)\r\n        : undefined;\r\n    var timeToResponseCompletedUs = Math.floor((performanceEntry.responseEnd - performanceEntry.startTime) * 1000);\r\n    // Remove the query params from logged network request url.\r\n    var url = performanceEntry.name && performanceEntry.name.split('?')[0];\r\n    var networkRequest = {\r\n        url: url,\r\n        responsePayloadBytes: performanceEntry.transferSize,\r\n        startTimeUs: startTimeUs,\r\n        timeToResponseInitiatedUs: timeToResponseInitiatedUs,\r\n        timeToResponseCompletedUs: timeToResponseCompletedUs\r\n    };\r\n    logNetworkRequest(networkRequest);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FID_WAIT_TIME_MS = 5000;\r\nfunction setupOobResources() {\r\n    // Do not initialize unless iid is available.\r\n    if (!getIid()) {\r\n        return;\r\n    }\r\n    // The load event might not have fired yet, and that means performance navigation timing\r\n    // object has a duration of 0. The setup should run after all current tasks in js queue.\r\n    setTimeout(function () { return setupOobTraces(); }, 0);\r\n    setTimeout(function () { return setupNetworkRequests(); }, 0);\r\n    setTimeout(function () { return setupUserTimingTraces(); }, 0);\r\n}\r\nfunction setupNetworkRequests() {\r\n    var api = Api.getInstance();\r\n    var resources = api.getEntriesByType('resource');\r\n    for (var _i = 0, resources_1 = resources; _i < resources_1.length; _i++) {\r\n        var resource = resources_1[_i];\r\n        createNetworkRequestEntry(resource);\r\n    }\r\n    api.setupObserver('resource', createNetworkRequestEntry);\r\n}\r\nfunction setupOobTraces() {\r\n    var api = Api.getInstance();\r\n    var navigationTimings = api.getEntriesByType('navigation');\r\n    var paintTimings = api.getEntriesByType('paint');\r\n    // If First Input Desly polyfill is added to the page, report the fid value.\r\n    // https://github.com/GoogleChromeLabs/first-input-delay\r\n    if (api.onFirstInputDelay) {\r\n        // If the fid call back is not called for certain time, continue without it.\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        var timeoutId_1 = setTimeout(function () {\r\n            Trace.createOobTrace(navigationTimings, paintTimings);\r\n            timeoutId_1 = undefined;\r\n        }, FID_WAIT_TIME_MS);\r\n        api.onFirstInputDelay(function (fid) {\r\n            if (timeoutId_1) {\r\n                clearTimeout(timeoutId_1);\r\n                Trace.createOobTrace(navigationTimings, paintTimings, fid);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        Trace.createOobTrace(navigationTimings, paintTimings);\r\n    }\r\n}\r\nfunction setupUserTimingTraces() {\r\n    var api = Api.getInstance();\r\n    // Run through the measure performance entries collected up to this point.\r\n    var measures = api.getEntriesByType('measure');\r\n    for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\r\n        var measure = measures_1[_i];\r\n        createUserTimingTrace(measure);\r\n    }\r\n    // Setup an observer to capture the measures from this point on.\r\n    api.setupObserver('measure', createUserTimingTrace);\r\n}\r\nfunction createUserTimingTrace(measure) {\r\n    var measureName = measure.name;\r\n    // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\r\n    if (measureName.substring(0, TRACE_MEASURE_PREFIX.length) ===\r\n        TRACE_MEASURE_PREFIX) {\r\n        return;\r\n    }\r\n    Trace.createUserTimingTrace(measureName);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PerformanceController = /** @class */ (function () {\r\n    function PerformanceController(app) {\r\n        this.app = app;\r\n        if (Api.getInstance().requiredApisAvailable()) {\r\n            validateIndexedDBOpenable()\r\n                .then(function (isAvailable) {\r\n                if (isAvailable) {\r\n                    setupTransportService();\r\n                    getInitializationPromise().then(setupOobResources, setupOobResources);\r\n                }\r\n            })\r\n                .catch(function (error) {\r\n                consoleLogger.info(\"Environment doesn't support IndexedDB: \" + error);\r\n            });\r\n        }\r\n    }\r\n    PerformanceController.prototype.trace = function (name) {\r\n        return new Trace(name);\r\n    };\r\n    Object.defineProperty(PerformanceController.prototype, \"instrumentationEnabled\", {\r\n        get: function () {\r\n            return SettingsService.getInstance().instrumentationEnabled;\r\n        },\r\n        set: function (val) {\r\n            SettingsService.getInstance().instrumentationEnabled = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PerformanceController.prototype, \"dataCollectionEnabled\", {\r\n        get: function () {\r\n            return SettingsService.getInstance().dataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            SettingsService.getInstance().dataCollectionEnabled = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return PerformanceController;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nfunction registerPerformance(instance) {\r\n    var factoryMethod = function (app, installations) {\r\n        if (app.name !== DEFAULT_ENTRY_NAME) {\r\n            throw ERROR_FACTORY.create(\"FB not default\" /* FB_NOT_DEFAULT */);\r\n        }\r\n        if (typeof window === 'undefined') {\r\n            throw ERROR_FACTORY.create(\"no window\" /* NO_WINDOW */);\r\n        }\r\n        setupApi(window);\r\n        SettingsService.getInstance().firebaseAppInstance = app;\r\n        SettingsService.getInstance().installationsService = installations;\r\n        return new PerformanceController(app);\r\n    };\r\n    // Register performance with firebase-app.\r\n    instance.INTERNAL.registerComponent(new Component('performance', function (container) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        // The following call will always succeed because perf has `import '@firebase/installations'`\r\n        var installations = container\r\n            .getProvider('installations')\r\n            .getImmediate();\r\n        return factoryMethod(app, installations);\r\n    }, \"PUBLIC\" /* PUBLIC */));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterPerformance(firebase);\n\nexport { registerPerformance };\n//# sourceMappingURL=index.esm.js.map\n","import firebase from '@firebase/app';\nimport '@firebase/installations';\nimport { __awaiter, __generator, __assign } from 'tslib';\nimport { ErrorFactory, FirebaseError, calculateBackoffMillis } from '@firebase/util';\nimport { LogLevel, Logger } from '@firebase/logger';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements the {@link RemoteConfigClient} abstraction with success response caching.\r\n *\r\n * <p>Comparable to the browser's Cache API for responses, but the Cache API requires a Service\r\n * Worker, which requires HTTPS, which would significantly complicate SDK installation. Also, the\r\n * Cache API doesn't support matching entries by time.\r\n */\r\nvar CachingClient = /** @class */ (function () {\r\n    function CachingClient(client, storage, storageCache, logger) {\r\n        this.client = client;\r\n        this.storage = storage;\r\n        this.storageCache = storageCache;\r\n        this.logger = logger;\r\n    }\r\n    /**\r\n     * Returns true if the age of the cached fetched configs is less than or equal to\r\n     * {@link Settings#minimumFetchIntervalInSeconds}.\r\n     *\r\n     * <p>This is comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the\r\n     * native Fetch API.\r\n     *\r\n     * <p>Visible for testing.\r\n     */\r\n    CachingClient.prototype.isCachedDataFresh = function (cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis) {\r\n        // Cache can only be fresh if it's populated.\r\n        if (!lastSuccessfulFetchTimestampMillis) {\r\n            this.logger.debug('Config fetch cache check. Cache unpopulated.');\r\n            return false;\r\n        }\r\n        // Calculates age of cache entry.\r\n        var cacheAgeMillis = Date.now() - lastSuccessfulFetchTimestampMillis;\r\n        var isCachedDataFresh = cacheAgeMillis <= cacheMaxAgeMillis;\r\n        this.logger.debug('Config fetch cache check.' +\r\n            (\" Cache age millis: \" + cacheAgeMillis + \".\") +\r\n            (\" Cache max age millis (minimumFetchIntervalMillis setting): \" + cacheMaxAgeMillis + \".\") +\r\n            (\" Is cache hit: \" + isCachedDataFresh + \".\"));\r\n        return isCachedDataFresh;\r\n    };\r\n    CachingClient.prototype.fetch = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, lastSuccessfulFetchTimestampMillis, lastSuccessfulFetchResponse, response, storageOperations;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this.storage.getLastSuccessfulFetchTimestampMillis(),\r\n                            this.storage.getLastSuccessfulFetchResponse()\r\n                        ])];\r\n                    case 1:\r\n                        _a = _b.sent(), lastSuccessfulFetchTimestampMillis = _a[0], lastSuccessfulFetchResponse = _a[1];\r\n                        // Exits early on cache hit.\r\n                        if (lastSuccessfulFetchResponse &&\r\n                            this.isCachedDataFresh(request.cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis)) {\r\n                            return [2 /*return*/, lastSuccessfulFetchResponse];\r\n                        }\r\n                        // Deviates from pure decorator by not honoring a passed ETag since we don't have a public API\r\n                        // that allows the caller to pass an ETag.\r\n                        request.eTag =\r\n                            lastSuccessfulFetchResponse && lastSuccessfulFetchResponse.eTag;\r\n                        return [4 /*yield*/, this.client.fetch(request)];\r\n                    case 2:\r\n                        response = _b.sent();\r\n                        storageOperations = [\r\n                            // Uses write-through cache for consistency with synchronous public API.\r\n                            this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())\r\n                        ];\r\n                        if (response.status === 200) {\r\n                            // Caches response only if it has changed, ie non-304 responses.\r\n                            storageOperations.push(this.storage.setLastSuccessfulFetchResponse(response));\r\n                        }\r\n                        return [4 /*yield*/, Promise.all(storageOperations)];\r\n                    case 3:\r\n                        _b.sent();\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return CachingClient;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_DESCRIPTION_MAP = (_a = {},\r\n    _a[\"registration-window\" /* REGISTRATION_WINDOW */] = 'Undefined window object. This SDK only supports usage in a browser environment.',\r\n    _a[\"registration-project-id\" /* REGISTRATION_PROJECT_ID */] = 'Undefined project identifier. Check Firebase app initialization.',\r\n    _a[\"registration-api-key\" /* REGISTRATION_API_KEY */] = 'Undefined API key. Check Firebase app initialization.',\r\n    _a[\"registration-app-id\" /* REGISTRATION_APP_ID */] = 'Undefined app identifier. Check Firebase app initialization.',\r\n    _a[\"storage-open\" /* STORAGE_OPEN */] = 'Error thrown when opening storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"storage-get\" /* STORAGE_GET */] = 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"storage-set\" /* STORAGE_SET */] = 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"storage-delete\" /* STORAGE_DELETE */] = 'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"fetch-client-network\" /* FETCH_NETWORK */] = 'Fetch client failed to connect to a network. Check Internet connection.' +\r\n        ' Original error: {$originalErrorMessage}.',\r\n    _a[\"fetch-timeout\" /* FETCH_TIMEOUT */] = 'The config fetch request timed out. ' +\r\n        ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.',\r\n    _a[\"fetch-throttle\" /* FETCH_THROTTLE */] = 'The config fetch request timed out while in an exponential backoff state.' +\r\n        ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.' +\r\n        ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',\r\n    _a[\"fetch-client-parse\" /* FETCH_PARSE */] = 'Fetch client could not parse response.' +\r\n        ' Original error: {$originalErrorMessage}.',\r\n    _a[\"fetch-status\" /* FETCH_STATUS */] = 'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.',\r\n    _a);\r\nvar ERROR_FACTORY = new ErrorFactory('remoteconfig' /* service */, 'Remote Config' /* service name */, ERROR_DESCRIPTION_MAP);\r\n// Note how this is like typeof/instanceof, but for ErrorCode.\r\nfunction hasErrorCode(e, errorCode) {\r\n    return e instanceof FirebaseError && e.code.indexOf(errorCode) !== -1;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Attempts to get the most accurate browser language setting.\r\n *\r\n * <p>Adapted from getUserLanguage in packages/auth/src/utils.js for TypeScript.\r\n *\r\n * <p>Defers default language specification to server logic for consistency.\r\n *\r\n * @param navigatorLanguage Enables tests to override read-only {@link NavigatorLanguage}.\r\n */\r\nfunction getUserLanguage(navigatorLanguage) {\r\n    if (navigatorLanguage === void 0) { navigatorLanguage = navigator; }\r\n    return (\r\n    // Most reliable, but only supported in Chrome/Firefox.\r\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\r\n        // Supported in most browsers, but returns the language of the browser\r\n        // UI, not the language set in browser settings.\r\n        navigatorLanguage.language\r\n    // Polyfill otherwise.\r\n    );\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements the Client abstraction for the Remote Config REST API.\r\n */\r\nvar RestClient = /** @class */ (function () {\r\n    function RestClient(firebaseInstallations, sdkVersion, namespace, projectId, apiKey, appId) {\r\n        this.firebaseInstallations = firebaseInstallations;\r\n        this.sdkVersion = sdkVersion;\r\n        this.namespace = namespace;\r\n        this.projectId = projectId;\r\n        this.apiKey = apiKey;\r\n        this.appId = appId;\r\n    }\r\n    /**\r\n     * Fetches from the Remote Config REST API.\r\n     *\r\n     * @throws a {@link ErrorCode.FETCH_NETWORK} error if {@link GlobalFetch#fetch} can't\r\n     * connect to the network.\r\n     * @throws a {@link ErrorCode.FETCH_PARSE} error if {@link Response#json} can't parse the\r\n     * fetch response.\r\n     * @throws a {@link ErrorCode.FETCH_STATUS} error if the service returns an HTTP error status.\r\n     */\r\n    RestClient.prototype.fetch = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, installationId, installationToken, urlBase, url, headers, requestBody, options, fetchPromise, timeoutPromise, response, originalError_1, errorCode, status, responseEtag, config, state, responseBody, originalError_2;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this.firebaseInstallations.getId(),\r\n                            this.firebaseInstallations.getToken()\r\n                        ])];\r\n                    case 1:\r\n                        _a = _b.sent(), installationId = _a[0], installationToken = _a[1];\r\n                        urlBase = window.FIREBASE_REMOTE_CONFIG_URL_BASE ||\r\n                            'https://firebaseremoteconfig.googleapis.com';\r\n                        url = urlBase + \"/v1/projects/\" + this.projectId + \"/namespaces/\" + this.namespace + \":fetch?key=\" + this.apiKey;\r\n                        headers = {\r\n                            'Content-Type': 'application/json',\r\n                            'Content-Encoding': 'gzip',\r\n                            // Deviates from pure decorator by not passing max-age header since we don't currently have\r\n                            // service behavior using that header.\r\n                            'If-None-Match': request.eTag || '*'\r\n                        };\r\n                        requestBody = {\r\n                            /* eslint-disable camelcase */\r\n                            sdk_version: this.sdkVersion,\r\n                            app_instance_id: installationId,\r\n                            app_instance_id_token: installationToken,\r\n                            app_id: this.appId,\r\n                            language_code: getUserLanguage()\r\n                            /* eslint-enable camelcase */\r\n                        };\r\n                        options = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: JSON.stringify(requestBody)\r\n                        };\r\n                        fetchPromise = fetch(url, options);\r\n                        timeoutPromise = new Promise(function (_resolve, reject) {\r\n                            // Maps async event listener to Promise API.\r\n                            request.signal.addEventListener(function () {\r\n                                // Emulates https://heycam.github.io/webidl/#aborterror\r\n                                var error = new Error('The operation was aborted.');\r\n                                error.name = 'AbortError';\r\n                                reject(error);\r\n                            });\r\n                        });\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        _b.trys.push([2, 5, , 6]);\r\n                        return [4 /*yield*/, Promise.race([fetchPromise, timeoutPromise])];\r\n                    case 3:\r\n                        _b.sent();\r\n                        return [4 /*yield*/, fetchPromise];\r\n                    case 4:\r\n                        response = _b.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        originalError_1 = _b.sent();\r\n                        errorCode = \"fetch-client-network\" /* FETCH_NETWORK */;\r\n                        if (originalError_1.name === 'AbortError') {\r\n                            errorCode = \"fetch-timeout\" /* FETCH_TIMEOUT */;\r\n                        }\r\n                        throw ERROR_FACTORY.create(errorCode, {\r\n                            originalErrorMessage: originalError_1.message\r\n                        });\r\n                    case 6:\r\n                        status = response.status;\r\n                        responseEtag = response.headers.get('ETag') || undefined;\r\n                        if (!(response.status === 200)) return [3 /*break*/, 11];\r\n                        responseBody = void 0;\r\n                        _b.label = 7;\r\n                    case 7:\r\n                        _b.trys.push([7, 9, , 10]);\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 8:\r\n                        responseBody = _b.sent();\r\n                        return [3 /*break*/, 10];\r\n                    case 9:\r\n                        originalError_2 = _b.sent();\r\n                        throw ERROR_FACTORY.create(\"fetch-client-parse\" /* FETCH_PARSE */, {\r\n                            originalErrorMessage: originalError_2.message\r\n                        });\r\n                    case 10:\r\n                        config = responseBody['entries'];\r\n                        state = responseBody['state'];\r\n                        _b.label = 11;\r\n                    case 11:\r\n                        // Normalizes based on legacy state.\r\n                        if (state === 'INSTANCE_STATE_UNSPECIFIED') {\r\n                            status = 500;\r\n                        }\r\n                        else if (state === 'NO_CHANGE') {\r\n                            status = 304;\r\n                        }\r\n                        else if (state === 'NO_TEMPLATE' || state === 'EMPTY_CONFIG') {\r\n                            // These cases can be fixed remotely, so normalize to safe value.\r\n                            config = {};\r\n                        }\r\n                        // Normalize to exception-based control flow for non-success cases.\r\n                        // Encapsulates HTTP specifics in this class as much as possible. Status is still the best for\r\n                        // differentiating success states (200 from 304; the state body param is undefined in a\r\n                        // standard 304).\r\n                        if (status !== 304 && status !== 200) {\r\n                            throw ERROR_FACTORY.create(\"fetch-status\" /* FETCH_STATUS */, {\r\n                                httpStatus: status\r\n                            });\r\n                        }\r\n                        return [2 /*return*/, { status: status, eTag: responseEtag, config: config }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return RestClient;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Shims a minimal AbortSignal.\r\n *\r\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\r\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\r\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\r\n * swapped out if/when we do.\r\n */\r\nvar RemoteConfigAbortSignal = /** @class */ (function () {\r\n    function RemoteConfigAbortSignal() {\r\n        this.listeners = [];\r\n    }\r\n    RemoteConfigAbortSignal.prototype.addEventListener = function (listener) {\r\n        this.listeners.push(listener);\r\n    };\r\n    RemoteConfigAbortSignal.prototype.abort = function () {\r\n        this.listeners.forEach(function (listener) { return listener(); });\r\n    };\r\n    return RemoteConfigAbortSignal;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_VALUE_FOR_BOOLEAN = false;\r\nvar DEFAULT_VALUE_FOR_STRING = '';\r\nvar DEFAULT_VALUE_FOR_NUMBER = 0;\r\nvar BOOLEAN_TRUTHY_VALUES = ['1', 'true', 't', 'yes', 'y', 'on'];\r\nvar Value = /** @class */ (function () {\r\n    function Value(_source, _value) {\r\n        if (_value === void 0) { _value = DEFAULT_VALUE_FOR_STRING; }\r\n        this._source = _source;\r\n        this._value = _value;\r\n    }\r\n    Value.prototype.asString = function () {\r\n        return this._value;\r\n    };\r\n    Value.prototype.asBoolean = function () {\r\n        if (this._source === 'static') {\r\n            return DEFAULT_VALUE_FOR_BOOLEAN;\r\n        }\r\n        return BOOLEAN_TRUTHY_VALUES.indexOf(this._value.toLowerCase()) >= 0;\r\n    };\r\n    Value.prototype.asNumber = function () {\r\n        if (this._source === 'static') {\r\n            return DEFAULT_VALUE_FOR_NUMBER;\r\n        }\r\n        var num = Number(this._value);\r\n        if (isNaN(num)) {\r\n            num = DEFAULT_VALUE_FOR_NUMBER;\r\n        }\r\n        return num;\r\n    };\r\n    Value.prototype.getSource = function () {\r\n        return this._source;\r\n    };\r\n    return Value;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_FETCH_TIMEOUT_MILLIS = 60 * 1000; // One minute\r\nvar DEFAULT_CACHE_MAX_AGE_MILLIS = 12 * 60 * 60 * 1000; // Twelve hours.\r\n/**\r\n * Encapsulates business logic mapping network and storage dependencies to the public SDK API.\r\n *\r\n * See {@link https://github.com/FirebasePrivate/firebase-js-sdk/blob/master/packages/firebase/index.d.ts|interface documentation} for method descriptions.\r\n */\r\nvar RemoteConfig = /** @class */ (function () {\r\n    function RemoteConfig(\r\n    // Required by FirebaseServiceFactory interface.\r\n    app, \r\n    // JS doesn't support private yet\r\n    // (https://github.com/tc39/proposal-class-fields#private-fields), so we hint using an\r\n    // underscore prefix.\r\n    _client, _storageCache, _storage, _logger) {\r\n        this.app = app;\r\n        this._client = _client;\r\n        this._storageCache = _storageCache;\r\n        this._storage = _storage;\r\n        this._logger = _logger;\r\n        // Tracks completion of initialization promise.\r\n        this._isInitializationComplete = false;\r\n        this.settings = {\r\n            fetchTimeoutMillis: DEFAULT_FETCH_TIMEOUT_MILLIS,\r\n            minimumFetchIntervalMillis: DEFAULT_CACHE_MAX_AGE_MILLIS\r\n        };\r\n        this.defaultConfig = {};\r\n    }\r\n    // Based on packages/firestore/src/util/log.ts but not static because we need per-instance levels\r\n    // to differentiate 2p and 3p use-cases.\r\n    RemoteConfig.prototype.setLogLevel = function (logLevel) {\r\n        switch (logLevel) {\r\n            case 'debug':\r\n                this._logger.logLevel = LogLevel.DEBUG;\r\n                break;\r\n            case 'silent':\r\n                this._logger.logLevel = LogLevel.SILENT;\r\n                break;\r\n            default:\r\n                this._logger.logLevel = LogLevel.ERROR;\r\n        }\r\n    };\r\n    Object.defineProperty(RemoteConfig.prototype, \"fetchTimeMillis\", {\r\n        get: function () {\r\n            return this._storageCache.getLastSuccessfulFetchTimestampMillis() || -1;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RemoteConfig.prototype, \"lastFetchStatus\", {\r\n        get: function () {\r\n            return this._storageCache.getLastFetchStatus() || 'no-fetch-yet';\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    RemoteConfig.prototype.activate = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, lastSuccessfulFetchResponse, activeConfigEtag;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this._storage.getLastSuccessfulFetchResponse(),\r\n                            this._storage.getActiveConfigEtag()\r\n                        ])];\r\n                    case 1:\r\n                        _a = _b.sent(), lastSuccessfulFetchResponse = _a[0], activeConfigEtag = _a[1];\r\n                        if (!lastSuccessfulFetchResponse ||\r\n                            !lastSuccessfulFetchResponse.config ||\r\n                            !lastSuccessfulFetchResponse.eTag ||\r\n                            lastSuccessfulFetchResponse.eTag === activeConfigEtag) {\r\n                            // Either there is no successful fetched config, or is the same as current active\r\n                            // config.\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                        return [4 /*yield*/, Promise.all([\r\n                                this._storageCache.setActiveConfig(lastSuccessfulFetchResponse.config),\r\n                                this._storage.setActiveConfigEtag(lastSuccessfulFetchResponse.eTag)\r\n                            ])];\r\n                    case 2:\r\n                        _b.sent();\r\n                        return [2 /*return*/, true];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RemoteConfig.prototype.ensureInitialized = function () {\r\n        var _this = this;\r\n        if (!this._initializePromise) {\r\n            this._initializePromise = this._storageCache\r\n                .loadFromStorage()\r\n                .then(function () {\r\n                _this._isInitializationComplete = true;\r\n            });\r\n        }\r\n        return this._initializePromise;\r\n    };\r\n    /**\r\n     * @throws a {@link ErrorCode.FETCH_CLIENT_TIMEOUT} if the request takes longer than\r\n     * {@link Settings.fetchTimeoutInSeconds} or\r\n     * {@link DEFAULT_FETCH_TIMEOUT_SECONDS}.\r\n     */\r\n    RemoteConfig.prototype.fetch = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var abortSignal, e_1, lastFetchStatus;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        abortSignal = new RemoteConfigAbortSignal();\r\n                        setTimeout(function () { return __awaiter(_this, void 0, void 0, function () {\r\n                            return __generator(this, function (_a) {\r\n                                // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\r\n                                abortSignal.abort();\r\n                                return [2 /*return*/];\r\n                            });\r\n                        }); }, this.settings.fetchTimeoutMillis);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 6]);\r\n                        return [4 /*yield*/, this._client.fetch({\r\n                                cacheMaxAgeMillis: this.settings.minimumFetchIntervalMillis,\r\n                                signal: abortSignal\r\n                            })];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this._storageCache.setLastFetchStatus('success')];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        lastFetchStatus = hasErrorCode(e_1, \"fetch-throttle\" /* FETCH_THROTTLE */)\r\n                            ? 'throttle'\r\n                            : 'failure';\r\n                        return [4 /*yield*/, this._storageCache.setLastFetchStatus(lastFetchStatus)];\r\n                    case 5:\r\n                        _a.sent();\r\n                        throw e_1;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RemoteConfig.prototype.fetchAndActivate = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.fetch()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, this.activate()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RemoteConfig.prototype.getAll = function () {\r\n        var _this = this;\r\n        return getAllKeys(this._storageCache.getActiveConfig(), this.defaultConfig).reduce(function (allConfigs, key) {\r\n            allConfigs[key] = _this.getValue(key);\r\n            return allConfigs;\r\n        }, {});\r\n    };\r\n    RemoteConfig.prototype.getBoolean = function (key) {\r\n        return this.getValue(key).asBoolean();\r\n    };\r\n    RemoteConfig.prototype.getNumber = function (key) {\r\n        return this.getValue(key).asNumber();\r\n    };\r\n    RemoteConfig.prototype.getString = function (key) {\r\n        return this.getValue(key).asString();\r\n    };\r\n    RemoteConfig.prototype.getValue = function (key) {\r\n        if (!this._isInitializationComplete) {\r\n            this._logger.debug(\"A value was requested for key \\\"\" + key + \"\\\" before SDK initialization completed.\" +\r\n                ' Await on ensureInitialized if the intent was to get a previously activated value.');\r\n        }\r\n        var activeConfig = this._storageCache.getActiveConfig();\r\n        if (activeConfig && activeConfig[key] !== undefined) {\r\n            return new Value('remote', activeConfig[key]);\r\n        }\r\n        else if (this.defaultConfig && this.defaultConfig[key] !== undefined) {\r\n            return new Value('default', String(this.defaultConfig[key]));\r\n        }\r\n        this._logger.debug(\"Returning static value for key \\\"\" + key + \"\\\".\" +\r\n            ' Define a default or remote value if this is unintentional.');\r\n        return new Value('static');\r\n    };\r\n    return RemoteConfig;\r\n}());\r\n/**\r\n * Dedupes and returns an array of all the keys of the received objects.\r\n */\r\nfunction getAllKeys(obj1, obj2) {\r\n    if (obj1 === void 0) { obj1 = {}; }\r\n    if (obj2 === void 0) { obj2 = {}; }\r\n    return Object.keys(__assign(__assign({}, obj1), obj2));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Converts an error event associated with a {@link IDBRequest} to a {@link FirebaseError}.\r\n */\r\nfunction toFirebaseError(event, errorCode) {\r\n    var originalError = event.target.error || undefined;\r\n    return ERROR_FACTORY.create(errorCode, {\r\n        originalErrorMessage: originalError && originalError.message\r\n    });\r\n}\r\n/**\r\n * A general-purpose store keyed by app + namespace + {@link\r\n * ProjectNamespaceKeyFieldValue}.\r\n *\r\n * <p>The Remote Config SDK can be used with multiple app installations, and each app can interact\r\n * with multiple namespaces, so this store uses app (ID + name) and namespace as common parent keys\r\n * for a set of key-value pairs. See {@link Storage#createCompositeKey}.\r\n *\r\n * <p>Visible for testing.\r\n */\r\nvar APP_NAMESPACE_STORE = 'app_namespace_store';\r\nvar DB_NAME = 'firebase_remote_config';\r\nvar DB_VERSION = 1;\r\n// Visible for testing.\r\nfunction openDatabase() {\r\n    return new Promise(function (resolve, reject) {\r\n        var request = indexedDB.open(DB_NAME, DB_VERSION);\r\n        request.onerror = function (event) {\r\n            reject(toFirebaseError(event, \"storage-open\" /* STORAGE_OPEN */));\r\n        };\r\n        request.onsuccess = function (event) {\r\n            resolve(event.target.result);\r\n        };\r\n        request.onupgradeneeded = function (event) {\r\n            var db = event.target.result;\r\n            // We don't use 'break' in this switch statement, the fall-through\r\n            // behavior is what we want, because if there are multiple versions between\r\n            // the old version and the current version, we want ALL the migrations\r\n            // that correspond to those versions to run, not only the last one.\r\n            // eslint-disable-next-line default-case\r\n            switch (event.oldVersion) {\r\n                case 0:\r\n                    db.createObjectStore(APP_NAMESPACE_STORE, {\r\n                        keyPath: 'compositeKey'\r\n                    });\r\n            }\r\n        };\r\n    });\r\n}\r\n/**\r\n * Abstracts data persistence.\r\n */\r\nvar Storage = /** @class */ (function () {\r\n    /**\r\n     * @param appId enables storage segmentation by app (ID + name).\r\n     * @param appName enables storage segmentation by app (ID + name).\r\n     * @param namespace enables storage segmentation by namespace.\r\n     */\r\n    function Storage(appId, appName, namespace, openDbPromise) {\r\n        if (openDbPromise === void 0) { openDbPromise = openDatabase(); }\r\n        this.appId = appId;\r\n        this.appName = appName;\r\n        this.namespace = namespace;\r\n        this.openDbPromise = openDbPromise;\r\n    }\r\n    Storage.prototype.getLastFetchStatus = function () {\r\n        return this.get('last_fetch_status');\r\n    };\r\n    Storage.prototype.setLastFetchStatus = function (status) {\r\n        return this.set('last_fetch_status', status);\r\n    };\r\n    // This is comparable to a cache entry timestamp. If we need to expire other data, we could\r\n    // consider adding timestamp to all storage records and an optional max age arg to getters.\r\n    Storage.prototype.getLastSuccessfulFetchTimestampMillis = function () {\r\n        return this.get('last_successful_fetch_timestamp_millis');\r\n    };\r\n    Storage.prototype.setLastSuccessfulFetchTimestampMillis = function (timestamp) {\r\n        return this.set('last_successful_fetch_timestamp_millis', timestamp);\r\n    };\r\n    Storage.prototype.getLastSuccessfulFetchResponse = function () {\r\n        return this.get('last_successful_fetch_response');\r\n    };\r\n    Storage.prototype.setLastSuccessfulFetchResponse = function (response) {\r\n        return this.set('last_successful_fetch_response', response);\r\n    };\r\n    Storage.prototype.getActiveConfig = function () {\r\n        return this.get('active_config');\r\n    };\r\n    Storage.prototype.setActiveConfig = function (config) {\r\n        return this.set('active_config', config);\r\n    };\r\n    Storage.prototype.getActiveConfigEtag = function () {\r\n        return this.get('active_config_etag');\r\n    };\r\n    Storage.prototype.setActiveConfigEtag = function (etag) {\r\n        return this.set('active_config_etag', etag);\r\n    };\r\n    Storage.prototype.getThrottleMetadata = function () {\r\n        return this.get('throttle_metadata');\r\n    };\r\n    Storage.prototype.setThrottleMetadata = function (metadata) {\r\n        return this.set('throttle_metadata', metadata);\r\n    };\r\n    Storage.prototype.deleteThrottleMetadata = function () {\r\n        return this.delete('throttle_metadata');\r\n    };\r\n    Storage.prototype.get = function (key) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var db;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.openDbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                var transaction = db.transaction([APP_NAMESPACE_STORE], 'readonly');\r\n                                var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\r\n                                var compositeKey = _this.createCompositeKey(key);\r\n                                try {\r\n                                    var request = objectStore.get(compositeKey);\r\n                                    request.onerror = function (event) {\r\n                                        reject(toFirebaseError(event, \"storage-get\" /* STORAGE_GET */));\r\n                                    };\r\n                                    request.onsuccess = function (event) {\r\n                                        var result = event.target.result;\r\n                                        if (result) {\r\n                                            resolve(result.value);\r\n                                        }\r\n                                        else {\r\n                                            resolve(undefined);\r\n                                        }\r\n                                    };\r\n                                }\r\n                                catch (e) {\r\n                                    reject(ERROR_FACTORY.create(\"storage-get\" /* STORAGE_GET */, {\r\n                                        originalErrorMessage: e && e.message\r\n                                    }));\r\n                                }\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Storage.prototype.set = function (key, value) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var db;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.openDbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\r\n                                var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\r\n                                var compositeKey = _this.createCompositeKey(key);\r\n                                try {\r\n                                    var request = objectStore.put({\r\n                                        compositeKey: compositeKey,\r\n                                        value: value\r\n                                    });\r\n                                    request.onerror = function (event) {\r\n                                        reject(toFirebaseError(event, \"storage-set\" /* STORAGE_SET */));\r\n                                    };\r\n                                    request.onsuccess = function () {\r\n                                        resolve();\r\n                                    };\r\n                                }\r\n                                catch (e) {\r\n                                    reject(ERROR_FACTORY.create(\"storage-set\" /* STORAGE_SET */, {\r\n                                        originalErrorMessage: e && e.message\r\n                                    }));\r\n                                }\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Storage.prototype.delete = function (key) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var db;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.openDbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\r\n                                var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\r\n                                var compositeKey = _this.createCompositeKey(key);\r\n                                try {\r\n                                    var request = objectStore.delete(compositeKey);\r\n                                    request.onerror = function (event) {\r\n                                        reject(toFirebaseError(event, \"storage-delete\" /* STORAGE_DELETE */));\r\n                                    };\r\n                                    request.onsuccess = function () {\r\n                                        resolve();\r\n                                    };\r\n                                }\r\n                                catch (e) {\r\n                                    reject(ERROR_FACTORY.create(\"storage-delete\" /* STORAGE_DELETE */, {\r\n                                        originalErrorMessage: e && e.message\r\n                                    }));\r\n                                }\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // Facilitates composite key functionality (which is unsupported in IE).\r\n    Storage.prototype.createCompositeKey = function (key) {\r\n        return [this.appId, this.appName, this.namespace, key].join();\r\n    };\r\n    return Storage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A memory cache layer over storage to support the SDK's synchronous read requirements.\r\n */\r\nvar StorageCache = /** @class */ (function () {\r\n    function StorageCache(storage) {\r\n        this.storage = storage;\r\n    }\r\n    /**\r\n     * Memory-only getters\r\n     */\r\n    StorageCache.prototype.getLastFetchStatus = function () {\r\n        return this.lastFetchStatus;\r\n    };\r\n    StorageCache.prototype.getLastSuccessfulFetchTimestampMillis = function () {\r\n        return this.lastSuccessfulFetchTimestampMillis;\r\n    };\r\n    StorageCache.prototype.getActiveConfig = function () {\r\n        return this.activeConfig;\r\n    };\r\n    /**\r\n     * Read-ahead getter\r\n     */\r\n    StorageCache.prototype.loadFromStorage = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var lastFetchStatusPromise, lastSuccessfulFetchTimestampMillisPromise, activeConfigPromise, lastFetchStatus, lastSuccessfulFetchTimestampMillis, activeConfig;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        lastFetchStatusPromise = this.storage.getLastFetchStatus();\r\n                        lastSuccessfulFetchTimestampMillisPromise = this.storage.getLastSuccessfulFetchTimestampMillis();\r\n                        activeConfigPromise = this.storage.getActiveConfig();\r\n                        return [4 /*yield*/, lastFetchStatusPromise];\r\n                    case 1:\r\n                        lastFetchStatus = _a.sent();\r\n                        if (lastFetchStatus) {\r\n                            this.lastFetchStatus = lastFetchStatus;\r\n                        }\r\n                        return [4 /*yield*/, lastSuccessfulFetchTimestampMillisPromise];\r\n                    case 2:\r\n                        lastSuccessfulFetchTimestampMillis = _a.sent();\r\n                        if (lastSuccessfulFetchTimestampMillis) {\r\n                            this.lastSuccessfulFetchTimestampMillis = lastSuccessfulFetchTimestampMillis;\r\n                        }\r\n                        return [4 /*yield*/, activeConfigPromise];\r\n                    case 3:\r\n                        activeConfig = _a.sent();\r\n                        if (activeConfig) {\r\n                            this.activeConfig = activeConfig;\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Write-through setters\r\n     */\r\n    StorageCache.prototype.setLastFetchStatus = function (status) {\r\n        this.lastFetchStatus = status;\r\n        return this.storage.setLastFetchStatus(status);\r\n    };\r\n    StorageCache.prototype.setLastSuccessfulFetchTimestampMillis = function (timestampMillis) {\r\n        this.lastSuccessfulFetchTimestampMillis = timestampMillis;\r\n        return this.storage.setLastSuccessfulFetchTimestampMillis(timestampMillis);\r\n    };\r\n    StorageCache.prototype.setActiveConfig = function (activeConfig) {\r\n        this.activeConfig = activeConfig;\r\n        return this.storage.setActiveConfig(activeConfig);\r\n    };\r\n    return StorageCache;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Supports waiting on a backoff by:\r\n *\r\n * <ul>\r\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\r\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\r\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\r\n *       request appear the same.</li>\r\n * </ul>\r\n *\r\n * <p>Visible for testing.\r\n */\r\nfunction setAbortableTimeout(signal, throttleEndTimeMillis) {\r\n    return new Promise(function (resolve, reject) {\r\n        // Derives backoff from given end time, normalizing negative numbers to zero.\r\n        var backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\r\n        var timeout = setTimeout(resolve, backoffMillis);\r\n        // Adds listener, rather than sets onabort, because signal is a shared object.\r\n        signal.addEventListener(function () {\r\n            clearTimeout(timeout);\r\n            // If the request completes before this timeout, the rejection has no effect.\r\n            reject(ERROR_FACTORY.create(\"fetch-throttle\" /* FETCH_THROTTLE */, {\r\n                throttleEndTimeMillis: throttleEndTimeMillis\r\n            }));\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\r\n */\r\nfunction isRetriableError(e) {\r\n    if (!(e instanceof FirebaseError) || !e.customData) {\r\n        return false;\r\n    }\r\n    // Uses string index defined by ErrorData, which FirebaseError implements.\r\n    var httpStatus = Number(e.customData['httpStatus']);\r\n    return (httpStatus === 429 ||\r\n        httpStatus === 500 ||\r\n        httpStatus === 503 ||\r\n        httpStatus === 504);\r\n}\r\n/**\r\n * Decorates a Client with retry logic.\r\n *\r\n * <p>Comparable to CachingClient, but uses backoff logic instead of cache max age and doesn't cache\r\n * responses (because the SDK has no use for error responses).\r\n */\r\nvar RetryingClient = /** @class */ (function () {\r\n    function RetryingClient(client, storage) {\r\n        this.client = client;\r\n        this.storage = storage;\r\n    }\r\n    RetryingClient.prototype.fetch = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var throttleMetadata;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.storage.getThrottleMetadata()];\r\n                    case 1:\r\n                        throttleMetadata = (_a.sent()) || {\r\n                            backoffCount: 0,\r\n                            throttleEndTimeMillis: Date.now()\r\n                        };\r\n                        return [2 /*return*/, this.attemptFetch(request, throttleMetadata)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * A recursive helper for attempting a fetch request repeatedly.\r\n     *\r\n     * @throws any non-retriable errors.\r\n     */\r\n    RetryingClient.prototype.attemptFetch = function (request, _a) {\r\n        var throttleEndTimeMillis = _a.throttleEndTimeMillis, backoffCount = _a.backoffCount;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response, e_1, throttleMetadata;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: \r\n                    // Starts with a (potentially zero) timeout to support resumption from stored state.\r\n                    // Ensures the throttle end time is honored if the last attempt timed out.\r\n                    // Note the SDK will never make a request if the fetch timeout expires at this point.\r\n                    return [4 /*yield*/, setAbortableTimeout(request.signal, throttleEndTimeMillis)];\r\n                    case 1:\r\n                        // Starts with a (potentially zero) timeout to support resumption from stored state.\r\n                        // Ensures the throttle end time is honored if the last attempt timed out.\r\n                        // Note the SDK will never make a request if the fetch timeout expires at this point.\r\n                        _b.sent();\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        _b.trys.push([2, 5, , 7]);\r\n                        return [4 /*yield*/, this.client.fetch(request)];\r\n                    case 3:\r\n                        response = _b.sent();\r\n                        // Note the SDK only clears throttle state if response is success or non-retriable.\r\n                        return [4 /*yield*/, this.storage.deleteThrottleMetadata()];\r\n                    case 4:\r\n                        // Note the SDK only clears throttle state if response is success or non-retriable.\r\n                        _b.sent();\r\n                        return [2 /*return*/, response];\r\n                    case 5:\r\n                        e_1 = _b.sent();\r\n                        if (!isRetriableError(e_1)) {\r\n                            throw e_1;\r\n                        }\r\n                        throttleMetadata = {\r\n                            throttleEndTimeMillis: Date.now() + calculateBackoffMillis(backoffCount),\r\n                            backoffCount: backoffCount + 1\r\n                        };\r\n                        // Persists state.\r\n                        return [4 /*yield*/, this.storage.setThrottleMetadata(throttleMetadata)];\r\n                    case 6:\r\n                        // Persists state.\r\n                        _b.sent();\r\n                        return [2 /*return*/, this.attemptFetch(request, throttleMetadata)];\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return RetryingClient;\r\n}());\n\nvar name = \"@firebase/remote-config\";\nvar version = \"0.1.30\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerRemoteConfig(firebaseInstance) {\r\n    firebaseInstance.INTERNAL.registerComponent(new Component('remoteConfig', remoteConfigFactory, \"PUBLIC\" /* PUBLIC */).setMultipleInstances(true));\r\n    firebaseInstance.registerVersion(name, version);\r\n    function remoteConfigFactory(container, namespace) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        // The following call will always succeed because rc has `import '@firebase/installations'`\r\n        var installations = container.getProvider('installations').getImmediate();\r\n        // Guards against the SDK being used in non-browser environments.\r\n        if (typeof window === 'undefined') {\r\n            throw ERROR_FACTORY.create(\"registration-window\" /* REGISTRATION_WINDOW */);\r\n        }\r\n        // Normalizes optional inputs.\r\n        var _a = app.options, projectId = _a.projectId, apiKey = _a.apiKey, appId = _a.appId;\r\n        if (!projectId) {\r\n            throw ERROR_FACTORY.create(\"registration-project-id\" /* REGISTRATION_PROJECT_ID */);\r\n        }\r\n        if (!apiKey) {\r\n            throw ERROR_FACTORY.create(\"registration-api-key\" /* REGISTRATION_API_KEY */);\r\n        }\r\n        if (!appId) {\r\n            throw ERROR_FACTORY.create(\"registration-app-id\" /* REGISTRATION_APP_ID */);\r\n        }\r\n        namespace = namespace || 'firebase';\r\n        var storage = new Storage(appId, app.name, namespace);\r\n        var storageCache = new StorageCache(storage);\r\n        var logger = new Logger(name);\r\n        // Sets ERROR as the default log level.\r\n        // See RemoteConfig#setLogLevel for corresponding normalization to ERROR log level.\r\n        logger.logLevel = LogLevel.ERROR;\r\n        var restClient = new RestClient(installations, \r\n        // Uses the JS SDK version, by which the RC package version can be deduced, if necessary.\r\n        firebaseInstance.SDK_VERSION, namespace, projectId, apiKey, appId);\r\n        var retryingClient = new RetryingClient(restClient, storage);\r\n        var cachingClient = new CachingClient(retryingClient, storage, storageCache, logger);\r\n        var remoteConfigInstance = new RemoteConfig(app, cachingClient, storageCache, storage, logger);\r\n        // Starts warming cache.\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        remoteConfigInstance.ensureInitialized();\r\n        return remoteConfigInstance;\r\n    }\r\n}\r\nregisterRemoteConfig(firebase);\n\nexport { registerRemoteConfig };\n//# sourceMappingURL=index.esm.js.map\n","import firebase from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { __awaiter, __generator, __spread, __values, __assign } from 'tslib';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { openDb } from 'idb';\n\nvar name = \"@firebase/installations\";\nvar version = \"0.4.19\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PENDING_TIMEOUT_MS = 10000;\r\nvar PACKAGE_VERSION = \"w:\" + version;\r\nvar INTERNAL_AUTH_VERSION = 'FIS_v2';\r\nvar INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';\r\nvar TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\r\nvar SERVICE = 'installations';\r\nvar SERVICE_NAME = 'Installations';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_DESCRIPTION_MAP = (_a = {},\r\n    _a[\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */] = 'Missing App configuration value: \"{$valueName}\"',\r\n    _a[\"not-registered\" /* NOT_REGISTERED */] = 'Firebase Installation is not registered.',\r\n    _a[\"installation-not-found\" /* INSTALLATION_NOT_FOUND */] = 'Firebase Installation not found.',\r\n    _a[\"request-failed\" /* REQUEST_FAILED */] = '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\r\n    _a[\"app-offline\" /* APP_OFFLINE */] = 'Could not process request. Application offline.',\r\n    _a[\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */] = \"Can't delete installation while there is a pending registration request.\",\r\n    _a);\r\nvar ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\r\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\r\nfunction isServerError(error) {\r\n    return (error instanceof FirebaseError &&\r\n        error.code.includes(\"request-failed\" /* REQUEST_FAILED */));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getInstallationsEndpoint(_a) {\r\n    var projectId = _a.projectId;\r\n    return INSTALLATIONS_API_URL + \"/projects/\" + projectId + \"/installations\";\r\n}\r\nfunction extractAuthTokenInfoFromResponse(response) {\r\n    return {\r\n        token: response.token,\r\n        requestStatus: 2 /* COMPLETED */,\r\n        expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\r\n        creationTime: Date.now()\r\n    };\r\n}\r\nfunction getErrorFromResponse(requestName, response) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var responseJson, errorData;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, response.json()];\r\n                case 1:\r\n                    responseJson = _a.sent();\r\n                    errorData = responseJson.error;\r\n                    return [2 /*return*/, ERROR_FACTORY.create(\"request-failed\" /* REQUEST_FAILED */, {\r\n                            requestName: requestName,\r\n                            serverCode: errorData.code,\r\n                            serverMessage: errorData.message,\r\n                            serverStatus: errorData.status\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getHeaders(_a) {\r\n    var apiKey = _a.apiKey;\r\n    return new Headers({\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'x-goog-api-key': apiKey\r\n    });\r\n}\r\nfunction getHeadersWithAuth(appConfig, _a) {\r\n    var refreshToken = _a.refreshToken;\r\n    var headers = getHeaders(appConfig);\r\n    headers.append('Authorization', getAuthorizationHeader(refreshToken));\r\n    return headers;\r\n}\r\n/**\r\n * Calls the passed in fetch wrapper and returns the response.\r\n * If the returned response has a status of 5xx, re-runs the function once and\r\n * returns the response.\r\n */\r\nfunction retryIfServerError(fn) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var result;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, fn()];\r\n                case 1:\r\n                    result = _a.sent();\r\n                    if (result.status >= 500 && result.status < 600) {\r\n                        // Internal Server Error. Retry request.\r\n                        return [2 /*return*/, fn()];\r\n                    }\r\n                    return [2 /*return*/, result];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn) {\r\n    // This works because the server will never respond with fractions of a second.\r\n    return Number(responseExpiresIn.replace('s', '000'));\r\n}\r\nfunction getAuthorizationHeader(refreshToken) {\r\n    return INTERNAL_AUTH_VERSION + \" \" + refreshToken;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createInstallationRequest(appConfig, _a) {\r\n    var fid = _a.fid;\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var endpoint, headers, body, request, response, responseValue, registeredInstallationEntry;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    endpoint = getInstallationsEndpoint(appConfig);\r\n                    headers = getHeaders(appConfig);\r\n                    body = {\r\n                        fid: fid,\r\n                        authVersion: INTERNAL_AUTH_VERSION,\r\n                        appId: appConfig.appId,\r\n                        sdkVersion: PACKAGE_VERSION\r\n                    };\r\n                    request = {\r\n                        method: 'POST',\r\n                        headers: headers,\r\n                        body: JSON.stringify(body)\r\n                    };\r\n                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];\r\n                case 1:\r\n                    response = _b.sent();\r\n                    if (!response.ok) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, response.json()];\r\n                case 2:\r\n                    responseValue = _b.sent();\r\n                    registeredInstallationEntry = {\r\n                        fid: responseValue.fid || fid,\r\n                        registrationStatus: 2 /* COMPLETED */,\r\n                        refreshToken: responseValue.refreshToken,\r\n                        authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\r\n                    };\r\n                    return [2 /*return*/, registeredInstallationEntry];\r\n                case 3: return [4 /*yield*/, getErrorFromResponse('Create Installation', response)];\r\n                case 4: throw _b.sent();\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a promise that resolves after given time passes. */\r\nfunction sleep(ms) {\r\n    return new Promise(function (resolve) {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction bufferToBase64UrlSafe(array) {\r\n    var b64 = btoa(String.fromCharCode.apply(String, __spread(array)));\r\n    return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\r\nvar INVALID_FID = '';\r\n/**\r\n * Generates a new FID using random values from Web Crypto API.\r\n * Returns an empty string if FID generation fails for any reason.\r\n */\r\nfunction generateFid() {\r\n    try {\r\n        // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\r\n        // bytes. our implementation generates a 17 byte array instead.\r\n        var fidByteArray = new Uint8Array(17);\r\n        var crypto_1 = self.crypto || self.msCrypto;\r\n        crypto_1.getRandomValues(fidByteArray);\r\n        // Replace the first 4 random bits with the constant FID header of 0b0111.\r\n        fidByteArray[0] = 112 + (fidByteArray[0] % 16);\r\n        var fid = encode(fidByteArray);\r\n        return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\r\n    }\r\n    catch (_a) {\r\n        // FID generation errored\r\n        return INVALID_FID;\r\n    }\r\n}\r\n/** Converts a FID Uint8Array to a base64 string representation. */\r\nfunction encode(fidByteArray) {\r\n    var b64String = bufferToBase64UrlSafe(fidByteArray);\r\n    // Remove the 23rd character that was added because of the extra 4 bits at the\r\n    // end of our 17 byte array, and the '=' padding.\r\n    return b64String.substr(0, 22);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a string key that can be used to identify the app. */\r\nfunction getKey(appConfig) {\r\n    return appConfig.appName + \"!\" + appConfig.appId;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar fidChangeCallbacks = new Map();\r\n/**\r\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\r\n * change to other tabs.\r\n */\r\nfunction fidChanged(appConfig, fid) {\r\n    var key = getKey(appConfig);\r\n    callFidChangeCallbacks(key, fid);\r\n    broadcastFidChange(key, fid);\r\n}\r\nfunction addCallback(appConfig, callback) {\r\n    // Open the broadcast channel if it's not already open,\r\n    // to be able to listen to change events from other tabs.\r\n    getBroadcastChannel();\r\n    var key = getKey(appConfig);\r\n    var callbackSet = fidChangeCallbacks.get(key);\r\n    if (!callbackSet) {\r\n        callbackSet = new Set();\r\n        fidChangeCallbacks.set(key, callbackSet);\r\n    }\r\n    callbackSet.add(callback);\r\n}\r\nfunction removeCallback(appConfig, callback) {\r\n    var key = getKey(appConfig);\r\n    var callbackSet = fidChangeCallbacks.get(key);\r\n    if (!callbackSet) {\r\n        return;\r\n    }\r\n    callbackSet.delete(callback);\r\n    if (callbackSet.size === 0) {\r\n        fidChangeCallbacks.delete(key);\r\n    }\r\n    // Close broadcast channel if there are no more callbacks.\r\n    closeBroadcastChannel();\r\n}\r\nfunction callFidChangeCallbacks(key, fid) {\r\n    var e_1, _a;\r\n    var callbacks = fidChangeCallbacks.get(key);\r\n    if (!callbacks) {\r\n        return;\r\n    }\r\n    try {\r\n        for (var callbacks_1 = __values(callbacks), callbacks_1_1 = callbacks_1.next(); !callbacks_1_1.done; callbacks_1_1 = callbacks_1.next()) {\r\n            var callback = callbacks_1_1.value;\r\n            callback(fid);\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (callbacks_1_1 && !callbacks_1_1.done && (_a = callbacks_1.return)) _a.call(callbacks_1);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n}\r\nfunction broadcastFidChange(key, fid) {\r\n    var channel = getBroadcastChannel();\r\n    if (channel) {\r\n        channel.postMessage({ key: key, fid: fid });\r\n    }\r\n    closeBroadcastChannel();\r\n}\r\nvar broadcastChannel = null;\r\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\r\nfunction getBroadcastChannel() {\r\n    if (!broadcastChannel && 'BroadcastChannel' in self) {\r\n        broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\r\n        broadcastChannel.onmessage = function (e) {\r\n            callFidChangeCallbacks(e.data.key, e.data.fid);\r\n        };\r\n    }\r\n    return broadcastChannel;\r\n}\r\nfunction closeBroadcastChannel() {\r\n    if (fidChangeCallbacks.size === 0 && broadcastChannel) {\r\n        broadcastChannel.close();\r\n        broadcastChannel = null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DATABASE_NAME = 'firebase-installations-database';\r\nvar DATABASE_VERSION = 1;\r\nvar OBJECT_STORE_NAME = 'firebase-installations-store';\r\nvar dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, function (upgradeDB) {\r\n            // We don't use 'break' in this switch statement, the fall-through\r\n            // behavior is what we want, because if there are multiple versions between\r\n            // the old version and the current version, we want ALL the migrations\r\n            // that correspond to those versions to run, not only the last one.\r\n            // eslint-disable-next-line default-case\r\n            switch (upgradeDB.oldVersion) {\r\n                case 0:\r\n                    upgradeDB.createObjectStore(OBJECT_STORE_NAME);\r\n            }\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\n/** Assigns or overwrites the record for the given key with the given value. */\r\nfunction set(appConfig, value) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tx, objectStore, oldValue;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(appConfig);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    objectStore = tx.objectStore(OBJECT_STORE_NAME);\r\n                    return [4 /*yield*/, objectStore.get(key)];\r\n                case 2:\r\n                    oldValue = _a.sent();\r\n                    return [4 /*yield*/, objectStore.put(value, key)];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, tx.complete];\r\n                case 4:\r\n                    _a.sent();\r\n                    if (!oldValue || oldValue.fid !== value.fid) {\r\n                        fidChanged(appConfig, value.fid);\r\n                    }\r\n                    return [2 /*return*/, value];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** Removes record(s) from the objectStore that match the given key. */\r\nfunction remove(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tx;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(appConfig);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    return [4 /*yield*/, tx.objectStore(OBJECT_STORE_NAME).delete(key)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, tx.complete];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Atomically updates a record with the result of updateFn, which gets\r\n * called with the current value. If newValue is undefined, the record is\r\n * deleted instead.\r\n * @return Updated value\r\n */\r\nfunction update(appConfig, updateFn) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tx, store, oldValue, newValue;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(appConfig);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    store = tx.objectStore(OBJECT_STORE_NAME);\r\n                    return [4 /*yield*/, store.get(key)];\r\n                case 2:\r\n                    oldValue = _a.sent();\r\n                    newValue = updateFn(oldValue);\r\n                    if (!(newValue === undefined)) return [3 /*break*/, 4];\r\n                    return [4 /*yield*/, store.delete(key)];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [3 /*break*/, 6];\r\n                case 4: return [4 /*yield*/, store.put(newValue, key)];\r\n                case 5:\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: return [4 /*yield*/, tx.complete];\r\n                case 7:\r\n                    _a.sent();\r\n                    if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\r\n                        fidChanged(appConfig, newValue.fid);\r\n                    }\r\n                    return [2 /*return*/, newValue];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Updates and returns the InstallationEntry from the database.\r\n * Also triggers a registration request if it is necessary and possible.\r\n */\r\nfunction getInstallationEntry(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var registrationPromise, installationEntry;\r\n        var _a;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, update(appConfig, function (oldEntry) {\r\n                        var installationEntry = updateOrCreateInstallationEntry(oldEntry);\r\n                        var entryWithPromise = triggerRegistrationIfNecessary(appConfig, installationEntry);\r\n                        registrationPromise = entryWithPromise.registrationPromise;\r\n                        return entryWithPromise.installationEntry;\r\n                    })];\r\n                case 1:\r\n                    installationEntry = _b.sent();\r\n                    if (!(installationEntry.fid === INVALID_FID)) return [3 /*break*/, 3];\r\n                    _a = {};\r\n                    return [4 /*yield*/, registrationPromise];\r\n                case 2: \r\n                // FID generation failed. Waiting for the FID from the server.\r\n                return [2 /*return*/, (_a.installationEntry = _b.sent(), _a)];\r\n                case 3: return [2 /*return*/, {\r\n                        installationEntry: installationEntry,\r\n                        registrationPromise: registrationPromise\r\n                    }];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Creates a new Installation Entry if one does not exist.\r\n * Also clears timed out pending requests.\r\n */\r\nfunction updateOrCreateInstallationEntry(oldEntry) {\r\n    var entry = oldEntry || {\r\n        fid: generateFid(),\r\n        registrationStatus: 0 /* NOT_STARTED */\r\n    };\r\n    return clearTimedOutRequest(entry);\r\n}\r\n/**\r\n * If the Firebase Installation is not registered yet, this will trigger the\r\n * registration and return an InProgressInstallationEntry.\r\n *\r\n * If registrationPromise does not exist, the installationEntry is guaranteed\r\n * to be registered.\r\n */\r\nfunction triggerRegistrationIfNecessary(appConfig, installationEntry) {\r\n    if (installationEntry.registrationStatus === 0 /* NOT_STARTED */) {\r\n        if (!navigator.onLine) {\r\n            // Registration required but app is offline.\r\n            var registrationPromiseWithError = Promise.reject(ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */));\r\n            return {\r\n                installationEntry: installationEntry,\r\n                registrationPromise: registrationPromiseWithError\r\n            };\r\n        }\r\n        // Try registering. Change status to IN_PROGRESS.\r\n        var inProgressEntry = {\r\n            fid: installationEntry.fid,\r\n            registrationStatus: 1 /* IN_PROGRESS */,\r\n            registrationTime: Date.now()\r\n        };\r\n        var registrationPromise = registerInstallation(appConfig, inProgressEntry);\r\n        return { installationEntry: inProgressEntry, registrationPromise: registrationPromise };\r\n    }\r\n    else if (installationEntry.registrationStatus === 1 /* IN_PROGRESS */) {\r\n        return {\r\n            installationEntry: installationEntry,\r\n            registrationPromise: waitUntilFidRegistration(appConfig)\r\n        };\r\n    }\r\n    else {\r\n        return { installationEntry: installationEntry };\r\n    }\r\n}\r\n/** This will be executed only once for each new Firebase Installation. */\r\nfunction registerInstallation(appConfig, installationEntry) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var registeredInstallationEntry, e_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 2, , 7]);\r\n                    return [4 /*yield*/, createInstallationRequest(appConfig, installationEntry)];\r\n                case 1:\r\n                    registeredInstallationEntry = _a.sent();\r\n                    return [2 /*return*/, set(appConfig, registeredInstallationEntry)];\r\n                case 2:\r\n                    e_1 = _a.sent();\r\n                    if (!(isServerError(e_1) && e_1.customData.serverCode === 409)) return [3 /*break*/, 4];\r\n                    // Server returned a \"FID can not be used\" error.\r\n                    // Generate a new ID next time.\r\n                    return [4 /*yield*/, remove(appConfig)];\r\n                case 3:\r\n                    // Server returned a \"FID can not be used\" error.\r\n                    // Generate a new ID next time.\r\n                    _a.sent();\r\n                    return [3 /*break*/, 6];\r\n                case 4: \r\n                // Registration failed. Set FID as not registered.\r\n                return [4 /*yield*/, set(appConfig, {\r\n                        fid: installationEntry.fid,\r\n                        registrationStatus: 0 /* NOT_STARTED */\r\n                    })];\r\n                case 5:\r\n                    // Registration failed. Set FID as not registered.\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: throw e_1;\r\n                case 7: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** Call if FID registration is pending in another request. */\r\nfunction waitUntilFidRegistration(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var entry, _a, installationEntry, registrationPromise;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, updateInstallationRequest(appConfig)];\r\n                case 1:\r\n                    entry = _b.sent();\r\n                    _b.label = 2;\r\n                case 2:\r\n                    if (!(entry.registrationStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 5];\r\n                    // createInstallation request still in progress.\r\n                    return [4 /*yield*/, sleep(100)];\r\n                case 3:\r\n                    // createInstallation request still in progress.\r\n                    _b.sent();\r\n                    return [4 /*yield*/, updateInstallationRequest(appConfig)];\r\n                case 4:\r\n                    entry = _b.sent();\r\n                    return [3 /*break*/, 2];\r\n                case 5:\r\n                    if (!(entry.registrationStatus === 0 /* NOT_STARTED */)) return [3 /*break*/, 7];\r\n                    return [4 /*yield*/, getInstallationEntry(appConfig)];\r\n                case 6:\r\n                    _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;\r\n                    if (registrationPromise) {\r\n                        return [2 /*return*/, registrationPromise];\r\n                    }\r\n                    else {\r\n                        // if there is no registrationPromise, entry is registered.\r\n                        return [2 /*return*/, installationEntry];\r\n                    }\r\n                case 7: return [2 /*return*/, entry];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Called only if there is a CreateInstallation request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * CreateInstallation request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateInstallationRequest(appConfig) {\r\n    return update(appConfig, function (oldEntry) {\r\n        if (!oldEntry) {\r\n            throw ERROR_FACTORY.create(\"installation-not-found\" /* INSTALLATION_NOT_FOUND */);\r\n        }\r\n        return clearTimedOutRequest(oldEntry);\r\n    });\r\n}\r\nfunction clearTimedOutRequest(entry) {\r\n    if (hasInstallationRequestTimedOut(entry)) {\r\n        return {\r\n            fid: entry.fid,\r\n            registrationStatus: 0 /* NOT_STARTED */\r\n        };\r\n    }\r\n    return entry;\r\n}\r\nfunction hasInstallationRequestTimedOut(installationEntry) {\r\n    return (installationEntry.registrationStatus === 1 /* IN_PROGRESS */ &&\r\n        installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction generateAuthTokenRequest(_a, installationEntry) {\r\n    var appConfig = _a.appConfig, platformLoggerProvider = _a.platformLoggerProvider;\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var endpoint, headers, platformLogger, body, request, response, responseValue, completedAuthToken;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\r\n                    headers = getHeadersWithAuth(appConfig, installationEntry);\r\n                    platformLogger = platformLoggerProvider.getImmediate({\r\n                        optional: true\r\n                    });\r\n                    if (platformLogger) {\r\n                        headers.append('x-firebase-client', platformLogger.getPlatformInfoString());\r\n                    }\r\n                    body = {\r\n                        installation: {\r\n                            sdkVersion: PACKAGE_VERSION\r\n                        }\r\n                    };\r\n                    request = {\r\n                        method: 'POST',\r\n                        headers: headers,\r\n                        body: JSON.stringify(body)\r\n                    };\r\n                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];\r\n                case 1:\r\n                    response = _b.sent();\r\n                    if (!response.ok) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, response.json()];\r\n                case 2:\r\n                    responseValue = _b.sent();\r\n                    completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);\r\n                    return [2 /*return*/, completedAuthToken];\r\n                case 3: return [4 /*yield*/, getErrorFromResponse('Generate Auth Token', response)];\r\n                case 4: throw _b.sent();\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getGenerateAuthTokenEndpoint(appConfig, _a) {\r\n    var fid = _a.fid;\r\n    return getInstallationsEndpoint(appConfig) + \"/\" + fid + \"/authTokens:generate\";\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a valid authentication token for the installation. Generates a new\r\n * token if one doesn't exist, is expired or about to expire.\r\n *\r\n * Should only be called if the Firebase Installation is registered.\r\n */\r\nfunction refreshAuthToken(dependencies, forceRefresh) {\r\n    if (forceRefresh === void 0) { forceRefresh = false; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var tokenPromise, entry, authToken, _a;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, update(dependencies.appConfig, function (oldEntry) {\r\n                        if (!isEntryRegistered(oldEntry)) {\r\n                            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\r\n                        }\r\n                        var oldAuthToken = oldEntry.authToken;\r\n                        if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\r\n                            // There is a valid token in the DB.\r\n                            return oldEntry;\r\n                        }\r\n                        else if (oldAuthToken.requestStatus === 1 /* IN_PROGRESS */) {\r\n                            // There already is a token request in progress.\r\n                            tokenPromise = waitUntilAuthTokenRequest(dependencies, forceRefresh);\r\n                            return oldEntry;\r\n                        }\r\n                        else {\r\n                            // No token or token expired.\r\n                            if (!navigator.onLine) {\r\n                                throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\r\n                            }\r\n                            var inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\r\n                            tokenPromise = fetchAuthTokenFromServer(dependencies, inProgressEntry);\r\n                            return inProgressEntry;\r\n                        }\r\n                    })];\r\n                case 1:\r\n                    entry = _b.sent();\r\n                    if (!tokenPromise) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, tokenPromise];\r\n                case 2:\r\n                    _a = _b.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    _a = entry.authToken;\r\n                    _b.label = 4;\r\n                case 4:\r\n                    authToken = _a;\r\n                    return [2 /*return*/, authToken];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Call only if FID is registered and Auth Token request is in progress.\r\n *\r\n * Waits until the current pending request finishes. If the request times out,\r\n * tries once in this thread as well.\r\n */\r\nfunction waitUntilAuthTokenRequest(dependencies, forceRefresh) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var entry, authToken;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, updateAuthTokenRequest(dependencies.appConfig)];\r\n                case 1:\r\n                    entry = _a.sent();\r\n                    _a.label = 2;\r\n                case 2:\r\n                    if (!(entry.authToken.requestStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 5];\r\n                    // generateAuthToken still in progress.\r\n                    return [4 /*yield*/, sleep(100)];\r\n                case 3:\r\n                    // generateAuthToken still in progress.\r\n                    _a.sent();\r\n                    return [4 /*yield*/, updateAuthTokenRequest(dependencies.appConfig)];\r\n                case 4:\r\n                    entry = _a.sent();\r\n                    return [3 /*break*/, 2];\r\n                case 5:\r\n                    authToken = entry.authToken;\r\n                    if (authToken.requestStatus === 0 /* NOT_STARTED */) {\r\n                        // The request timed out or failed in a different call. Try again.\r\n                        return [2 /*return*/, refreshAuthToken(dependencies, forceRefresh)];\r\n                    }\r\n                    else {\r\n                        return [2 /*return*/, authToken];\r\n                    }\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Called only if there is a GenerateAuthToken request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * GenerateAuthToken request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateAuthTokenRequest(appConfig) {\r\n    return update(appConfig, function (oldEntry) {\r\n        if (!isEntryRegistered(oldEntry)) {\r\n            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\r\n        }\r\n        var oldAuthToken = oldEntry.authToken;\r\n        if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\r\n            return __assign(__assign({}, oldEntry), { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\r\n        }\r\n        return oldEntry;\r\n    });\r\n}\r\nfunction fetchAuthTokenFromServer(dependencies, installationEntry) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, updatedInstallationEntry, e_1, updatedInstallationEntry;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 3, , 8]);\r\n                    return [4 /*yield*/, generateAuthTokenRequest(dependencies, installationEntry)];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    updatedInstallationEntry = __assign(__assign({}, installationEntry), { authToken: authToken });\r\n                    return [4 /*yield*/, set(dependencies.appConfig, updatedInstallationEntry)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [2 /*return*/, authToken];\r\n                case 3:\r\n                    e_1 = _a.sent();\r\n                    if (!(isServerError(e_1) &&\r\n                        (e_1.customData.serverCode === 401 || e_1.customData.serverCode === 404))) return [3 /*break*/, 5];\r\n                    // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\r\n                    // Generate a new ID next time.\r\n                    return [4 /*yield*/, remove(dependencies.appConfig)];\r\n                case 4:\r\n                    // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\r\n                    // Generate a new ID next time.\r\n                    _a.sent();\r\n                    return [3 /*break*/, 7];\r\n                case 5:\r\n                    updatedInstallationEntry = __assign(__assign({}, installationEntry), { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\r\n                    return [4 /*yield*/, set(dependencies.appConfig, updatedInstallationEntry)];\r\n                case 6:\r\n                    _a.sent();\r\n                    _a.label = 7;\r\n                case 7: throw e_1;\r\n                case 8: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction isEntryRegistered(installationEntry) {\r\n    return (installationEntry !== undefined &&\r\n        installationEntry.registrationStatus === 2 /* COMPLETED */);\r\n}\r\nfunction isAuthTokenValid(authToken) {\r\n    return (authToken.requestStatus === 2 /* COMPLETED */ &&\r\n        !isAuthTokenExpired(authToken));\r\n}\r\nfunction isAuthTokenExpired(authToken) {\r\n    var now = Date.now();\r\n    return (now < authToken.creationTime ||\r\n        authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER);\r\n}\r\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\r\nfunction makeAuthTokenRequestInProgressEntry(oldEntry) {\r\n    var inProgressAuthToken = {\r\n        requestStatus: 1 /* IN_PROGRESS */,\r\n        requestTime: Date.now()\r\n    };\r\n    return __assign(__assign({}, oldEntry), { authToken: inProgressAuthToken });\r\n}\r\nfunction hasAuthTokenRequestTimedOut(authToken) {\r\n    return (authToken.requestStatus === 1 /* IN_PROGRESS */ &&\r\n        authToken.requestTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getId(dependencies) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var _a, installationEntry, registrationPromise;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, getInstallationEntry(dependencies.appConfig)];\r\n                case 1:\r\n                    _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;\r\n                    if (registrationPromise) {\r\n                        registrationPromise.catch(console.error);\r\n                    }\r\n                    else {\r\n                        // If the installation is already registered, update the authentication\r\n                        // token if needed.\r\n                        refreshAuthToken(dependencies).catch(console.error);\r\n                    }\r\n                    return [2 /*return*/, installationEntry.fid];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getToken(dependencies, forceRefresh) {\r\n    if (forceRefresh === void 0) { forceRefresh = false; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, completeInstallationRegistration(dependencies.appConfig)];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, refreshAuthToken(dependencies, forceRefresh)];\r\n                case 2:\r\n                    authToken = _a.sent();\r\n                    return [2 /*return*/, authToken.token];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction completeInstallationRegistration(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var registrationPromise;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, getInstallationEntry(appConfig)];\r\n                case 1:\r\n                    registrationPromise = (_a.sent()).registrationPromise;\r\n                    if (!registrationPromise) return [3 /*break*/, 3];\r\n                    // A createInstallation request is in progress. Wait until it finishes.\r\n                    return [4 /*yield*/, registrationPromise];\r\n                case 2:\r\n                    // A createInstallation request is in progress. Wait until it finishes.\r\n                    _a.sent();\r\n                    _a.label = 3;\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction deleteInstallationRequest(appConfig, installationEntry) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var endpoint, headers, request, response;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    endpoint = getDeleteEndpoint(appConfig, installationEntry);\r\n                    headers = getHeadersWithAuth(appConfig, installationEntry);\r\n                    request = {\r\n                        method: 'DELETE',\r\n                        headers: headers\r\n                    };\r\n                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];\r\n                case 1:\r\n                    response = _a.sent();\r\n                    if (!!response.ok) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, getErrorFromResponse('Delete Installation', response)];\r\n                case 2: throw _a.sent();\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getDeleteEndpoint(appConfig, _a) {\r\n    var fid = _a.fid;\r\n    return getInstallationsEndpoint(appConfig) + \"/\" + fid;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction deleteInstallation(dependencies) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var appConfig, entry;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    appConfig = dependencies.appConfig;\r\n                    return [4 /*yield*/, update(appConfig, function (oldEntry) {\r\n                            if (oldEntry && oldEntry.registrationStatus === 0 /* NOT_STARTED */) {\r\n                                // Delete the unregistered entry without sending a deleteInstallation request.\r\n                                return undefined;\r\n                            }\r\n                            return oldEntry;\r\n                        })];\r\n                case 1:\r\n                    entry = _a.sent();\r\n                    if (!entry) return [3 /*break*/, 6];\r\n                    if (!(entry.registrationStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 2];\r\n                    // Can't delete while trying to register.\r\n                    throw ERROR_FACTORY.create(\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */);\r\n                case 2:\r\n                    if (!(entry.registrationStatus === 2 /* COMPLETED */)) return [3 /*break*/, 6];\r\n                    if (!!navigator.onLine) return [3 /*break*/, 3];\r\n                    throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\r\n                case 3: return [4 /*yield*/, deleteInstallationRequest(appConfig, entry)];\r\n                case 4:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, remove(appConfig)];\r\n                case 5:\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Sets a new callback that will get called when Installation ID changes.\r\n * Returns an unsubscribe function that will remove the callback when called.\r\n */\r\nfunction onIdChange(_a, callback) {\r\n    var appConfig = _a.appConfig;\r\n    addCallback(appConfig, callback);\r\n    return function () {\r\n        removeCallback(appConfig, callback);\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction extractAppConfig(app) {\r\n    var e_1, _a;\r\n    if (!app || !app.options) {\r\n        throw getMissingValueError('App Configuration');\r\n    }\r\n    if (!app.name) {\r\n        throw getMissingValueError('App Name');\r\n    }\r\n    // Required app config keys\r\n    var configKeys = [\r\n        'projectId',\r\n        'apiKey',\r\n        'appId'\r\n    ];\r\n    try {\r\n        for (var configKeys_1 = __values(configKeys), configKeys_1_1 = configKeys_1.next(); !configKeys_1_1.done; configKeys_1_1 = configKeys_1.next()) {\r\n            var keyName = configKeys_1_1.value;\r\n            if (!app.options[keyName]) {\r\n                throw getMissingValueError(keyName);\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (configKeys_1_1 && !configKeys_1_1.done && (_a = configKeys_1.return)) _a.call(configKeys_1);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return {\r\n        appName: app.name,\r\n        projectId: app.options.projectId,\r\n        apiKey: app.options.apiKey,\r\n        appId: app.options.appId\r\n    };\r\n}\r\nfunction getMissingValueError(valueName) {\r\n    return ERROR_FACTORY.create(\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */, {\r\n        valueName: valueName\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerInstallations(instance) {\r\n    var installationsName = 'installations';\r\n    instance.INTERNAL.registerComponent(new Component(installationsName, function (container) {\r\n        var app = container.getProvider('app').getImmediate();\r\n        // Throws if app isn't configured properly.\r\n        var appConfig = extractAppConfig(app);\r\n        var platformLoggerProvider = container.getProvider('platform-logger');\r\n        var dependencies = {\r\n            appConfig: appConfig,\r\n            platformLoggerProvider: platformLoggerProvider\r\n        };\r\n        var installations = {\r\n            app: app,\r\n            getId: function () { return getId(dependencies); },\r\n            getToken: function (forceRefresh) {\r\n                return getToken(dependencies, forceRefresh);\r\n            },\r\n            delete: function () { return deleteInstallation(dependencies); },\r\n            onIdChange: function (callback) {\r\n                return onIdChange(dependencies, callback);\r\n            }\r\n        };\r\n        return installations;\r\n    }, \"PUBLIC\" /* PUBLIC */));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterInstallations(firebase);\n\nexport { registerInstallations };\n//# sourceMappingURL=index.esm.js.map\n","import firebase from '@firebase/app';\nimport { __extends, __awaiter, __generator } from 'tslib';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Standard error codes for different ways a request can fail, as defined by:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * This map is used primarily to convert from a backend error code string to\r\n * a client SDK error code string, and make sure it's in the supported set.\r\n */\r\nvar errorCodeMap = {\r\n    OK: 'ok',\r\n    CANCELLED: 'cancelled',\r\n    UNKNOWN: 'unknown',\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    DEADLINE_EXCEEDED: 'deadline-exceeded',\r\n    NOT_FOUND: 'not-found',\r\n    ALREADY_EXISTS: 'already-exists',\r\n    PERMISSION_DENIED: 'permission-denied',\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    RESOURCE_EXHAUSTED: 'resource-exhausted',\r\n    FAILED_PRECONDITION: 'failed-precondition',\r\n    ABORTED: 'aborted',\r\n    OUT_OF_RANGE: 'out-of-range',\r\n    UNIMPLEMENTED: 'unimplemented',\r\n    INTERNAL: 'internal',\r\n    UNAVAILABLE: 'unavailable',\r\n    DATA_LOSS: 'data-loss'\r\n};\r\n/**\r\n * An explicit error that can be thrown from a handler to send an error to the\r\n * client that called the function.\r\n */\r\nvar HttpsErrorImpl = /** @class */ (function (_super) {\r\n    __extends(HttpsErrorImpl, _super);\r\n    function HttpsErrorImpl(code, message, details) {\r\n        var _this = _super.call(this, message) || this;\r\n        // This is a workaround for a bug in TypeScript when extending Error:\r\n        // tslint:disable-next-line\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(_this, HttpsErrorImpl.prototype);\r\n        _this.code = code;\r\n        _this.details = details;\r\n        return _this;\r\n    }\r\n    return HttpsErrorImpl;\r\n}(Error));\r\n/**\r\n * Takes an HTTP status code and returns the corresponding ErrorCode.\r\n * This is the standard HTTP status code -> error mapping defined in:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * @param status An HTTP status code.\r\n * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.\r\n */\r\nfunction codeForHTTPStatus(status) {\r\n    // Make sure any successful status is OK.\r\n    if (status >= 200 && status < 300) {\r\n        return 'ok';\r\n    }\r\n    switch (status) {\r\n        case 0:\r\n            // This can happen if the server returns 500.\r\n            return 'internal';\r\n        case 400:\r\n            return 'invalid-argument';\r\n        case 401:\r\n            return 'unauthenticated';\r\n        case 403:\r\n            return 'permission-denied';\r\n        case 404:\r\n            return 'not-found';\r\n        case 409:\r\n            return 'aborted';\r\n        case 429:\r\n            return 'resource-exhausted';\r\n        case 499:\r\n            return 'cancelled';\r\n        case 500:\r\n            return 'internal';\r\n        case 501:\r\n            return 'unimplemented';\r\n        case 503:\r\n            return 'unavailable';\r\n        case 504:\r\n            return 'deadline-exceeded';\r\n    }\r\n    return 'unknown';\r\n}\r\n/**\r\n * Takes an HTTP response and returns the corresponding Error, if any.\r\n */\r\nfunction _errorForResponse(status, bodyJSON, serializer) {\r\n    var code = codeForHTTPStatus(status);\r\n    // Start with reasonable defaults from the status code.\r\n    var description = code;\r\n    var details = undefined;\r\n    // Then look through the body for explicit details.\r\n    try {\r\n        var errorJSON = bodyJSON && bodyJSON.error;\r\n        if (errorJSON) {\r\n            var status_1 = errorJSON.status;\r\n            if (typeof status_1 === 'string') {\r\n                if (!errorCodeMap[status_1]) {\r\n                    // They must've included an unknown error code in the body.\r\n                    return new HttpsErrorImpl('internal', 'internal');\r\n                }\r\n                code = errorCodeMap[status_1];\r\n                // TODO(klimt): Add better default descriptions for error enums.\r\n                // The default description needs to be updated for the new code.\r\n                description = status_1;\r\n            }\r\n            var message = errorJSON.message;\r\n            if (typeof message === 'string') {\r\n                description = message;\r\n            }\r\n            details = errorJSON.details;\r\n            if (details !== undefined) {\r\n                details = serializer.decode(details);\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        // If we couldn't parse explicit error data, that's fine.\r\n    }\r\n    if (code === 'ok') {\r\n        // Technically, there's an edge case where a developer could explicitly\r\n        // return an error code of OK, and we will treat it as success, but that\r\n        // seems reasonable.\r\n        return null;\r\n    }\r\n    return new HttpsErrorImpl(code, description, details);\r\n}\n\n/**\r\n * Helper class to get metadata that should be included with a function call.\r\n */\r\nvar ContextProvider = /** @class */ (function () {\r\n    function ContextProvider(authProvider, messagingProvider) {\r\n        var _this = this;\r\n        this.auth = null;\r\n        this.messaging = null;\r\n        this.auth = authProvider.getImmediate({ optional: true });\r\n        this.messaging = messagingProvider.getImmediate({\r\n            optional: true\r\n        });\r\n        if (!this.auth) {\r\n            authProvider.get().then(function (auth) { return (_this.auth = auth); }, function () {\r\n                /* get() never rejects */\r\n            });\r\n        }\r\n        if (!this.messaging) {\r\n            messagingProvider.get().then(function (messaging) { return (_this.messaging = messaging); }, function () {\r\n                /* get() never rejects */\r\n            });\r\n        }\r\n    }\r\n    ContextProvider.prototype.getAuthToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var token, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.auth) {\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.auth.getToken()];\r\n                    case 2:\r\n                        token = _a.sent();\r\n                        if (!token) {\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        return [2 /*return*/, token.accessToken];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        // If there's any error when trying to get the auth token, leave it off.\r\n                        return [2 /*return*/, undefined];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ContextProvider.prototype.getInstanceIdToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!this.messaging ||\r\n                    !('Notification' in self) ||\r\n                    Notification.permission !== 'granted') {\r\n                    return [2 /*return*/, undefined];\r\n                }\r\n                try {\r\n                    return [2 /*return*/, this.messaging.getToken()];\r\n                }\r\n                catch (e) {\r\n                    // We don't warn on this, because it usually means messaging isn't set up.\r\n                    // console.warn('Failed to retrieve instance id token.', e);\r\n                    // If there's any error when trying to get the token, leave it off.\r\n                    return [2 /*return*/, undefined];\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    ContextProvider.prototype.getContext = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var authToken, instanceIdToken;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getAuthToken()];\r\n                    case 1:\r\n                        authToken = _a.sent();\r\n                        return [4 /*yield*/, this.getInstanceIdToken()];\r\n                    case 2:\r\n                        instanceIdToken = _a.sent();\r\n                        return [2 /*return*/, { authToken: authToken, instanceIdToken: instanceIdToken }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return ContextProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\r\nvar UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\r\nfunction mapValues(\r\n// { [k: string]: unknown } is no longer a wildcard assignment target after typescript 3.5\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\no, f) {\r\n    var result = {};\r\n    for (var key in o) {\r\n        if (o.hasOwnProperty(key)) {\r\n            result[key] = f(o[key]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer() {\r\n    }\r\n    // Takes data and encodes it in a JSON-friendly way, such that types such as\r\n    // Date are preserved.\r\n    Serializer.prototype.encode = function (data) {\r\n        var _this = this;\r\n        if (data == null) {\r\n            return null;\r\n        }\r\n        if (data instanceof Number) {\r\n            data = data.valueOf();\r\n        }\r\n        if (typeof data === 'number' && isFinite(data)) {\r\n            // Any number in JS is safe to put directly in JSON and parse as a double\r\n            // without any loss of precision.\r\n            return data;\r\n        }\r\n        if (data === true || data === false) {\r\n            return data;\r\n        }\r\n        if (Object.prototype.toString.call(data) === '[object String]') {\r\n            return data;\r\n        }\r\n        if (Array.isArray(data)) {\r\n            return data.map(function (x) { return _this.encode(x); });\r\n        }\r\n        if (typeof data === 'function' || typeof data === 'object') {\r\n            return mapValues(data, function (x) { return _this.encode(x); });\r\n        }\r\n        // If we got this far, the data is not encodable.\r\n        throw new Error('Data cannot be encoded in JSON: ' + data);\r\n    };\r\n    // Takes data that's been encoded in a JSON-friendly form and returns a form\r\n    // with richer datatypes, such as Dates, etc.\r\n    Serializer.prototype.decode = function (json) {\r\n        var _this = this;\r\n        if (json == null) {\r\n            return json;\r\n        }\r\n        if (json['@type']) {\r\n            switch (json['@type']) {\r\n                case LONG_TYPE:\r\n                // Fall through and handle this the same as unsigned.\r\n                case UNSIGNED_LONG_TYPE: {\r\n                    // Technically, this could work return a valid number for malformed\r\n                    // data if there was a number followed by garbage. But it's just not\r\n                    // worth all the extra code to detect that case.\r\n                    var value = Number(json['value']);\r\n                    if (isNaN(value)) {\r\n                        throw new Error('Data cannot be decoded from JSON: ' + json);\r\n                    }\r\n                    return value;\r\n                }\r\n                default: {\r\n                    throw new Error('Data cannot be decoded from JSON: ' + json);\r\n                }\r\n            }\r\n        }\r\n        if (Array.isArray(json)) {\r\n            return json.map(function (x) { return _this.decode(x); });\r\n        }\r\n        if (typeof json === 'function' || typeof json === 'object') {\r\n            return mapValues(json, function (x) { return _this.decode(x); });\r\n        }\r\n        // Anything else is safe to return.\r\n        return json;\r\n    };\r\n    return Serializer;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a Promise that will be rejected after the given duration.\r\n * The error will be of type HttpsErrorImpl.\r\n *\r\n * @param millis Number of milliseconds to wait before rejecting.\r\n */\r\nfunction failAfter(millis) {\r\n    var timer;\r\n    var promise = new Promise(function (_, reject) {\r\n        timer = setTimeout(function () {\r\n            reject(new HttpsErrorImpl('deadline-exceeded', 'deadline-exceeded'));\r\n        }, millis);\r\n    });\r\n    return {\r\n        timer: timer,\r\n        promise: promise\r\n    };\r\n}\r\n/**\r\n * The main class for the Firebase Functions SDK.\r\n */\r\nvar Service = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Functions service for the given app and (optional) region or custom domain.\r\n     * @param app_ The FirebaseApp to use.\r\n     * @param regionOrCustomDomain_ one of:\r\n     *   a) A region to call functions from, such as us-central1\r\n     *   b) A custom domain to use as a functions prefix, such as https://mydomain.com\r\n     */\r\n    function Service(app_, authProvider, messagingProvider, regionOrCustomDomain_, fetchImpl) {\r\n        var _this = this;\r\n        if (regionOrCustomDomain_ === void 0) { regionOrCustomDomain_ = 'us-central1'; }\r\n        this.app_ = app_;\r\n        this.fetchImpl = fetchImpl;\r\n        this.serializer = new Serializer();\r\n        this.emulatorOrigin = null;\r\n        this.INTERNAL = {\r\n            delete: function () {\r\n                return Promise.resolve(_this.deleteService());\r\n            }\r\n        };\r\n        this.contextProvider = new ContextProvider(authProvider, messagingProvider);\r\n        // Cancels all ongoing requests when resolved.\r\n        this.cancelAllRequests = new Promise(function (resolve) {\r\n            _this.deleteService = function () {\r\n                return resolve();\r\n            };\r\n        });\r\n        // Resolve the region or custom domain overload by attempting to parse it.\r\n        try {\r\n            var url = new URL(regionOrCustomDomain_);\r\n            this.customDomain = url.origin;\r\n            this.region = 'us-central1';\r\n        }\r\n        catch (e) {\r\n            this.customDomain = null;\r\n            this.region = regionOrCustomDomain_;\r\n        }\r\n    }\r\n    Object.defineProperty(Service.prototype, \"app\", {\r\n        get: function () {\r\n            return this.app_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the URL for a callable with the given name.\r\n     * @param name The name of the callable.\r\n     */\r\n    Service.prototype._url = function (name) {\r\n        var projectId = this.app_.options.projectId;\r\n        if (this.emulatorOrigin !== null) {\r\n            var origin_1 = this.emulatorOrigin;\r\n            return origin_1 + \"/\" + projectId + \"/\" + this.region + \"/\" + name;\r\n        }\r\n        if (this.customDomain !== null) {\r\n            return this.customDomain + \"/\" + name;\r\n        }\r\n        return \"https://\" + this.region + \"-\" + projectId + \".cloudfunctions.net/\" + name;\r\n    };\r\n    /**\r\n     * Modify this instance to communicate with the Cloud Functions emulator.\r\n     *\r\n     * Note: this must be called before this instance has been used to do any operations.\r\n     *\r\n     * @param host The emulator host (ex: localhost)\r\n     * @param port The emulator port (ex: 5001)\r\n     */\r\n    Service.prototype.useEmulator = function (host, port) {\r\n        this.emulatorOrigin = \"http://\" + host + \":\" + port;\r\n    };\r\n    /**\r\n     * Changes this instance to point to a Cloud Functions emulator running\r\n     * locally. See https://firebase.google.com/docs/functions/local-emulator\r\n     *\r\n     * @deprecated Prefer the useEmulator(host, port) method.\r\n     * @param origin The origin of the local emulator, such as\r\n     * \"http://localhost:5005\".\r\n     */\r\n    Service.prototype.useFunctionsEmulator = function (origin) {\r\n        this.emulatorOrigin = origin;\r\n    };\r\n    /**\r\n     * Returns a reference to the callable https trigger with the given name.\r\n     * @param name The name of the trigger.\r\n     */\r\n    Service.prototype.httpsCallable = function (name, options) {\r\n        var _this = this;\r\n        return function (data) {\r\n            return _this.call(name, data, options || {});\r\n        };\r\n    };\r\n    /**\r\n     * Does an HTTP POST and returns the completed response.\r\n     * @param url The url to post to.\r\n     * @param body The JSON body of the post.\r\n     * @param headers The HTTP headers to include in the request.\r\n     * @return A Promise that will succeed when the request finishes.\r\n     */\r\n    Service.prototype.postJSON = function (url, body, headers) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response, e_1, json, e_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        headers['Content-Type'] = 'application/json';\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.fetchImpl(url, {\r\n                                method: 'POST',\r\n                                body: JSON.stringify(body),\r\n                                headers: headers\r\n                            })];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        // This could be an unhandled error on the backend, or it could be a\r\n                        // network error. There's no way to know, since an unhandled error on the\r\n                        // backend will fail to set the proper CORS header, and thus will be\r\n                        // treated as a network error by fetch.\r\n                        return [2 /*return*/, {\r\n                                status: 0,\r\n                                json: null\r\n                            }];\r\n                    case 4:\r\n                        json = null;\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        _a.trys.push([5, 7, , 8]);\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 6:\r\n                        json = _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 7:\r\n                        e_2 = _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 8: return [2 /*return*/, {\r\n                            status: response.status,\r\n                            json: json\r\n                        }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Calls a callable function asynchronously and returns the result.\r\n     * @param name The name of the callable trigger.\r\n     * @param data The data to pass as params to the function.s\r\n     */\r\n    Service.prototype.call = function (name, data, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var url, body, headers, context, timeout, _a, timer, failAfterPromise, response, error, responseData, decodedData;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        url = this._url(name);\r\n                        // Encode any special types, such as dates, in the input data.\r\n                        data = this.serializer.encode(data);\r\n                        body = { data: data };\r\n                        headers = {};\r\n                        return [4 /*yield*/, this.contextProvider.getContext()];\r\n                    case 1:\r\n                        context = _b.sent();\r\n                        if (context.authToken) {\r\n                            headers['Authorization'] = 'Bearer ' + context.authToken;\r\n                        }\r\n                        if (context.instanceIdToken) {\r\n                            headers['Firebase-Instance-ID-Token'] = context.instanceIdToken;\r\n                        }\r\n                        timeout = options.timeout || 70000;\r\n                        _a = failAfter(timeout), timer = _a.timer, failAfterPromise = _a.promise;\r\n                        return [4 /*yield*/, Promise.race([\r\n                                clearTimeoutWrapper(timer, this.postJSON(url, body, headers)),\r\n                                failAfterPromise,\r\n                                clearTimeoutWrapper(timer, this.cancelAllRequests)\r\n                            ])];\r\n                    case 2:\r\n                        response = _b.sent();\r\n                        // If service was deleted, interrupted response throws an error.\r\n                        if (!response) {\r\n                            throw new HttpsErrorImpl('cancelled', 'Firebase Functions instance was deleted.');\r\n                        }\r\n                        error = _errorForResponse(response.status, response.json, this.serializer);\r\n                        if (error) {\r\n                            throw error;\r\n                        }\r\n                        if (!response.json) {\r\n                            throw new HttpsErrorImpl('internal', 'Response is not valid JSON object.');\r\n                        }\r\n                        responseData = response.json.data;\r\n                        // TODO(klimt): For right now, allow \"result\" instead of \"data\", for\r\n                        // backwards compatibility.\r\n                        if (typeof responseData === 'undefined') {\r\n                            responseData = response.json.result;\r\n                        }\r\n                        if (typeof responseData === 'undefined') {\r\n                            // Consider the response malformed.\r\n                            throw new HttpsErrorImpl('internal', 'Response is missing data field.');\r\n                        }\r\n                        decodedData = this.serializer.decode(responseData);\r\n                        return [2 /*return*/, { data: decodedData }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Service;\r\n}());\r\nfunction clearTimeoutWrapper(timer, promise) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var result;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, promise];\r\n                case 1:\r\n                    result = _a.sent();\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    clearTimeout(timer);\r\n                    return [2 /*return*/, result];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Functions.\r\n */\r\nvar FUNCTIONS_TYPE = 'functions';\r\nfunction registerFunctions(instance, fetchImpl) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        Functions: Service\r\n    };\r\n    function factory(container, regionOrCustomDomain) {\r\n        // Dependencies\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        var messagingProvider = container.getProvider('messaging');\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return new Service(app, authProvider, messagingProvider, regionOrCustomDomain, fetchImpl);\r\n    }\r\n    instance.INTERNAL.registerComponent(new Component(FUNCTIONS_TYPE, factory, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(namespaceExports)\r\n        .setMultipleInstances(true));\r\n}\n\nvar name = \"@firebase/functions\";\nvar version = \"0.6.1\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterFunctions(firebase, fetch.bind(self));\r\nfirebase.registerVersion(name, version);\n//# sourceMappingURL=index.esm.js.map\n","import '@firebase/installations';\nimport { Component } from '@firebase/component';\nimport { ErrorFactory } from '@firebase/util';\nimport { __spread, __awaiter, __generator, __assign, __values } from 'tslib';\nimport { deleteDb, openDb } from 'idb';\nimport firebase from '@firebase/app';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_MAP = (_a = {},\r\n    _a[\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */] = 'Missing App configuration value: \"{$valueName}\"',\r\n    _a[\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */] = 'This method is available in a Window context.',\r\n    _a[\"only-available-in-sw\" /* AVAILABLE_IN_SW */] = 'This method is available in a service worker context.',\r\n    _a[\"permission-default\" /* PERMISSION_DEFAULT */] = 'The notification permission was not granted and dismissed instead.',\r\n    _a[\"permission-blocked\" /* PERMISSION_BLOCKED */] = 'The notification permission was not granted and blocked instead.',\r\n    _a[\"unsupported-browser\" /* UNSUPPORTED_BROWSER */] = \"This browser doesn't support the API's required to use the firebase SDK.\",\r\n    _a[\"failed-service-worker-registration\" /* FAILED_DEFAULT_REGISTRATION */] = 'We are unable to register the default service worker. {$browserErrorMessage}',\r\n    _a[\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */] = 'A problem occurred while subscribing the user to FCM: {$errorInfo}',\r\n    _a[\"token-subscribe-no-token\" /* TOKEN_SUBSCRIBE_NO_TOKEN */] = 'FCM returned no token when subscribing the user to push.',\r\n    _a[\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */] = 'A problem occurred while unsubscribing the ' +\r\n        'user from FCM: {$errorInfo}',\r\n    _a[\"token-update-failed\" /* TOKEN_UPDATE_FAILED */] = 'A problem occurred while updating the user from FCM: {$errorInfo}',\r\n    _a[\"token-update-no-token\" /* TOKEN_UPDATE_NO_TOKEN */] = 'FCM returned no token when updating the user to push.',\r\n    _a[\"use-sw-after-get-token\" /* USE_SW_AFTER_GET_TOKEN */] = 'The useServiceWorker() method may only be called once and must be ' +\r\n        'called before calling getToken() to ensure your service worker is used.',\r\n    _a[\"invalid-sw-registration\" /* INVALID_SW_REGISTRATION */] = 'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\r\n    _a[\"invalid-bg-handler\" /* INVALID_BG_HANDLER */] = 'The input to setBackgroundMessageHandler() must be a function.',\r\n    _a[\"invalid-vapid-key\" /* INVALID_VAPID_KEY */] = 'The public VAPID key must be a string.',\r\n    _a[\"use-vapid-key-after-get-token\" /* USE_VAPID_KEY_AFTER_GET_TOKEN */] = 'The usePublicVapidKey() method may only be called once and must be ' +\r\n        'called before calling getToken() to ensure your VAPID key is used.',\r\n    _a);\r\nvar ERROR_FACTORY = new ErrorFactory('messaging', 'Messaging', ERROR_MAP);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\r\nvar DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\r\nvar DEFAULT_VAPID_KEY = 'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\r\nvar ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\r\n// Key of FCM Payload in Notification's data field.\r\nvar FCM_MSG = 'FCM_MSG';\r\nvar TAG = 'FirebaseMessaging: ';\r\n// Set to '1' if Analytics is enabled for the campaign\r\nvar CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\r\nvar CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\r\nvar CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\r\nvar CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\r\n// Due to the fact that onBackgroundMessage can't be awaited (to support rxjs), a silent push\r\n// warning might be shown by the browser if the callback fails to completes by the end of onPush.\r\n// Experiments were ran to determine the majority onBackground message clock time. This brief\r\n// blocking time would allow majority of the onBackgroundMessage callback to finish.\r\nvar BACKGROUND_HANDLE_EXECUTION_TIME_LIMIT_MS = 1000;\r\n// Preparation time for client to initialize and set up the message handler.\r\nvar FOREGROUND_HANDLE_PREPARATION_TIME_MS = 3000;\n\n/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\r\n * in compliance with the License. You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under the License\r\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\r\n * or implied. See the License for the specific language governing permissions and limitations under\r\n * the License.\r\n */\r\nvar MessageType;\r\n(function (MessageType) {\r\n    MessageType[\"PUSH_RECEIVED\"] = \"push-received\";\r\n    MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\r\n})(MessageType || (MessageType = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction arrayToBase64(array) {\r\n    var uint8Array = new Uint8Array(array);\r\n    var base64String = btoa(String.fromCharCode.apply(String, __spread(uint8Array)));\r\n    return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\r\n}\r\nfunction base64ToArray(base64String) {\r\n    var padding = '='.repeat((4 - (base64String.length % 4)) % 4);\r\n    var base64 = (base64String + padding)\r\n        .replace(/\\-/g, '+')\r\n        .replace(/_/g, '/');\r\n    var rawData = atob(base64);\r\n    var outputArray = new Uint8Array(rawData.length);\r\n    for (var i = 0; i < rawData.length; ++i) {\r\n        outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar OLD_DB_NAME = 'fcm_token_details_db';\r\n/**\r\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\r\n * callback is called for all versions of the old DB.\r\n */\r\nvar OLD_DB_VERSION = 5;\r\nvar OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\r\nfunction migrateOldDatabase(senderId) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var databases, dbNames, tokenDetails, db;\r\n        var _this = this;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (!('databases' in indexedDB)) return [3 /*break*/, 2];\r\n                    return [4 /*yield*/, indexedDB.databases()];\r\n                case 1:\r\n                    databases = _a.sent();\r\n                    dbNames = databases.map(function (db) { return db.name; });\r\n                    if (!dbNames.includes(OLD_DB_NAME)) {\r\n                        // old DB didn't exist, no need to open.\r\n                        return [2 /*return*/, null];\r\n                    }\r\n                    _a.label = 2;\r\n                case 2:\r\n                    tokenDetails = null;\r\n                    return [4 /*yield*/, openDb(OLD_DB_NAME, OLD_DB_VERSION, function (db) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var objectStore, value, oldDetails, oldDetails, oldDetails;\r\n                            var _a;\r\n                            return __generator(this, function (_b) {\r\n                                switch (_b.label) {\r\n                                    case 0:\r\n                                        if (db.oldVersion < 2) {\r\n                                            // Database too old, skip migration.\r\n                                            return [2 /*return*/];\r\n                                        }\r\n                                        if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\r\n                                            // Database did not exist. Nothing to do.\r\n                                            return [2 /*return*/];\r\n                                        }\r\n                                        objectStore = db.transaction.objectStore(OLD_OBJECT_STORE_NAME);\r\n                                        return [4 /*yield*/, objectStore.index('fcmSenderId').get(senderId)];\r\n                                    case 1:\r\n                                        value = _b.sent();\r\n                                        return [4 /*yield*/, objectStore.clear()];\r\n                                    case 2:\r\n                                        _b.sent();\r\n                                        if (!value) {\r\n                                            // No entry in the database, nothing to migrate.\r\n                                            return [2 /*return*/];\r\n                                        }\r\n                                        if (db.oldVersion === 2) {\r\n                                            oldDetails = value;\r\n                                            if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\r\n                                                return [2 /*return*/];\r\n                                            }\r\n                                            tokenDetails = {\r\n                                                token: oldDetails.fcmToken,\r\n                                                createTime: (_a = oldDetails.createTime) !== null && _a !== void 0 ? _a : Date.now(),\r\n                                                subscriptionOptions: {\r\n                                                    auth: oldDetails.auth,\r\n                                                    p256dh: oldDetails.p256dh,\r\n                                                    endpoint: oldDetails.endpoint,\r\n                                                    swScope: oldDetails.swScope,\r\n                                                    vapidKey: typeof oldDetails.vapidKey === 'string'\r\n                                                        ? oldDetails.vapidKey\r\n                                                        : arrayToBase64(oldDetails.vapidKey)\r\n                                                }\r\n                                            };\r\n                                        }\r\n                                        else if (db.oldVersion === 3) {\r\n                                            oldDetails = value;\r\n                                            tokenDetails = {\r\n                                                token: oldDetails.fcmToken,\r\n                                                createTime: oldDetails.createTime,\r\n                                                subscriptionOptions: {\r\n                                                    auth: arrayToBase64(oldDetails.auth),\r\n                                                    p256dh: arrayToBase64(oldDetails.p256dh),\r\n                                                    endpoint: oldDetails.endpoint,\r\n                                                    swScope: oldDetails.swScope,\r\n                                                    vapidKey: arrayToBase64(oldDetails.vapidKey)\r\n                                                }\r\n                                            };\r\n                                        }\r\n                                        else if (db.oldVersion === 4) {\r\n                                            oldDetails = value;\r\n                                            tokenDetails = {\r\n                                                token: oldDetails.fcmToken,\r\n                                                createTime: oldDetails.createTime,\r\n                                                subscriptionOptions: {\r\n                                                    auth: arrayToBase64(oldDetails.auth),\r\n                                                    p256dh: arrayToBase64(oldDetails.p256dh),\r\n                                                    endpoint: oldDetails.endpoint,\r\n                                                    swScope: oldDetails.swScope,\r\n                                                    vapidKey: arrayToBase64(oldDetails.vapidKey)\r\n                                                }\r\n                                            };\r\n                                        }\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); })];\r\n                case 3:\r\n                    db = _a.sent();\r\n                    db.close();\r\n                    // Delete all old databases.\r\n                    return [4 /*yield*/, deleteDb(OLD_DB_NAME)];\r\n                case 4:\r\n                    // Delete all old databases.\r\n                    _a.sent();\r\n                    return [4 /*yield*/, deleteDb('fcm_vapid_details_db')];\r\n                case 5:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, deleteDb('undefined')];\r\n                case 6:\r\n                    _a.sent();\r\n                    return [2 /*return*/, checkTokenDetails(tokenDetails) ? tokenDetails : null];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction checkTokenDetails(tokenDetails) {\r\n    if (!tokenDetails || !tokenDetails.subscriptionOptions) {\r\n        return false;\r\n    }\r\n    var subscriptionOptions = tokenDetails.subscriptionOptions;\r\n    return (typeof tokenDetails.createTime === 'number' &&\r\n        tokenDetails.createTime > 0 &&\r\n        typeof tokenDetails.token === 'string' &&\r\n        tokenDetails.token.length > 0 &&\r\n        typeof subscriptionOptions.auth === 'string' &&\r\n        subscriptionOptions.auth.length > 0 &&\r\n        typeof subscriptionOptions.p256dh === 'string' &&\r\n        subscriptionOptions.p256dh.length > 0 &&\r\n        typeof subscriptionOptions.endpoint === 'string' &&\r\n        subscriptionOptions.endpoint.length > 0 &&\r\n        typeof subscriptionOptions.swScope === 'string' &&\r\n        subscriptionOptions.swScope.length > 0 &&\r\n        typeof subscriptionOptions.vapidKey === 'string' &&\r\n        subscriptionOptions.vapidKey.length > 0);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Exported for tests.\r\nvar DATABASE_NAME = 'firebase-messaging-database';\r\nvar DATABASE_VERSION = 1;\r\nvar OBJECT_STORE_NAME = 'firebase-messaging-store';\r\nvar dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, function (upgradeDb) {\r\n            // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\r\n            // because if there are multiple versions between the old version and the current version, we\r\n            // want ALL the migrations that correspond to those versions to run, not only the last one.\r\n            // eslint-disable-next-line default-case\r\n            switch (upgradeDb.oldVersion) {\r\n                case 0:\r\n                    upgradeDb.createObjectStore(OBJECT_STORE_NAME);\r\n            }\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\n/** Gets record(s) from the objectStore that match the given key. */\r\nfunction dbGet(firebaseDependencies) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tokenDetails, oldTokenDetails;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(firebaseDependencies);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    return [4 /*yield*/, db\r\n                            .transaction(OBJECT_STORE_NAME)\r\n                            .objectStore(OBJECT_STORE_NAME)\r\n                            .get(key)];\r\n                case 2:\r\n                    tokenDetails = _a.sent();\r\n                    if (!tokenDetails) return [3 /*break*/, 3];\r\n                    return [2 /*return*/, tokenDetails];\r\n                case 3: return [4 /*yield*/, migrateOldDatabase(firebaseDependencies.appConfig.senderId)];\r\n                case 4:\r\n                    oldTokenDetails = _a.sent();\r\n                    if (!oldTokenDetails) return [3 /*break*/, 6];\r\n                    return [4 /*yield*/, dbSet(firebaseDependencies, oldTokenDetails)];\r\n                case 5:\r\n                    _a.sent();\r\n                    return [2 /*return*/, oldTokenDetails];\r\n                case 6: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** Assigns or overwrites the record for the given key with the given value. */\r\nfunction dbSet(firebaseDependencies, tokenDetails) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tx;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(firebaseDependencies);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    return [4 /*yield*/, tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, tx.complete];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [2 /*return*/, tokenDetails];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** Removes record(s) from the objectStore that match the given key. */\r\nfunction dbRemove(firebaseDependencies) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tx;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(firebaseDependencies);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    return [4 /*yield*/, tx.objectStore(OBJECT_STORE_NAME).delete(key)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, tx.complete];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getKey(_a) {\r\n    var appConfig = _a.appConfig;\r\n    return appConfig.appId;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction requestGetToken(firebaseDependencies, subscriptionOptions) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var headers, body, subscribeOptions, responseData, response, err_1, message;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, getHeaders(firebaseDependencies)];\r\n                case 1:\r\n                    headers = _a.sent();\r\n                    body = getBody(subscriptionOptions);\r\n                    subscribeOptions = {\r\n                        method: 'POST',\r\n                        headers: headers,\r\n                        body: JSON.stringify(body)\r\n                    };\r\n                    _a.label = 2;\r\n                case 2:\r\n                    _a.trys.push([2, 5, , 6]);\r\n                    return [4 /*yield*/, fetch(getEndpoint(firebaseDependencies.appConfig), subscribeOptions)];\r\n                case 3:\r\n                    response = _a.sent();\r\n                    return [4 /*yield*/, response.json()];\r\n                case 4:\r\n                    responseData = _a.sent();\r\n                    return [3 /*break*/, 6];\r\n                case 5:\r\n                    err_1 = _a.sent();\r\n                    throw ERROR_FACTORY.create(\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */, {\r\n                        errorInfo: err_1\r\n                    });\r\n                case 6:\r\n                    if (responseData.error) {\r\n                        message = responseData.error.message;\r\n                        throw ERROR_FACTORY.create(\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */, {\r\n                            errorInfo: message\r\n                        });\r\n                    }\r\n                    if (!responseData.token) {\r\n                        throw ERROR_FACTORY.create(\"token-subscribe-no-token\" /* TOKEN_SUBSCRIBE_NO_TOKEN */);\r\n                    }\r\n                    return [2 /*return*/, responseData.token];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction requestUpdateToken(firebaseDependencies, tokenDetails) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var headers, body, updateOptions, responseData, response, err_2, message;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, getHeaders(firebaseDependencies)];\r\n                case 1:\r\n                    headers = _a.sent();\r\n                    body = getBody(tokenDetails.subscriptionOptions);\r\n                    updateOptions = {\r\n                        method: 'PATCH',\r\n                        headers: headers,\r\n                        body: JSON.stringify(body)\r\n                    };\r\n                    _a.label = 2;\r\n                case 2:\r\n                    _a.trys.push([2, 5, , 6]);\r\n                    return [4 /*yield*/, fetch(getEndpoint(firebaseDependencies.appConfig) + \"/\" + tokenDetails.token, updateOptions)];\r\n                case 3:\r\n                    response = _a.sent();\r\n                    return [4 /*yield*/, response.json()];\r\n                case 4:\r\n                    responseData = _a.sent();\r\n                    return [3 /*break*/, 6];\r\n                case 5:\r\n                    err_2 = _a.sent();\r\n                    throw ERROR_FACTORY.create(\"token-update-failed\" /* TOKEN_UPDATE_FAILED */, {\r\n                        errorInfo: err_2\r\n                    });\r\n                case 6:\r\n                    if (responseData.error) {\r\n                        message = responseData.error.message;\r\n                        throw ERROR_FACTORY.create(\"token-update-failed\" /* TOKEN_UPDATE_FAILED */, {\r\n                            errorInfo: message\r\n                        });\r\n                    }\r\n                    if (!responseData.token) {\r\n                        throw ERROR_FACTORY.create(\"token-update-no-token\" /* TOKEN_UPDATE_NO_TOKEN */);\r\n                    }\r\n                    return [2 /*return*/, responseData.token];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction requestDeleteToken(firebaseDependencies, token) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var headers, unsubscribeOptions, response, responseData, message, err_3;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, getHeaders(firebaseDependencies)];\r\n                case 1:\r\n                    headers = _a.sent();\r\n                    unsubscribeOptions = {\r\n                        method: 'DELETE',\r\n                        headers: headers\r\n                    };\r\n                    _a.label = 2;\r\n                case 2:\r\n                    _a.trys.push([2, 5, , 6]);\r\n                    return [4 /*yield*/, fetch(getEndpoint(firebaseDependencies.appConfig) + \"/\" + token, unsubscribeOptions)];\r\n                case 3:\r\n                    response = _a.sent();\r\n                    return [4 /*yield*/, response.json()];\r\n                case 4:\r\n                    responseData = _a.sent();\r\n                    if (responseData.error) {\r\n                        message = responseData.error.message;\r\n                        throw ERROR_FACTORY.create(\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */, {\r\n                            errorInfo: message\r\n                        });\r\n                    }\r\n                    return [3 /*break*/, 6];\r\n                case 5:\r\n                    err_3 = _a.sent();\r\n                    throw ERROR_FACTORY.create(\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */, {\r\n                        errorInfo: err_3\r\n                    });\r\n                case 6: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getEndpoint(_a) {\r\n    var projectId = _a.projectId;\r\n    return ENDPOINT + \"/projects/\" + projectId + \"/registrations\";\r\n}\r\nfunction getHeaders(_a) {\r\n    var appConfig = _a.appConfig, installations = _a.installations;\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, installations.getToken()];\r\n                case 1:\r\n                    authToken = _b.sent();\r\n                    return [2 /*return*/, new Headers({\r\n                            'Content-Type': 'application/json',\r\n                            Accept: 'application/json',\r\n                            'x-goog-api-key': appConfig.apiKey,\r\n                            'x-goog-firebase-installations-auth': \"FIS \" + authToken\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getBody(_a) {\r\n    var p256dh = _a.p256dh, auth = _a.auth, endpoint = _a.endpoint, vapidKey = _a.vapidKey;\r\n    var body = {\r\n        web: {\r\n            endpoint: endpoint,\r\n            auth: auth,\r\n            p256dh: p256dh\r\n        }\r\n    };\r\n    if (vapidKey !== DEFAULT_VAPID_KEY) {\r\n        body.web.applicationPubKey = vapidKey;\r\n    }\r\n    return body;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** UpdateRegistration will be called once every week. */\r\nvar TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\r\nfunction getToken(firebaseDependencies, swRegistration, vapidKey) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var pushSubscription, tokenDetails, subscriptionOptions, e_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (Notification.permission !== 'granted') {\r\n                        throw ERROR_FACTORY.create(\"permission-blocked\" /* PERMISSION_BLOCKED */);\r\n                    }\r\n                    return [4 /*yield*/, getPushSubscription(swRegistration, vapidKey)];\r\n                case 1:\r\n                    pushSubscription = _a.sent();\r\n                    return [4 /*yield*/, dbGet(firebaseDependencies)];\r\n                case 2:\r\n                    tokenDetails = _a.sent();\r\n                    subscriptionOptions = {\r\n                        vapidKey: vapidKey,\r\n                        swScope: swRegistration.scope,\r\n                        endpoint: pushSubscription.endpoint,\r\n                        auth: arrayToBase64(pushSubscription.getKey('auth')),\r\n                        p256dh: arrayToBase64(pushSubscription.getKey('p256dh'))\r\n                    };\r\n                    if (!!tokenDetails) return [3 /*break*/, 3];\r\n                    // No token, get a new one.\r\n                    return [2 /*return*/, getNewToken(firebaseDependencies, subscriptionOptions)];\r\n                case 3:\r\n                    if (!!isTokenValid(tokenDetails.subscriptionOptions, subscriptionOptions)) return [3 /*break*/, 8];\r\n                    _a.label = 4;\r\n                case 4:\r\n                    _a.trys.push([4, 6, , 7]);\r\n                    return [4 /*yield*/, requestDeleteToken(firebaseDependencies, tokenDetails.token)];\r\n                case 5:\r\n                    _a.sent();\r\n                    return [3 /*break*/, 7];\r\n                case 6:\r\n                    e_1 = _a.sent();\r\n                    // Suppress errors because of #2364\r\n                    console.warn(e_1);\r\n                    return [3 /*break*/, 7];\r\n                case 7: return [2 /*return*/, getNewToken(firebaseDependencies, subscriptionOptions)];\r\n                case 8:\r\n                    if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\r\n                        // Weekly token refresh\r\n                        return [2 /*return*/, updateToken({\r\n                                token: tokenDetails.token,\r\n                                createTime: Date.now(),\r\n                                subscriptionOptions: subscriptionOptions\r\n                            }, firebaseDependencies, swRegistration)];\r\n                    }\r\n                    else {\r\n                        // Valid token, nothing to do.\r\n                        return [2 /*return*/, tokenDetails.token];\r\n                    }\r\n                case 9: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\r\n * the push subscription if it exists.\r\n */\r\nfunction deleteToken(firebaseDependencies, swRegistration) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var tokenDetails, pushSubscription;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, dbGet(firebaseDependencies)];\r\n                case 1:\r\n                    tokenDetails = _a.sent();\r\n                    if (!tokenDetails) return [3 /*break*/, 4];\r\n                    return [4 /*yield*/, requestDeleteToken(firebaseDependencies, tokenDetails.token)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, dbRemove(firebaseDependencies)];\r\n                case 3:\r\n                    _a.sent();\r\n                    _a.label = 4;\r\n                case 4: return [4 /*yield*/, swRegistration.pushManager.getSubscription()];\r\n                case 5:\r\n                    pushSubscription = _a.sent();\r\n                    if (pushSubscription) {\r\n                        return [2 /*return*/, pushSubscription.unsubscribe()];\r\n                    }\r\n                    // If there's no SW, consider it a success.\r\n                    return [2 /*return*/, true];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction updateToken(tokenDetails, firebaseDependencies, swRegistration) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var updatedToken, updatedTokenDetails, e_2;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 3, , 5]);\r\n                    return [4 /*yield*/, requestUpdateToken(firebaseDependencies, tokenDetails)];\r\n                case 1:\r\n                    updatedToken = _a.sent();\r\n                    updatedTokenDetails = __assign(__assign({}, tokenDetails), { token: updatedToken, createTime: Date.now() });\r\n                    return [4 /*yield*/, dbSet(firebaseDependencies, updatedTokenDetails)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [2 /*return*/, updatedToken];\r\n                case 3:\r\n                    e_2 = _a.sent();\r\n                    return [4 /*yield*/, deleteToken(firebaseDependencies, swRegistration)];\r\n                case 4:\r\n                    _a.sent();\r\n                    throw e_2;\r\n                case 5: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getNewToken(firebaseDependencies, subscriptionOptions) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var token, tokenDetails;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, requestGetToken(firebaseDependencies, subscriptionOptions)];\r\n                case 1:\r\n                    token = _a.sent();\r\n                    tokenDetails = {\r\n                        token: token,\r\n                        createTime: Date.now(),\r\n                        subscriptionOptions: subscriptionOptions\r\n                    };\r\n                    return [4 /*yield*/, dbSet(firebaseDependencies, tokenDetails)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [2 /*return*/, tokenDetails.token];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Gets a PushSubscription for the current user.\r\n */\r\nfunction getPushSubscription(swRegistration, vapidKey) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var subscription;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, swRegistration.pushManager.getSubscription()];\r\n                case 1:\r\n                    subscription = _a.sent();\r\n                    if (subscription) {\r\n                        return [2 /*return*/, subscription];\r\n                    }\r\n                    return [2 /*return*/, swRegistration.pushManager.subscribe({\r\n                            userVisibleOnly: true,\r\n                            // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\r\n                            // submitted to pushManager#subscribe must be of type Uint8Array.\r\n                            applicationServerKey: base64ToArray(vapidKey)\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Checks if the saved tokenDetails object matches the configuration provided.\r\n */\r\nfunction isTokenValid(dbOptions, currentOptions) {\r\n    var isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\r\n    var isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\r\n    var isAuthEqual = currentOptions.auth === dbOptions.auth;\r\n    var isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\r\n    return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction externalizePayload(internalPayload) {\r\n    var payload = {\r\n        from: internalPayload.from,\r\n        // eslint-disable-next-line camelcase\r\n        collapseKey: internalPayload.collapse_key\r\n    };\r\n    propagateNotificationPayload(payload, internalPayload);\r\n    propagateDataPayload(payload, internalPayload);\r\n    propagateFcmOptions(payload, internalPayload);\r\n    return payload;\r\n}\r\nfunction propagateNotificationPayload(payload, messagePayloadInternal) {\r\n    if (!messagePayloadInternal.notification) {\r\n        return;\r\n    }\r\n    payload.notification = {};\r\n    var title = messagePayloadInternal.notification.title;\r\n    if (!!title) {\r\n        payload.notification.title = title;\r\n    }\r\n    var body = messagePayloadInternal.notification.body;\r\n    if (!!body) {\r\n        payload.notification.body = body;\r\n    }\r\n    var image = messagePayloadInternal.notification.image;\r\n    if (!!image) {\r\n        payload.notification.image = image;\r\n    }\r\n}\r\nfunction propagateDataPayload(payload, messagePayloadInternal) {\r\n    if (!messagePayloadInternal.data) {\r\n        return;\r\n    }\r\n    payload.data = messagePayloadInternal.data;\r\n}\r\nfunction propagateFcmOptions(payload, messagePayloadInternal) {\r\n    if (!messagePayloadInternal.fcmOptions) {\r\n        return;\r\n    }\r\n    payload.fcmOptions = {};\r\n    var link = messagePayloadInternal.fcmOptions.link;\r\n    if (!!link) {\r\n        payload.fcmOptions.link = link;\r\n    }\r\n    // eslint-disable-next-line camelcase\r\n    var analyticsLabel = messagePayloadInternal.fcmOptions.analytics_label;\r\n    if (!!analyticsLabel) {\r\n        payload.fcmOptions.analyticsLabel = analyticsLabel;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isConsoleMessage(data) {\r\n    // This message has a campaign ID, meaning it was sent using the Firebase Console.\r\n    return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a promise that resolves after given time passes. */\r\nfunction sleep(ms) {\r\n    return new Promise(function (resolve) {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SwController = /** @class */ (function () {\r\n    function SwController(firebaseDependencies) {\r\n        var _this = this;\r\n        this.firebaseDependencies = firebaseDependencies;\r\n        // A boolean flag to determine wether an app is using onBackgroundMessage or\r\n        // setBackgroundMessageHandler. onBackgroundMessage will receive a MessagePayload regardless of if\r\n        // a notification is displayed. Whereas, setBackgroundMessageHandler will swallow the\r\n        // MessagePayload if a NotificationPayload is included.\r\n        this.isOnBackgroundMessageUsed = null;\r\n        this.vapidKey = null;\r\n        this.bgMessageHandler = null;\r\n        self.addEventListener('push', function (e) {\r\n            e.waitUntil(_this.onPush(e));\r\n        });\r\n        self.addEventListener('pushsubscriptionchange', function (e) {\r\n            e.waitUntil(_this.onSubChange(e));\r\n        });\r\n        self.addEventListener('notificationclick', function (e) {\r\n            e.waitUntil(_this.onNotificationClick(e));\r\n        });\r\n    }\r\n    Object.defineProperty(SwController.prototype, \"app\", {\r\n        get: function () {\r\n            return this.firebaseDependencies.app;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @deprecated. Use onBackgroundMessage(nextOrObserver: NextFn<object> | Observer<object>):\r\n     * Unsubscribe instead.\r\n     *\r\n     * Calling setBackgroundMessageHandler will opt in to some specific behaviors.\r\n     *\r\n     * 1.) If a notification doesn't need to be shown due to a window already being visible, then push\r\n     * messages will be sent to the page. 2.) If a notification needs to be shown, and the message\r\n     * contains no notification data this method will be called and the promise it returns will be\r\n     * passed to event.waitUntil. If you do not set this callback then all push messages will let and\r\n     * the developer can handle them in a their own 'push' event callback\r\n     *\r\n     * @param callback The callback to be called when a push message is received and a notification\r\n     * must be shown. The callback will be given the data from the push message.\r\n     */\r\n    SwController.prototype.setBackgroundMessageHandler = function (callback) {\r\n        this.isOnBackgroundMessageUsed = false;\r\n        if (!callback || typeof callback !== 'function') {\r\n            throw ERROR_FACTORY.create(\"invalid-bg-handler\" /* INVALID_BG_HANDLER */);\r\n        }\r\n        this.bgMessageHandler = callback;\r\n    };\r\n    SwController.prototype.onBackgroundMessage = function (nextOrObserver) {\r\n        var _this = this;\r\n        this.isOnBackgroundMessageUsed = true;\r\n        this.bgMessageHandler = nextOrObserver;\r\n        return function () {\r\n            _this.bgMessageHandler = null;\r\n        };\r\n    };\r\n    // TODO: Remove getToken from SW Controller. Calling this from an old SW can cause all kinds of\r\n    // trouble.\r\n    SwController.prototype.getToken = function () {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var tokenDetails;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        if (!!this.vapidKey) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, dbGet(this.firebaseDependencies)];\r\n                    case 1:\r\n                        tokenDetails = _c.sent();\r\n                        this.vapidKey = (_b = (_a = tokenDetails === null || tokenDetails === void 0 ? void 0 : tokenDetails.subscriptionOptions) === null || _a === void 0 ? void 0 : _a.vapidKey) !== null && _b !== void 0 ? _b : DEFAULT_VAPID_KEY;\r\n                        _c.label = 2;\r\n                    case 2: return [2 /*return*/, getToken(this.firebaseDependencies, self.registration, this.vapidKey)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // TODO: Remove deleteToken from SW Controller. Calling this from an old SW can cause all kinds of\r\n    // trouble.\r\n    SwController.prototype.deleteToken = function () {\r\n        return deleteToken(this.firebaseDependencies, self.registration);\r\n    };\r\n    SwController.prototype.requestPermission = function () {\r\n        throw ERROR_FACTORY.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    // TODO: Remove this together with getToken from SW Controller.\r\n    SwController.prototype.usePublicVapidKey = function (vapidKey) {\r\n        if (this.vapidKey !== null) {\r\n            throw ERROR_FACTORY.create(\"use-vapid-key-after-get-token\" /* USE_VAPID_KEY_AFTER_GET_TOKEN */);\r\n        }\r\n        if (typeof vapidKey !== 'string' || vapidKey.length === 0) {\r\n            throw ERROR_FACTORY.create(\"invalid-vapid-key\" /* INVALID_VAPID_KEY */);\r\n        }\r\n        this.vapidKey = vapidKey;\r\n    };\r\n    SwController.prototype.useServiceWorker = function () {\r\n        throw ERROR_FACTORY.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    SwController.prototype.onMessage = function () {\r\n        throw ERROR_FACTORY.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    SwController.prototype.onTokenRefresh = function () {\r\n        throw ERROR_FACTORY.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    /**\r\n     * A handler for push events that shows notifications based on the content of the payload.\r\n     *\r\n     * The payload must be a JSON-encoded Object with a `notification` key. The value of the\r\n     * `notification` property will be used as the NotificationOptions object passed to\r\n     * showNotification. Additionally, the `title` property of the notification object will be used as\r\n     * the title.\r\n     *\r\n     * If there is no notification data in the payload then no notification will be shown.\r\n     */\r\n    SwController.prototype.onPush = function (event) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var internalPayload, clientList, isNotificationShown, payload;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        internalPayload = getMessagePayloadInternal(event);\r\n                        if (!internalPayload) {\r\n                            console.debug(TAG +\r\n                                'failed to get parsed MessagePayload from the PushEvent. Skip handling the push.');\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        if (hasVisibleClients(clientList)) {\r\n                            return [2 /*return*/, sendMessagePayloadInternalToWindows(clientList, internalPayload)];\r\n                        }\r\n                        isNotificationShown = false;\r\n                        if (!!!internalPayload.notification) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, showNotification(wrapInternalPayload(internalPayload))];\r\n                    case 2:\r\n                        _a.sent();\r\n                        isNotificationShown = true;\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        // MessagePayload is only passed to `onBackgroundMessage`. Skip passing MessagePayload for\r\n                        // the legacy `setBackgroundMessageHandler` to preserve the SDK behaviors.\r\n                        if (isNotificationShown === true &&\r\n                            this.isOnBackgroundMessageUsed === false) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        if (!!this.bgMessageHandler) {\r\n                            payload = externalizePayload(internalPayload);\r\n                            if (typeof this.bgMessageHandler === 'function') {\r\n                                this.bgMessageHandler(payload);\r\n                            }\r\n                            else {\r\n                                this.bgMessageHandler.next(payload);\r\n                            }\r\n                        }\r\n                        // wait briefly to allow onBackgroundMessage to complete\r\n                        return [4 /*yield*/, sleep(BACKGROUND_HANDLE_EXECUTION_TIME_LIMIT_MS)];\r\n                    case 4:\r\n                        // wait briefly to allow onBackgroundMessage to complete\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SwController.prototype.onSubChange = function (event) {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var newSubscription, tokenDetails;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        newSubscription = event.newSubscription;\r\n                        if (!!newSubscription) return [3 /*break*/, 2];\r\n                        // Subscription revoked, delete token\r\n                        return [4 /*yield*/, deleteToken(this.firebaseDependencies, self.registration)];\r\n                    case 1:\r\n                        // Subscription revoked, delete token\r\n                        _c.sent();\r\n                        return [2 /*return*/];\r\n                    case 2: return [4 /*yield*/, dbGet(this.firebaseDependencies)];\r\n                    case 3:\r\n                        tokenDetails = _c.sent();\r\n                        return [4 /*yield*/, deleteToken(this.firebaseDependencies, self.registration)];\r\n                    case 4:\r\n                        _c.sent();\r\n                        return [4 /*yield*/, getToken(this.firebaseDependencies, self.registration, (_b = (_a = tokenDetails === null || tokenDetails === void 0 ? void 0 : tokenDetails.subscriptionOptions) === null || _a === void 0 ? void 0 : _a.vapidKey) !== null && _b !== void 0 ? _b : DEFAULT_VAPID_KEY)];\r\n                    case 5:\r\n                        _c.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SwController.prototype.onNotificationClick = function (event) {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var internalPayload, link, url, originUrl, client;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        internalPayload = (_b = (_a = event.notification) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[FCM_MSG];\r\n                        if (!internalPayload) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        else if (event.action) {\r\n                            // User clicked on an action button. This will allow developers to act on action button clicks\r\n                            // by using a custom onNotificationClick listener that they define.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        // Prevent other listeners from receiving the event\r\n                        event.stopImmediatePropagation();\r\n                        event.notification.close();\r\n                        link = getLink(internalPayload);\r\n                        if (!link) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        url = new URL(link, self.location.href);\r\n                        originUrl = new URL(self.location.origin);\r\n                        if (url.host !== originUrl.host) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, getWindowClient(url)];\r\n                    case 1:\r\n                        client = _c.sent();\r\n                        if (!!client) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, self.clients.openWindow(link)];\r\n                    case 2:\r\n                        client = _c.sent();\r\n                        // Wait three seconds for the client to initialize and set up the message handler so that it\r\n                        // can receive the message.\r\n                        return [4 /*yield*/, sleep(FOREGROUND_HANDLE_PREPARATION_TIME_MS)];\r\n                    case 3:\r\n                        // Wait three seconds for the client to initialize and set up the message handler so that it\r\n                        // can receive the message.\r\n                        _c.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 4: return [4 /*yield*/, client.focus()];\r\n                    case 5:\r\n                        client = _c.sent();\r\n                        _c.label = 6;\r\n                    case 6:\r\n                        if (!client) {\r\n                            // Window Client will not be returned if it's for a third party origin.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        internalPayload.messageType = MessageType.NOTIFICATION_CLICKED;\r\n                        internalPayload.isFirebaseMessaging = true;\r\n                        return [2 /*return*/, client.postMessage(internalPayload)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SwController;\r\n}());\r\nfunction wrapInternalPayload(internalPayload) {\r\n    var _a;\r\n    var wrappedInternalPayload = __assign({}, internalPayload.notification);\r\n    // Put the message payload under FCM_MSG name so we can identify the notification as being an FCM\r\n    // notification vs a notification from somewhere else (i.e. normal web push or developer generated\r\n    // notification).\r\n    wrappedInternalPayload.data = (_a = {},\r\n        _a[FCM_MSG] = internalPayload,\r\n        _a);\r\n    return wrappedInternalPayload;\r\n}\r\nfunction getMessagePayloadInternal(_a) {\r\n    var data = _a.data;\r\n    if (!data) {\r\n        return null;\r\n    }\r\n    try {\r\n        return data.json();\r\n    }\r\n    catch (err) {\r\n        // Not JSON so not an FCM message.\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * @param url The URL to look for when focusing a client.\r\n * @return Returns an existing window client or a newly opened WindowClient.\r\n */\r\nfunction getWindowClient(url) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var clientList, clientList_1, clientList_1_1, client, clientUrl;\r\n        var e_1, _a;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, getClientList()];\r\n                case 1:\r\n                    clientList = _b.sent();\r\n                    try {\r\n                        for (clientList_1 = __values(clientList), clientList_1_1 = clientList_1.next(); !clientList_1_1.done; clientList_1_1 = clientList_1.next()) {\r\n                            client = clientList_1_1.value;\r\n                            clientUrl = new URL(client.url, self.location.href);\r\n                            if (url.host === clientUrl.host) {\r\n                                return [2 /*return*/, client];\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                    finally {\r\n                        try {\r\n                            if (clientList_1_1 && !clientList_1_1.done && (_a = clientList_1.return)) _a.call(clientList_1);\r\n                        }\r\n                        finally { if (e_1) throw e_1.error; }\r\n                    }\r\n                    return [2 /*return*/, null];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * @returns If there is currently a visible WindowClient, this method will resolve to true,\r\n * otherwise false.\r\n */\r\nfunction hasVisibleClients(clientList) {\r\n    return clientList.some(function (client) {\r\n        return client.visibilityState === 'visible' &&\r\n            // Ignore chrome-extension clients as that matches the background pages of extensions, which\r\n            // are always considered visible for some reason.\r\n            !client.url.startsWith('chrome-extension://');\r\n    });\r\n}\r\nfunction sendMessagePayloadInternalToWindows(clientList, internalPayload) {\r\n    var e_2, _a;\r\n    internalPayload.isFirebaseMessaging = true;\r\n    internalPayload.messageType = MessageType.PUSH_RECEIVED;\r\n    try {\r\n        for (var clientList_2 = __values(clientList), clientList_2_1 = clientList_2.next(); !clientList_2_1.done; clientList_2_1 = clientList_2.next()) {\r\n            var client = clientList_2_1.value;\r\n            client.postMessage(internalPayload);\r\n        }\r\n    }\r\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n    finally {\r\n        try {\r\n            if (clientList_2_1 && !clientList_2_1.done && (_a = clientList_2.return)) _a.call(clientList_2);\r\n        }\r\n        finally { if (e_2) throw e_2.error; }\r\n    }\r\n}\r\nfunction getClientList() {\r\n    return self.clients.matchAll({\r\n        type: 'window',\r\n        includeUncontrolled: true\r\n        // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\r\n    });\r\n}\r\nfunction showNotification(notificationPayloadInternal) {\r\n    var _a;\r\n    // Note: Firefox does not support the maxActions property.\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/notification/maxActions\r\n    var actions = notificationPayloadInternal.actions;\r\n    var maxActions = Notification.maxActions;\r\n    if (actions && maxActions && actions.length > maxActions) {\r\n        console.warn(\"This browser only supports \" + maxActions + \" actions. The remaining actions will not be displayed.\");\r\n    }\r\n    return self.registration.showNotification((_a = \r\n    /* title= */ notificationPayloadInternal.title) !== null && _a !== void 0 ? _a : '', notificationPayloadInternal);\r\n}\r\nfunction getLink(payload) {\r\n    var _a, _b, _c;\r\n    // eslint-disable-next-line camelcase\r\n    var link = (_b = (_a = payload.fcmOptions) === null || _a === void 0 ? void 0 : _a.link) !== null && _b !== void 0 ? _b : (_c = payload.notification) === null || _c === void 0 ? void 0 : _c.click_action;\r\n    if (link) {\r\n        return link;\r\n    }\r\n    if (isConsoleMessage(payload.data)) {\r\n        // Notification created in the Firebase Console. Redirect to origin.\r\n        return self.location.origin;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WindowController = /** @class */ (function () {\r\n    function WindowController(firebaseDependencies) {\r\n        var _this = this;\r\n        this.firebaseDependencies = firebaseDependencies;\r\n        this.vapidKey = null;\r\n        this.onMessageCallback = null;\r\n        navigator.serviceWorker.addEventListener('message', function (e) {\r\n            return _this.messageEventListener(e);\r\n        });\r\n    }\r\n    Object.defineProperty(WindowController.prototype, \"app\", {\r\n        get: function () {\r\n            return this.firebaseDependencies.app;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    WindowController.prototype.messageEventListener = function (event) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var internalPayload, dataPayload;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        internalPayload = event.data;\r\n                        if (!internalPayload.isFirebaseMessaging) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        // onMessageCallback is either a function or observer/subscriber.\r\n                        // TODO: in the modularization release, have onMessage handle type MessagePayload as supposed to\r\n                        // the legacy payload where some fields are in snake cases.\r\n                        if (this.onMessageCallback &&\r\n                            internalPayload.messageType === MessageType.PUSH_RECEIVED) {\r\n                            if (typeof this.onMessageCallback === 'function') {\r\n                                this.onMessageCallback(stripInternalFields(Object.assign({}, internalPayload)));\r\n                            }\r\n                            else {\r\n                                this.onMessageCallback.next(Object.assign({}, internalPayload));\r\n                            }\r\n                        }\r\n                        dataPayload = internalPayload.data;\r\n                        if (!(isConsoleMessage(dataPayload) &&\r\n                            dataPayload[CONSOLE_CAMPAIGN_ANALYTICS_ENABLED] === '1')) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.logEvent(internalPayload.messageType, dataPayload)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WindowController.prototype.getVapidKey = function () {\r\n        return this.vapidKey;\r\n    };\r\n    WindowController.prototype.getSwReg = function () {\r\n        return this.swRegistration;\r\n    };\r\n    WindowController.prototype.getToken = function (options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!(Notification.permission === 'default')) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, Notification.requestPermission()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        if (Notification.permission !== 'granted') {\r\n                            throw ERROR_FACTORY.create(\"permission-blocked\" /* PERMISSION_BLOCKED */);\r\n                        }\r\n                        return [4 /*yield*/, this.updateVapidKey(options === null || options === void 0 ? void 0 : options.vapidKey)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.updateSwReg(options === null || options === void 0 ? void 0 : options.serviceWorkerRegistration)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [2 /*return*/, getToken(this.firebaseDependencies, this.swRegistration, this.vapidKey)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WindowController.prototype.updateVapidKey = function (vapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!!vapidKey) {\r\n                    this.vapidKey = vapidKey;\r\n                }\r\n                else if (!this.vapidKey) {\r\n                    this.vapidKey = DEFAULT_VAPID_KEY;\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    WindowController.prototype.updateSwReg = function (swRegistration) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!(!swRegistration && !this.swRegistration)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.registerDefaultSw()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        if (!swRegistration && !!this.swRegistration) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        if (!(swRegistration instanceof ServiceWorkerRegistration)) {\r\n                            throw ERROR_FACTORY.create(\"invalid-sw-registration\" /* INVALID_SW_REGISTRATION */);\r\n                        }\r\n                        this.swRegistration = swRegistration;\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WindowController.prototype.registerDefaultSw = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, e_1;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _b.trys.push([0, 2, , 3]);\r\n                        _a = this;\r\n                        return [4 /*yield*/, navigator.serviceWorker.register(DEFAULT_SW_PATH, {\r\n                                scope: DEFAULT_SW_SCOPE\r\n                            })];\r\n                    case 1:\r\n                        _a.swRegistration = _b.sent();\r\n                        // The timing when browser updates sw when sw has an update is unreliable by my experiment. It\r\n                        // leads to version conflict when the SDK upgrades to a newer version in the main page, but sw\r\n                        // is stuck with the old version. For example,\r\n                        // https://github.com/firebase/firebase-js-sdk/issues/2590 The following line reliably updates\r\n                        // sw if there was an update.\r\n                        this.swRegistration.update().catch(function () {\r\n                            /* it is non blocking and we don't care if it failed */\r\n                        });\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        e_1 = _b.sent();\r\n                        throw ERROR_FACTORY.create(\"failed-service-worker-registration\" /* FAILED_DEFAULT_REGISTRATION */, {\r\n                            browserErrorMessage: e_1.message\r\n                        });\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WindowController.prototype.deleteToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!!this.swRegistration) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.registerDefaultSw()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/, deleteToken(this.firebaseDependencies, this.swRegistration)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Request permission if it is not currently granted.\r\n     *\r\n     * @return Resolves if the permission was granted, rejects otherwise.\r\n     *\r\n     * @deprecated Use Notification.requestPermission() instead.\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/Notification/requestPermission\r\n     */\r\n    WindowController.prototype.requestPermission = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var permissionResult;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (Notification.permission === 'granted') {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, Notification.requestPermission()];\r\n                    case 1:\r\n                        permissionResult = _a.sent();\r\n                        if (permissionResult === 'granted') {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        else if (permissionResult === 'denied') {\r\n                            throw ERROR_FACTORY.create(\"permission-blocked\" /* PERMISSION_BLOCKED */);\r\n                        }\r\n                        else {\r\n                            throw ERROR_FACTORY.create(\"permission-default\" /* PERMISSION_DEFAULT */);\r\n                        }\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @deprecated. Use getToken(options?: {vapidKey?: string; serviceWorkerRegistration?:\r\n     * ServiceWorkerRegistration;}): Promise<string> instead.\r\n     */\r\n    WindowController.prototype.usePublicVapidKey = function (vapidKey) {\r\n        if (this.vapidKey !== null) {\r\n            throw ERROR_FACTORY.create(\"use-vapid-key-after-get-token\" /* USE_VAPID_KEY_AFTER_GET_TOKEN */);\r\n        }\r\n        if (typeof vapidKey !== 'string' || vapidKey.length === 0) {\r\n            throw ERROR_FACTORY.create(\"invalid-vapid-key\" /* INVALID_VAPID_KEY */);\r\n        }\r\n        this.vapidKey = vapidKey;\r\n    };\r\n    /**\r\n     * @deprecated. Use getToken(options?: {vapidKey?: string; serviceWorkerRegistration?:\r\n     * ServiceWorkerRegistration;}): Promise<string> instead.\r\n     */\r\n    WindowController.prototype.useServiceWorker = function (swRegistration) {\r\n        if (!(swRegistration instanceof ServiceWorkerRegistration)) {\r\n            throw ERROR_FACTORY.create(\"invalid-sw-registration\" /* INVALID_SW_REGISTRATION */);\r\n        }\r\n        if (this.swRegistration) {\r\n            throw ERROR_FACTORY.create(\"use-sw-after-get-token\" /* USE_SW_AFTER_GET_TOKEN */);\r\n        }\r\n        this.swRegistration = swRegistration;\r\n    };\r\n    /**\r\n     * @param nextOrObserver An observer object or a function triggered on message.\r\n     *\r\n     * @return The unsubscribe function for the observer.\r\n     */\r\n    WindowController.prototype.onMessage = function (nextOrObserver) {\r\n        var _this = this;\r\n        this.onMessageCallback = nextOrObserver;\r\n        return function () {\r\n            _this.onMessageCallback = null;\r\n        };\r\n    };\r\n    WindowController.prototype.setBackgroundMessageHandler = function () {\r\n        throw ERROR_FACTORY.create(\"only-available-in-sw\" /* AVAILABLE_IN_SW */);\r\n    };\r\n    WindowController.prototype.onBackgroundMessage = function () {\r\n        throw ERROR_FACTORY.create(\"only-available-in-sw\" /* AVAILABLE_IN_SW */);\r\n    };\r\n    /**\r\n     * @deprecated No-op. It was initially designed with token rotation requests from server in mind.\r\n     * However, the plan to implement such feature was abandoned.\r\n     */\r\n    WindowController.prototype.onTokenRefresh = function () {\r\n        return function () { };\r\n    };\r\n    WindowController.prototype.logEvent = function (messageType, data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var eventType, analytics;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        eventType = getEventType(messageType);\r\n                        return [4 /*yield*/, this.firebaseDependencies.analyticsProvider.get()];\r\n                    case 1:\r\n                        analytics = _a.sent();\r\n                        analytics.logEvent(eventType, {\r\n                            /* eslint-disable camelcase */\r\n                            message_id: data[CONSOLE_CAMPAIGN_ID],\r\n                            message_name: data[CONSOLE_CAMPAIGN_NAME],\r\n                            message_time: data[CONSOLE_CAMPAIGN_TIME],\r\n                            message_device_time: Math.floor(Date.now() / 1000)\r\n                            /* eslint-enable camelcase */\r\n                        });\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return WindowController;\r\n}());\r\nfunction getEventType(messageType) {\r\n    switch (messageType) {\r\n        case MessageType.NOTIFICATION_CLICKED:\r\n            return 'notification_open';\r\n        case MessageType.PUSH_RECEIVED:\r\n            return 'notification_foreground';\r\n        default:\r\n            throw new Error();\r\n    }\r\n}\r\nfunction stripInternalFields(internalPayload) {\r\n    delete internalPayload.messageType;\r\n    delete internalPayload.isFirebaseMessaging;\r\n    return internalPayload;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction extractAppConfig(app) {\r\n    var e_1, _a;\r\n    if (!app || !app.options) {\r\n        throw getMissingValueError('App Configuration Object');\r\n    }\r\n    if (!app.name) {\r\n        throw getMissingValueError('App Name');\r\n    }\r\n    // Required app config keys\r\n    var configKeys = [\r\n        'projectId',\r\n        'apiKey',\r\n        'appId',\r\n        'messagingSenderId'\r\n    ];\r\n    var options = app.options;\r\n    try {\r\n        for (var configKeys_1 = __values(configKeys), configKeys_1_1 = configKeys_1.next(); !configKeys_1_1.done; configKeys_1_1 = configKeys_1.next()) {\r\n            var keyName = configKeys_1_1.value;\r\n            if (!options[keyName]) {\r\n                throw getMissingValueError(keyName);\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (configKeys_1_1 && !configKeys_1_1.done && (_a = configKeys_1.return)) _a.call(configKeys_1);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return {\r\n        appName: app.name,\r\n        projectId: options.projectId,\r\n        apiKey: options.apiKey,\r\n        appId: options.appId,\r\n        senderId: options.messagingSenderId\r\n    };\r\n}\r\nfunction getMissingValueError(valueName) {\r\n    return ERROR_FACTORY.create(\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */, {\r\n        valueName: valueName\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MESSAGING_NAME = 'messaging';\r\nfunction factoryMethod(container) {\r\n    // Dependencies.\r\n    var app = container.getProvider('app').getImmediate();\r\n    var appConfig = extractAppConfig(app);\r\n    var installations = container.getProvider('installations').getImmediate();\r\n    var analyticsProvider = container.getProvider('analytics-internal');\r\n    var firebaseDependencies = {\r\n        app: app,\r\n        appConfig: appConfig,\r\n        installations: installations,\r\n        analyticsProvider: analyticsProvider\r\n    };\r\n    if (!isSupported()) {\r\n        throw ERROR_FACTORY.create(\"unsupported-browser\" /* UNSUPPORTED_BROWSER */);\r\n    }\r\n    if (self && 'ServiceWorkerGlobalScope' in self) {\r\n        // Running in ServiceWorker context\r\n        return new SwController(firebaseDependencies);\r\n    }\r\n    else {\r\n        // Assume we are in the window context.\r\n        return new WindowController(firebaseDependencies);\r\n    }\r\n}\r\nvar NAMESPACE_EXPORTS = {\r\n    isSupported: isSupported\r\n};\r\nfirebase.INTERNAL.registerComponent(new Component(MESSAGING_NAME, factoryMethod, \"PUBLIC\" /* PUBLIC */).setServiceProps(NAMESPACE_EXPORTS));\r\nfunction isSupported() {\r\n    if (self && 'ServiceWorkerGlobalScope' in self) {\r\n        // Running in ServiceWorker context\r\n        return isSWControllerSupported();\r\n    }\r\n    else {\r\n        // Assume we are in the window context.\r\n        return isWindowControllerSupported();\r\n    }\r\n}\r\n/**\r\n * Checks to see if the required APIs exist.\r\n */\r\nfunction isWindowControllerSupported() {\r\n    return ('indexedDB' in window &&\r\n        indexedDB !== null &&\r\n        navigator.cookieEnabled &&\r\n        'serviceWorker' in navigator &&\r\n        'PushManager' in window &&\r\n        'Notification' in window &&\r\n        'fetch' in window &&\r\n        ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\r\n        PushSubscription.prototype.hasOwnProperty('getKey'));\r\n}\r\n/**\r\n * Checks to see if the required APIs exist within SW Context.\r\n */\r\nfunction isSWControllerSupported() {\r\n    return ('indexedDB' in self &&\r\n        indexedDB !== null &&\r\n        'PushManager' in self &&\r\n        'Notification' in self &&\r\n        ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\r\n        PushSubscription.prototype.hasOwnProperty('getKey'));\r\n}\n//# sourceMappingURL=index.esm.js.map\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.idb = {}));\n}(this, function (exports) { 'use strict';\n\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  function openDb(name, version, upgradeCallback) {\n    var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n    var request = p.request;\n\n    if (request) {\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n    }\n\n    return p.then(function(db) {\n      return new DB(db);\n    });\n  }\n\n  function deleteDb(name) {\n    return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n  }\n\n  exports.openDb = openDb;\n  exports.deleteDb = deleteDb;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","import \"@firebase/logger\";\n\nimport \"@firebase/util\";\n\nimport \"@firebase/webchannel-wrapper\";\n\nimport \"tslib\";\n\nimport { b as e, u as r, Q as o } from \"./prebuilt-7840cb8c-52081c7f.js\";\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Prototype patches bundle loading to Firestore.\n */ function t(o) {\n    o.prototype.loadBundle = e, o.prototype.namedQuery = r;\n}\n\nt(o);\n\nexport { t as registerBundle };\n//# sourceMappingURL=bundle.js.map\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nvar h, goog = goog || {}, k = commonjsGlobal || self;\r\nfunction aa() { }\r\nfunction ba(a) { var b = typeof a; b = \"object\" != b ? b : a ? Array.isArray(a) ? \"array\" : b : \"null\"; return \"array\" == b || \"object\" == b && \"number\" == typeof a.length; }\r\nfunction n(a) { var b = typeof a; return \"object\" == b && null != a || \"function\" == b; }\r\nfunction ca(a) { return Object.prototype.hasOwnProperty.call(a, da) && a[da] || (a[da] = ++ea); }\r\nvar da = \"closure_uid_\" + (1E9 * Math.random() >>> 0), ea = 0;\r\nfunction fa(a, b, c) { return a.call.apply(a.bind, arguments); }\r\nfunction ha(a, b, c) { if (!a)\r\n    throw Error(); if (2 < arguments.length) {\r\n    var d = Array.prototype.slice.call(arguments, 2);\r\n    return function () { var e = Array.prototype.slice.call(arguments); Array.prototype.unshift.apply(e, d); return a.apply(b, e); };\r\n} return function () { return a.apply(b, arguments); }; }\r\nfunction p(a, b, c) { Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf(\"native code\") ? p = fa : p = ha; return p.apply(null, arguments); }\r\nfunction ja(a, b) { var c = Array.prototype.slice.call(arguments, 1); return function () { var d = c.slice(); d.push.apply(d, arguments); return a.apply(this, d); }; }\r\nfunction q() { return Date.now(); }\r\nfunction r(a, b) { function c() { } c.prototype = b.prototype; a.X = b.prototype; a.prototype = new c; a.prototype.constructor = a; a.Kb = function (d, e, f) { for (var g = Array(arguments.length - 2), m = 2; m < arguments.length; m++)\r\n    g[m - 2] = arguments[m]; return b.prototype[e].apply(d, g); }; }\r\nfunction t() { this.j = this.j; this.i = this.i; }\r\nvar ka = 0;\r\nt.prototype.j = !1;\r\nt.prototype.ja = function () { if (!this.j && (this.j = !0, this.G(), 0 != ka)) {\r\n    var a = ca(this);\r\n} };\r\nt.prototype.G = function () { if (this.i)\r\n    for (; this.i.length;)\r\n        this.i.shift()(); };\r\nvar ma = Array.prototype.indexOf ? function (a, b) { return Array.prototype.indexOf.call(a, b, void 0); } : function (a, b) { if (\"string\" === typeof a)\r\n    return \"string\" !== typeof b || 1 != b.length ? -1 : a.indexOf(b, 0); for (var c = 0; c < a.length; c++)\r\n    if (c in a && a[c] === b)\r\n        return c; return -1; }, na = Array.prototype.forEach ? function (a, b, c) { Array.prototype.forEach.call(a, b, c); } : function (a, b, c) { for (var d = a.length, e = \"string\" === typeof a ? a.split(\"\") : a, f = 0; f < d; f++)\r\n    f in e && b.call(c, e[f], f, a); };\r\nfunction oa(a) { a: {\r\n    var b = pa;\r\n    for (var c = a.length, d = \"string\" === typeof a ? a.split(\"\") : a, e = 0; e < c; e++)\r\n        if (e in d && b.call(void 0, d[e], e, a)) {\r\n            b = e;\r\n            break a;\r\n        }\r\n    b = -1;\r\n} return 0 > b ? null : \"string\" === typeof a ? a.charAt(b) : a[b]; }\r\nfunction qa(a) { return Array.prototype.concat.apply([], arguments); }\r\nfunction ra(a) { var b = a.length; if (0 < b) {\r\n    for (var c = Array(b), d = 0; d < b; d++)\r\n        c[d] = a[d];\r\n    return c;\r\n} return []; }\r\nfunction sa(a) { return /^[\\s\\xa0]*$/.test(a); }\r\nvar ta = String.prototype.trim ? function (a) { return a.trim(); } : function (a) { return /^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(a)[1]; };\r\nfunction v(a, b) { return -1 != a.indexOf(b); }\r\nfunction ua(a, b) { return a < b ? -1 : a > b ? 1 : 0; }\r\nvar w;\r\na: {\r\n    var va = k.navigator;\r\n    if (va) {\r\n        var wa = va.userAgent;\r\n        if (wa) {\r\n            w = wa;\r\n            break a;\r\n        }\r\n    }\r\n    w = \"\";\r\n}\r\nfunction za(a, b, c) { for (var d in a)\r\n    b.call(c, a[d], d, a); }\r\nfunction Aa(a) { var b = {}; for (var c in a)\r\n    b[c] = a[c]; return b; }\r\nvar Ba = \"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\r\nfunction Ca(a, b) { var c, d; for (var e = 1; e < arguments.length; e++) {\r\n    d = arguments[e];\r\n    for (c in d)\r\n        a[c] = d[c];\r\n    for (var f = 0; f < Ba.length; f++)\r\n        c = Ba[f], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);\r\n} }\r\nfunction Da(a) { Da[\" \"](a); return a; }\r\nDa[\" \"] = aa;\r\nfunction Ea(a, b) { var c = Fa; return Object.prototype.hasOwnProperty.call(c, a) ? c[a] : c[a] = b(a); }\r\nvar Ga = v(w, \"Opera\"), x = v(w, \"Trident\") || v(w, \"MSIE\"), Ha = v(w, \"Edge\"), Ia = Ha || x, Ja = v(w, \"Gecko\") && !(v(w.toLowerCase(), \"webkit\") && !v(w, \"Edge\")) && !(v(w, \"Trident\") || v(w, \"MSIE\")) && !v(w, \"Edge\"), Ka = v(w.toLowerCase(), \"webkit\") && !v(w, \"Edge\");\r\nfunction La() { var a = k.document; return a ? a.documentMode : void 0; }\r\nvar Ma;\r\na: {\r\n    var Na = \"\", Oa = function () { var a = w; if (Ja)\r\n        return /rv:([^\\);]+)(\\)|;)/.exec(a); if (Ha)\r\n        return /Edge\\/([\\d\\.]+)/.exec(a); if (x)\r\n        return /\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(a); if (Ka)\r\n        return /WebKit\\/(\\S+)/.exec(a); if (Ga)\r\n        return /(?:Version)[ \\/]?(\\S+)/.exec(a); }();\r\n    Oa && (Na = Oa ? Oa[1] : \"\");\r\n    if (x) {\r\n        var Pa = La();\r\n        if (null != Pa && Pa > parseFloat(Na)) {\r\n            Ma = String(Pa);\r\n            break a;\r\n        }\r\n    }\r\n    Ma = Na;\r\n}\r\nvar Fa = {};\r\nfunction Qa(a) { return Ea(a, function () { {\r\n    var b = 0;\r\n    var e = ta(String(Ma)).split(\".\"), f = ta(String(a)).split(\".\"), g = Math.max(e.length, f.length);\r\n    for (var m = 0; 0 == b && m < g; m++) {\r\n        var c = e[m] || \"\", d = f[m] || \"\";\r\n        do {\r\n            c = /(\\d*)(\\D*)(.*)/.exec(c) || [\"\", \"\", \"\", \"\"];\r\n            d = /(\\d*)(\\D*)(.*)/.exec(d) || [\"\", \"\", \"\", \"\"];\r\n            if (0 == c[0].length && 0 == d[0].length)\r\n                break;\r\n            b = ua(0 == c[1].length ? 0 : parseInt(c[1], 10), 0 == d[1].length ? 0 : parseInt(d[1], 10)) || ua(0 == c[2].length, 0 == d[2].length) || ua(c[2], d[2]);\r\n            c = c[3];\r\n            d = d[3];\r\n        } while (0 == b);\r\n    }\r\n} return 0 <= b; }); }\r\nvar Ra;\r\nif (k.document && x) {\r\n    var Sa = La();\r\n    Ra = Sa ? Sa : parseInt(Ma, 10) || void 0;\r\n}\r\nelse\r\n    Ra = void 0;\r\nvar Ta = Ra;\r\nvar Ua = !x || 9 <= Number(Ta), Va = x && !Qa(\"9\"), Wa = function () { if (!k.addEventListener || !Object.defineProperty)\r\n    return !1; var a = !1, b = Object.defineProperty({}, \"passive\", { get: function () { a = !0; } }); try {\r\n    k.addEventListener(\"test\", aa, b), k.removeEventListener(\"test\", aa, b);\r\n}\r\ncatch (c) { } return a; }();\r\nfunction y(a, b) { this.type = a; this.a = this.target = b; this.defaultPrevented = !1; }\r\ny.prototype.b = function () { this.defaultPrevented = !0; };\r\nfunction z(a, b) {\r\n    y.call(this, a ? a.type : \"\");\r\n    this.relatedTarget = this.a = this.target = null;\r\n    this.button = this.screenY = this.screenX = this.clientY = this.clientX = 0;\r\n    this.key = \"\";\r\n    this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1;\r\n    this.pointerId = 0;\r\n    this.pointerType = \"\";\r\n    this.c = null;\r\n    if (a) {\r\n        var c = this.type = a.type, d = a.changedTouches && a.changedTouches.length ? a.changedTouches[0] : null;\r\n        this.target = a.target || a.srcElement;\r\n        this.a = b;\r\n        if (b = a.relatedTarget) {\r\n            if (Ja) {\r\n                a: {\r\n                    try {\r\n                        Da(b.nodeName);\r\n                        var e = !0;\r\n                        break a;\r\n                    }\r\n                    catch (f) { }\r\n                    e = !1;\r\n                }\r\n                e || (b = null);\r\n            }\r\n        }\r\n        else\r\n            \"mouseover\" ==\r\n                c ? b = a.fromElement : \"mouseout\" == c && (b = a.toElement);\r\n        this.relatedTarget = b;\r\n        d ? (this.clientX = void 0 !== d.clientX ? d.clientX : d.pageX, this.clientY = void 0 !== d.clientY ? d.clientY : d.pageY, this.screenX = d.screenX || 0, this.screenY = d.screenY || 0) : (this.clientX = void 0 !== a.clientX ? a.clientX : a.pageX, this.clientY = void 0 !== a.clientY ? a.clientY : a.pageY, this.screenX = a.screenX || 0, this.screenY = a.screenY || 0);\r\n        this.button = a.button;\r\n        this.key = a.key || \"\";\r\n        this.ctrlKey = a.ctrlKey;\r\n        this.altKey = a.altKey;\r\n        this.shiftKey = a.shiftKey;\r\n        this.metaKey =\r\n            a.metaKey;\r\n        this.pointerId = a.pointerId || 0;\r\n        this.pointerType = \"string\" === typeof a.pointerType ? a.pointerType : Xa[a.pointerType] || \"\";\r\n        this.c = a;\r\n        a.defaultPrevented && this.b();\r\n    }\r\n}\r\nr(z, y);\r\nvar Xa = { 2: \"touch\", 3: \"pen\", 4: \"mouse\" };\r\nz.prototype.b = function () { z.X.b.call(this); var a = this.c; if (a.preventDefault)\r\n    a.preventDefault();\r\nelse if (a.returnValue = !1, Va)\r\n    try {\r\n        if (a.ctrlKey || 112 <= a.keyCode && 123 >= a.keyCode)\r\n            a.keyCode = -1;\r\n    }\r\n    catch (b) { } };\r\nvar A = \"closure_listenable_\" + (1E6 * Math.random() | 0), Ya = 0;\r\nfunction Za(a, b, c, d, e) { this.listener = a; this.proxy = null; this.src = b; this.type = c; this.capture = !!d; this.ca = e; this.key = ++Ya; this.Y = this.Z = !1; }\r\nfunction $a(a) { a.Y = !0; a.listener = null; a.proxy = null; a.src = null; a.ca = null; }\r\nfunction ab(a) { this.src = a; this.a = {}; this.b = 0; }\r\nab.prototype.add = function (a, b, c, d, e) { var f = a.toString(); a = this.a[f]; a || (a = this.a[f] = [], this.b++); var g = bb(a, b, d, e); -1 < g ? (b = a[g], c || (b.Z = !1)) : (b = new Za(b, this.src, f, !!d, e), b.Z = c, a.push(b)); return b; };\r\nfunction cb(a, b) { var c = b.type; if (c in a.a) {\r\n    var d = a.a[c], e = ma(d, b), f;\r\n    (f = 0 <= e) && Array.prototype.splice.call(d, e, 1);\r\n    f && ($a(b), 0 == a.a[c].length && (delete a.a[c], a.b--));\r\n} }\r\nfunction bb(a, b, c, d) { for (var e = 0; e < a.length; ++e) {\r\n    var f = a[e];\r\n    if (!f.Y && f.listener == b && f.capture == !!c && f.ca == d)\r\n        return e;\r\n} return -1; }\r\nvar db = \"closure_lm_\" + (1E6 * Math.random() | 0), eb = {};\r\nfunction gb(a, b, c, d, e) { if (d && d.once)\r\n    return hb(a, b, c, d, e); if (Array.isArray(b)) {\r\n    for (var f = 0; f < b.length; f++)\r\n        gb(a, b[f], c, d, e);\r\n    return null;\r\n} c = ib(c); return a && a[A] ? a.va(b, c, n(d) ? !!d.capture : !!d, e) : jb(a, b, c, !1, d, e); }\r\nfunction jb(a, b, c, d, e, f) {\r\n    if (!b)\r\n        throw Error(\"Invalid event type\");\r\n    var g = n(e) ? !!e.capture : !!e;\r\n    if (g && !Ua)\r\n        return null;\r\n    var m = kb(a);\r\n    m || (a[db] = m = new ab(a));\r\n    c = m.add(b, c, d, g, f);\r\n    if (c.proxy)\r\n        return c;\r\n    d = lb();\r\n    c.proxy = d;\r\n    d.src = a;\r\n    d.listener = c;\r\n    if (a.addEventListener)\r\n        Wa || (e = g), void 0 === e && (e = !1), a.addEventListener(b.toString(), d, e);\r\n    else if (a.attachEvent)\r\n        a.attachEvent(mb(b.toString()), d);\r\n    else if (a.addListener && a.removeListener)\r\n        a.addListener(d);\r\n    else\r\n        throw Error(\"addEventListener and attachEvent are unavailable.\");\r\n    return c;\r\n}\r\nfunction lb() { var a = nb, b = Ua ? function (c) { return a.call(b.src, b.listener, c); } : function (c) { c = a.call(b.src, b.listener, c); if (!c)\r\n    return c; }; return b; }\r\nfunction hb(a, b, c, d, e) { if (Array.isArray(b)) {\r\n    for (var f = 0; f < b.length; f++)\r\n        hb(a, b[f], c, d, e);\r\n    return null;\r\n} c = ib(c); return a && a[A] ? a.wa(b, c, n(d) ? !!d.capture : !!d, e) : jb(a, b, c, !0, d, e); }\r\nfunction ob(a, b, c, d, e) { if (Array.isArray(b))\r\n    for (var f = 0; f < b.length; f++)\r\n        ob(a, b[f], c, d, e);\r\nelse\r\n    (d = n(d) ? !!d.capture : !!d, c = ib(c), a && a[A]) ? (a = a.c, b = String(b).toString(), b in a.a && (f = a.a[b], c = bb(f, c, d, e), -1 < c && ($a(f[c]), Array.prototype.splice.call(f, c, 1), 0 == f.length && (delete a.a[b], a.b--)))) : a && (a = kb(a)) && (b = a.a[b.toString()], a = -1, b && (a = bb(b, c, d, e)), (c = -1 < a ? b[a] : null) && pb(c)); }\r\nfunction pb(a) { if (\"number\" !== typeof a && a && !a.Y) {\r\n    var b = a.src;\r\n    if (b && b[A])\r\n        cb(b.c, a);\r\n    else {\r\n        var c = a.type, d = a.proxy;\r\n        b.removeEventListener ? b.removeEventListener(c, d, a.capture) : b.detachEvent ? b.detachEvent(mb(c), d) : b.addListener && b.removeListener && b.removeListener(d);\r\n        (c = kb(b)) ? (cb(c, a), 0 == c.b && (c.src = null, b[db] = null)) : $a(a);\r\n    }\r\n} }\r\nfunction mb(a) { return a in eb ? eb[a] : eb[a] = \"on\" + a; }\r\nfunction qb(a, b) { var c = a.listener, d = a.ca || a.src; a.Z && pb(a); return c.call(d, b); }\r\nfunction nb(a, b) { if (a.Y)\r\n    return !0; if (!Ua) {\r\n    if (!b)\r\n        a: {\r\n            b = [\"window\", \"event\"];\r\n            for (var c = k, d = 0; d < b.length; d++)\r\n                if (c = c[b[d]], null == c) {\r\n                    b = null;\r\n                    break a;\r\n                }\r\n            b = c;\r\n        }\r\n    b = new z(b, this);\r\n    return qb(a, b);\r\n} return qb(a, new z(b, this)); }\r\nfunction kb(a) { a = a[db]; return a instanceof ab ? a : null; }\r\nvar sb = \"__closure_events_fn_\" + (1E9 * Math.random() >>> 0);\r\nfunction ib(a) { if (\"function\" === typeof a)\r\n    return a; a[sb] || (a[sb] = function (b) { return a.handleEvent(b); }); return a[sb]; }\r\nfunction D() { t.call(this); this.c = new ab(this); this.J = this; this.C = null; }\r\nr(D, t);\r\nD.prototype[A] = !0;\r\nh = D.prototype;\r\nh.addEventListener = function (a, b, c, d) { gb(this, a, b, c, d); };\r\nh.removeEventListener = function (a, b, c, d) { ob(this, a, b, c, d); };\r\nfunction E(a, b) { var c, d = a.C; if (d)\r\n    for (c = []; d; d = d.C)\r\n        c.push(d); a = a.J; d = b.type || b; if (\"string\" === typeof b)\r\n    b = new y(b, a);\r\nelse if (b instanceof y)\r\n    b.target = b.target || a;\r\nelse {\r\n    var e = b;\r\n    b = new y(d, a);\r\n    Ca(b, e);\r\n} e = !0; if (c)\r\n    for (var f = c.length - 1; 0 <= f; f--) {\r\n        var g = b.a = c[f];\r\n        e = tb(g, d, !0, b) && e;\r\n    } g = b.a = a; e = tb(g, d, !0, b) && e; e = tb(g, d, !1, b) && e; if (c)\r\n    for (f = 0; f < c.length; f++)\r\n        g = b.a = c[f], e = tb(g, d, !1, b) && e; }\r\nh.G = function () { D.X.G.call(this); if (this.c) {\r\n    var a = this.c, c;\r\n    for (c in a.a) {\r\n        for (var d = a.a[c], e = 0; e < d.length; e++)\r\n            $a(d[e]);\r\n        delete a.a[c];\r\n        a.b--;\r\n    }\r\n} this.C = null; };\r\nh.va = function (a, b, c, d) { return this.c.add(String(a), b, !1, c, d); };\r\nh.wa = function (a, b, c, d) { return this.c.add(String(a), b, !0, c, d); };\r\nfunction tb(a, b, c, d) { b = a.c.a[String(b)]; if (!b)\r\n    return !0; b = b.concat(); for (var e = !0, f = 0; f < b.length; ++f) {\r\n    var g = b[f];\r\n    if (g && !g.Y && g.capture == c) {\r\n        var m = g.listener, l = g.ca || g.src;\r\n        g.Z && cb(a.c, g);\r\n        e = !1 !== m.call(l, d) && e;\r\n    }\r\n} return e && !d.defaultPrevented; }\r\nvar ub = k.JSON.stringify;\r\nfunction vb() { this.b = this.a = null; }\r\nvar xb = new /** @class */ (function () {\r\n    function class_1(a, b) {\r\n        this.c = a;\r\n        this.f = b;\r\n        this.b = 0;\r\n        this.a = null;\r\n    }\r\n    class_1.prototype.get = function () { var a; 0 < this.b ? (this.b--, a = this.a, this.a = a.next, a.next = null) : a = this.c(); return a; };\r\n    return class_1;\r\n}())(function () { return new wb; }, function (a) { a.reset(); });\r\nvb.prototype.add = function (a, b) { var c = xb.get(); c.set(a, b); this.b ? this.b.next = c : this.a = c; this.b = c; };\r\nfunction yb() { var a = zb, b = null; a.a && (b = a.a, a.a = a.a.next, a.a || (a.b = null), b.next = null); return b; }\r\nfunction wb() { this.next = this.b = this.a = null; }\r\nwb.prototype.set = function (a, b) { this.a = a; this.b = b; this.next = null; };\r\nwb.prototype.reset = function () { this.next = this.b = this.a = null; };\r\nfunction Ab(a) { k.setTimeout(function () { throw a; }, 0); }\r\nfunction Bb(a, b) { Cb || Db(); Eb || (Cb(), Eb = !0); zb.add(a, b); }\r\nvar Cb;\r\nfunction Db() { var a = k.Promise.resolve(void 0); Cb = function () { a.then(Fb); }; }\r\nvar Eb = !1, zb = new vb;\r\nfunction Fb() { for (var a; a = yb();) {\r\n    try {\r\n        a.a.call(a.b);\r\n    }\r\n    catch (c) {\r\n        Ab(c);\r\n    }\r\n    var b = xb;\r\n    b.f(a);\r\n    100 > b.b && (b.b++, a.next = b.a, b.a = a);\r\n} Eb = !1; }\r\nfunction Gb(a, b) { D.call(this); this.b = a || 1; this.a = b || k; this.f = p(this.Za, this); this.g = q(); }\r\nr(Gb, D);\r\nh = Gb.prototype;\r\nh.aa = !1;\r\nh.M = null;\r\nh.Za = function () { if (this.aa) {\r\n    var a = q() - this.g;\r\n    0 < a && a < .8 * this.b ? this.M = this.a.setTimeout(this.f, this.b - a) : (this.M && (this.a.clearTimeout(this.M), this.M = null), E(this, \"tick\"), this.aa && (Hb(this), this.start()));\r\n} };\r\nh.start = function () { this.aa = !0; this.M || (this.M = this.a.setTimeout(this.f, this.b), this.g = q()); };\r\nfunction Hb(a) { a.aa = !1; a.M && (a.a.clearTimeout(a.M), a.M = null); }\r\nh.G = function () { Gb.X.G.call(this); Hb(this); delete this.a; };\r\nfunction Ib(a, b, c) { if (\"function\" === typeof a)\r\n    c && (a = p(a, c));\r\nelse if (a && \"function\" == typeof a.handleEvent)\r\n    a = p(a.handleEvent, a);\r\nelse\r\n    throw Error(\"Invalid listener argument\"); return 2147483647 < Number(b) ? -1 : k.setTimeout(a, b || 0); }\r\nfunction Jb(a) { a.a = Ib(function () { a.a = null; a.c && (a.c = !1, Jb(a)); }, a.h); var b = a.b; a.b = null; a.g.apply(null, b); }\r\nvar Kb = /** @class */ (function (_super) {\r\n    __extends(Kb, _super);\r\n    function Kb(a, b) {\r\n        var _this = _super.call(this) || this;\r\n        _this.g = a;\r\n        _this.h = b;\r\n        _this.b = null;\r\n        _this.c = !1;\r\n        _this.a = null;\r\n        return _this;\r\n    }\r\n    Kb.prototype.f = function (a) { this.b = arguments; this.a ? this.c = !0 : Jb(this); };\r\n    Kb.prototype.G = function () { _super.prototype.G.call(this); this.a && (k.clearTimeout(this.a), this.a = null, this.c = !1, this.b = null); };\r\n    return Kb;\r\n}(t));\r\nfunction F(a) { t.call(this); this.b = a; this.a = {}; }\r\nr(F, t);\r\nvar Lb = [];\r\nfunction Mb(a, b, c, d) { Array.isArray(c) || (c && (Lb[0] = c.toString()), c = Lb); for (var e = 0; e < c.length; e++) {\r\n    var f = gb(b, c[e], d || a.handleEvent, !1, a.b || a);\r\n    if (!f)\r\n        break;\r\n    a.a[f.key] = f;\r\n} }\r\nfunction Nb(a) { za(a.a, function (b, c) { this.a.hasOwnProperty(c) && pb(b); }, a); a.a = {}; }\r\nF.prototype.G = function () { F.X.G.call(this); Nb(this); };\r\nF.prototype.handleEvent = function () { throw Error(\"EventHandler.handleEvent not implemented\"); };\r\nfunction Ob() { this.a = !0; }\r\nfunction Pb(a, b, c, d, e, f) { a.info(function () { if (a.a)\r\n    if (f) {\r\n        var g = \"\";\r\n        for (var m = f.split(\"&\"), l = 0; l < m.length; l++) {\r\n            var u = m[l].split(\"=\");\r\n            if (1 < u.length) {\r\n                var C = u[0];\r\n                u = u[1];\r\n                var B = C.split(\"_\");\r\n                g = 2 <= B.length && \"type\" == B[1] ? g + (C + \"=\" + u + \"&\") : g + (C + \"=redacted&\");\r\n            }\r\n        }\r\n    }\r\n    else\r\n        g = null;\r\nelse\r\n    g = f; return \"XMLHTTP REQ (\" + d + \") [attempt \" + e + \"]: \" + b + \"\\n\" + c + \"\\n\" + g; }); }\r\nfunction Qb(a, b, c, d, e, f, g) { a.info(function () { return \"XMLHTTP RESP (\" + d + \") [ attempt \" + e + \"]: \" + b + \"\\n\" + c + \"\\n\" + f + \" \" + g; }); }\r\nfunction G(a, b, c, d) { a.info(function () { return \"XMLHTTP TEXT (\" + b + \"): \" + Rb(a, c) + (d ? \" \" + d : \"\"); }); }\r\nfunction Sb(a, b) { a.info(function () { return \"TIMEOUT: \" + b; }); }\r\nOb.prototype.info = function () { };\r\nfunction Rb(a, b) { if (!a.a)\r\n    return b; if (!b)\r\n    return null; try {\r\n    var c = JSON.parse(b);\r\n    if (c)\r\n        for (a = 0; a < c.length; a++)\r\n            if (Array.isArray(c[a])) {\r\n                var d = c[a];\r\n                if (!(2 > d.length)) {\r\n                    var e = d[1];\r\n                    if (Array.isArray(e) && !(1 > e.length)) {\r\n                        var f = e[0];\r\n                        if (\"noop\" != f && \"stop\" != f && \"close\" != f)\r\n                            for (var g = 1; g < e.length; g++)\r\n                                e[g] = \"\";\r\n                    }\r\n                }\r\n            }\r\n    return ub(c);\r\n}\r\ncatch (m) {\r\n    return b;\r\n} }\r\nvar H = {}, Tb = null;\r\nfunction Ub() { return Tb = Tb || new D; }\r\nH.Fa = \"serverreachability\";\r\nfunction Vb(a) { y.call(this, H.Fa, a); }\r\nr(Vb, y);\r\nfunction I(a) { var b = Ub(); E(b, new Vb(b, a)); }\r\nH.STAT_EVENT = \"statevent\";\r\nfunction Wb(a, b) { y.call(this, H.STAT_EVENT, a); this.stat = b; }\r\nr(Wb, y);\r\nfunction J(a) { var b = Ub(); E(b, new Wb(b, a)); }\r\nH.Ga = \"timingevent\";\r\nfunction Xb(a) { y.call(this, H.Ga, a); }\r\nr(Xb, y);\r\nfunction K(a, b) { if (\"function\" !== typeof a)\r\n    throw Error(\"Fn must not be null and must be a function\"); return k.setTimeout(function () { a(); }, b); }\r\nvar Yb = { NO_ERROR: 0, $a: 1, nb: 2, mb: 3, hb: 4, lb: 5, ob: 6, Da: 7, TIMEOUT: 8, rb: 9 };\r\nvar Zb = { fb: \"complete\", Bb: \"success\", Ea: \"error\", Da: \"abort\", tb: \"ready\", ub: \"readystatechange\", TIMEOUT: \"timeout\", pb: \"incrementaldata\", sb: \"progress\", ib: \"downloadprogress\", Jb: \"uploadprogress\" };\r\nfunction $b() { }\r\n$b.prototype.a = null;\r\nfunction ac(a) { var b; (b = a.a) || (b = a.a = {}); return b; }\r\nfunction bc() { }\r\nvar L = { OPEN: \"a\", eb: \"b\", Ea: \"c\", qb: \"d\" };\r\nfunction cc() { y.call(this, \"d\"); }\r\nr(cc, y);\r\nfunction dc() { y.call(this, \"c\"); }\r\nr(dc, y);\r\nvar ec;\r\nfunction fc() { }\r\nr(fc, $b);\r\nec = new fc;\r\nfunction M(a, b, c, d) { this.g = a; this.c = b; this.f = c; this.S = d || 1; this.J = new F(this); this.P = gc; a = Ia ? 125 : void 0; this.R = new Gb(a); this.B = null; this.b = !1; this.j = this.l = this.i = this.H = this.u = this.T = this.o = null; this.s = []; this.a = null; this.D = 0; this.h = this.m = null; this.N = -1; this.A = !1; this.O = 0; this.F = null; this.V = this.C = this.U = this.I = !1; }\r\nvar gc = 45E3, hc = {}, ic = {};\r\nh = M.prototype;\r\nh.setTimeout = function (a) { this.P = a; };\r\nfunction jc(a, b, c) { a.H = 1; a.i = kc(N(b)); a.j = c; a.I = !0; lc(a, null); }\r\nfunction lc(a, b) { a.u = q(); mc(a); a.l = N(a.i); var c = a.l, d = a.S; Array.isArray(d) || (d = [String(d)]); nc(c.b, \"t\", d); a.D = 0; a.a = oc(a.g, a.g.C ? b : null); 0 < a.O && (a.F = new Kb(p(a.Ca, a, a.a), a.O)); Mb(a.J, a.a, \"readystatechange\", a.Xa); b = a.B ? Aa(a.B) : {}; a.j ? (a.m || (a.m = \"POST\"), b[\"Content-Type\"] = \"application/x-www-form-urlencoded\", a.a.ba(a.l, a.m, a.j, b)) : (a.m = \"GET\", a.a.ba(a.l, a.m, null, b)); I(1); Pb(a.c, a.m, a.l, a.f, a.S, a.j); }\r\nh.Xa = function (a) { a = a.target; var b = this.F; b && 3 == O(a) ? b.f() : this.Ca(a); };\r\nh.Ca = function (a) {\r\n    try {\r\n        if (a == this.a)\r\n            a: {\r\n                var b = O(this.a), c = this.a.ua(), d = this.a.W();\r\n                if (!(3 > b || 3 == b && !Ia && !this.a.$())) {\r\n                    this.A || 4 != b || 7 == c || (8 == c || 0 >= d ? I(3) : I(2));\r\n                    pc(this);\r\n                    var e = this.a.W();\r\n                    this.N = e;\r\n                    var f = this.a.$();\r\n                    this.b = 200 == e;\r\n                    Qb(this.c, this.m, this.l, this.f, this.S, b, e);\r\n                    if (this.b) {\r\n                        if (this.U && !this.C) {\r\n                            b: {\r\n                                if (this.a) {\r\n                                    var g, m = this.a;\r\n                                    if ((g = m.a ? m.a.getResponseHeader(\"X-HTTP-Initial-Response\") : null) && !sa(g)) {\r\n                                        var l = g;\r\n                                        break b;\r\n                                    }\r\n                                }\r\n                                l = null;\r\n                            }\r\n                            if (l)\r\n                                G(this.c, this.f, l, \"Initial handshake response via X-HTTP-Initial-Response\"),\r\n                                    this.C = !0, qc(this, l);\r\n                            else {\r\n                                this.b = !1;\r\n                                this.h = 3;\r\n                                J(12);\r\n                                P(this);\r\n                                rc(this);\r\n                                break a;\r\n                            }\r\n                        }\r\n                        this.I ? (sc(this, b, f), Ia && this.b && 3 == b && (Mb(this.J, this.R, \"tick\", this.Wa), this.R.start())) : (G(this.c, this.f, f, null), qc(this, f));\r\n                        4 == b && P(this);\r\n                        this.b && !this.A && (4 == b ? uc(this.g, this) : (this.b = !1, mc(this)));\r\n                    }\r\n                    else\r\n                        400 == e && 0 < f.indexOf(\"Unknown SID\") ? (this.h = 3, J(12)) : (this.h = 0, J(13)), P(this), rc(this);\r\n                }\r\n            }\r\n    }\r\n    catch (u) { }\r\n    finally { }\r\n};\r\nfunction sc(a, b, c) { for (var d = !0; !a.A && a.D < c.length;) {\r\n    var e = vc(a, c);\r\n    if (e == ic) {\r\n        4 == b && (a.h = 4, J(14), d = !1);\r\n        G(a.c, a.f, null, \"[Incomplete Response]\");\r\n        break;\r\n    }\r\n    else if (e == hc) {\r\n        a.h = 4;\r\n        J(15);\r\n        G(a.c, a.f, c, \"[Invalid Chunk]\");\r\n        d = !1;\r\n        break;\r\n    }\r\n    else\r\n        G(a.c, a.f, e, null), qc(a, e);\r\n} 4 == b && 0 == c.length && (a.h = 1, J(16), d = !1); a.b = a.b && d; d ? 0 < c.length && !a.V && (a.V = !0, b = a.g, b.a == a && b.U && !b.F && (b.c.info(\"Great, no buffering proxy detected. Bytes received: \" + c.length), wc(b), b.F = !0, J(11))) : (G(a.c, a.f, c, \"[Invalid Chunked Response]\"), P(a), rc(a)); }\r\nh.Wa = function () { if (this.a) {\r\n    var a = O(this.a), b = this.a.$();\r\n    this.D < b.length && (pc(this), sc(this, a, b), this.b && 4 != a && mc(this));\r\n} };\r\nfunction vc(a, b) { var c = a.D, d = b.indexOf(\"\\n\", c); if (-1 == d)\r\n    return ic; c = Number(b.substring(c, d)); if (isNaN(c))\r\n    return hc; d += 1; if (d + c > b.length)\r\n    return ic; b = b.substr(d, c); a.D = d + c; return b; }\r\nh.cancel = function () { this.A = !0; P(this); };\r\nfunction mc(a) { a.T = q() + a.P; yc(a, a.P); }\r\nfunction yc(a, b) { if (null != a.o)\r\n    throw Error(\"WatchDog timer not null\"); a.o = K(p(a.Va, a), b); }\r\nfunction pc(a) { a.o && (k.clearTimeout(a.o), a.o = null); }\r\nh.Va = function () { this.o = null; var a = q(); 0 <= a - this.T ? (Sb(this.c, this.l), 2 != this.H && (I(3), J(17)), P(this), this.h = 2, rc(this)) : yc(this, this.T - a); };\r\nfunction rc(a) { 0 == a.g.v || a.A || uc(a.g, a); }\r\nfunction P(a) { pc(a); var b = a.F; b && \"function\" == typeof b.ja && b.ja(); a.F = null; Hb(a.R); Nb(a.J); a.a && (b = a.a, a.a = null, b.abort(), b.ja()); }\r\nfunction qc(a, b) {\r\n    try {\r\n        var c = a.g;\r\n        if (0 != c.v && (c.a == a || zc(c.b, a)))\r\n            if (c.I = a.N, !a.C && zc(c.b, a) && 3 == c.v) {\r\n                try {\r\n                    var d = c.ka.a.parse(b);\r\n                }\r\n                catch (tc) {\r\n                    d = null;\r\n                }\r\n                if (Array.isArray(d) && 3 == d.length) {\r\n                    var e = d;\r\n                    if (0 == e[0])\r\n                        a: {\r\n                            if (!c.j) {\r\n                                if (c.a)\r\n                                    if (c.a.u + 3E3 < a.u)\r\n                                        Ac(c), Bc(c);\r\n                                    else\r\n                                        break a;\r\n                                Cc(c);\r\n                                J(18);\r\n                            }\r\n                        }\r\n                    else\r\n                        c.oa = e[1], 0 < c.oa - c.P && 37500 > e[2] && c.H && 0 == c.o && !c.m && (c.m = K(p(c.Sa, c), 6E3));\r\n                    if (1 >= Dc(c.b) && c.ea) {\r\n                        try {\r\n                            c.ea();\r\n                        }\r\n                        catch (tc) { }\r\n                        c.ea = void 0;\r\n                    }\r\n                }\r\n                else\r\n                    Q(c, 11);\r\n            }\r\n            else if ((a.C || c.a == a) && Ac(c), !sa(b))\r\n                for (b = d = c.ka.a.parse(b), d = 0; d < b.length; d++)\r\n                    if (e =\r\n                        b[d], c.P = e[0], e = e[1], 2 == c.v)\r\n                        if (\"c\" == e[0]) {\r\n                            c.J = e[1];\r\n                            c.ga = e[2];\r\n                            var f = e[3];\r\n                            null != f && (c.ha = f, c.c.info(\"VER=\" + c.ha));\r\n                            var g = e[4];\r\n                            null != g && (c.pa = g, c.c.info(\"SVER=\" + c.pa));\r\n                            var m = e[5];\r\n                            if (null != m && \"number\" === typeof m && 0 < m) {\r\n                                var l = 1.5 * m;\r\n                                c.D = l;\r\n                                c.c.info(\"backChannelRequestTimeoutMs_=\" + l);\r\n                            }\r\n                            l = c;\r\n                            var u = a.a;\r\n                            if (u) {\r\n                                var C = u.a ? u.a.getResponseHeader(\"X-Client-Wire-Protocol\") : null;\r\n                                if (C) {\r\n                                    var B = l.b;\r\n                                    !B.a && (v(C, \"spdy\") || v(C, \"quic\") || v(C, \"h2\")) && (B.f = B.g, B.a = new Set, B.b && (Ec(B, B.b), B.b = null));\r\n                                }\r\n                                if (l.A) {\r\n                                    var rb = u.a ? u.a.getResponseHeader(\"X-HTTP-Session-Id\") :\r\n                                        null;\r\n                                    rb && (l.na = rb, R(l.B, l.A, rb));\r\n                                }\r\n                            }\r\n                            c.v = 3;\r\n                            c.f && c.f.ta();\r\n                            c.U && (c.N = q() - a.u, c.c.info(\"Handshake RTT: \" + c.N + \"ms\"));\r\n                            l = c;\r\n                            var xa = a;\r\n                            l.la = Fc(l, l.C ? l.ga : null, l.fa);\r\n                            if (xa.C) {\r\n                                Gc(l.b, xa);\r\n                                var ya = xa, xc = l.D;\r\n                                xc && ya.setTimeout(xc);\r\n                                ya.o && (pc(ya), mc(ya));\r\n                                l.a = xa;\r\n                            }\r\n                            else\r\n                                Hc(l);\r\n                            0 < c.g.length && Ic(c);\r\n                        }\r\n                        else\r\n                            \"stop\" != e[0] && \"close\" != e[0] || Q(c, 7);\r\n                    else\r\n                        3 == c.v && (\"stop\" == e[0] || \"close\" == e[0] ? \"stop\" == e[0] ? Q(c, 7) : Jc(c) : \"noop\" != e[0] && c.f && c.f.sa(e), c.o = 0);\r\n        I(4);\r\n    }\r\n    catch (tc) { }\r\n}\r\nfunction Kc(a) { if (a.K && \"function\" == typeof a.K)\r\n    return a.K(); if (\"string\" === typeof a)\r\n    return a.split(\"\"); if (ba(a)) {\r\n    for (var b = [], c = a.length, d = 0; d < c; d++)\r\n        b.push(a[d]);\r\n    return b;\r\n} b = []; c = 0; for (d in a)\r\n    b[c++] = a[d]; return a = b; }\r\nfunction Lc(a, b) { if (a.forEach && \"function\" == typeof a.forEach)\r\n    a.forEach(b, void 0);\r\nelse if (ba(a) || \"string\" === typeof a)\r\n    na(a, b, void 0);\r\nelse {\r\n    if (a.L && \"function\" == typeof a.L)\r\n        var c = a.L();\r\n    else if (a.K && \"function\" == typeof a.K)\r\n        c = void 0;\r\n    else if (ba(a) || \"string\" === typeof a) {\r\n        c = [];\r\n        for (var d = a.length, e = 0; e < d; e++)\r\n            c.push(e);\r\n    }\r\n    else\r\n        for (e in c = [], d = 0, a)\r\n            c[d++] = e;\r\n    d = Kc(a);\r\n    e = d.length;\r\n    for (var f = 0; f < e; f++)\r\n        b.call(void 0, d[f], c && c[f], a);\r\n} }\r\nfunction S(a, b) { this.b = {}; this.a = []; this.c = 0; var c = arguments.length; if (1 < c) {\r\n    if (c % 2)\r\n        throw Error(\"Uneven number of arguments\");\r\n    for (var d = 0; d < c; d += 2)\r\n        this.set(arguments[d], arguments[d + 1]);\r\n}\r\nelse if (a)\r\n    if (a instanceof S)\r\n        for (c = a.L(), d = 0; d < c.length; d++)\r\n            this.set(c[d], a.get(c[d]));\r\n    else\r\n        for (d in a)\r\n            this.set(d, a[d]); }\r\nh = S.prototype;\r\nh.K = function () { Mc(this); for (var a = [], b = 0; b < this.a.length; b++)\r\n    a.push(this.b[this.a[b]]); return a; };\r\nh.L = function () { Mc(this); return this.a.concat(); };\r\nfunction Mc(a) { if (a.c != a.a.length) {\r\n    for (var b = 0, c = 0; b < a.a.length;) {\r\n        var d = a.a[b];\r\n        T(a.b, d) && (a.a[c++] = d);\r\n        b++;\r\n    }\r\n    a.a.length = c;\r\n} if (a.c != a.a.length) {\r\n    var e = {};\r\n    for (c = b = 0; b < a.a.length;)\r\n        d = a.a[b], T(e, d) || (a.a[c++] = d, e[d] = 1), b++;\r\n    a.a.length = c;\r\n} }\r\nh.get = function (a, b) { return T(this.b, a) ? this.b[a] : b; };\r\nh.set = function (a, b) { T(this.b, a) || (this.c++, this.a.push(a)); this.b[a] = b; };\r\nh.forEach = function (a, b) { for (var c = this.L(), d = 0; d < c.length; d++) {\r\n    var e = c[d], f = this.get(e);\r\n    a.call(b, f, e, this);\r\n} };\r\nfunction T(a, b) { return Object.prototype.hasOwnProperty.call(a, b); }\r\nvar Nc = /^(?:([^:/?#.]+):)?(?:\\/\\/(?:([^\\\\/?#]*)@)?([^\\\\/?#]*?)(?::([0-9]+))?(?=[\\\\/?#]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#([\\s\\S]*))?$/;\r\nfunction Oc(a, b) { if (a) {\r\n    a = a.split(\"&\");\r\n    for (var c = 0; c < a.length; c++) {\r\n        var d = a[c].indexOf(\"=\"), e = null;\r\n        if (0 <= d) {\r\n            var f = a[c].substring(0, d);\r\n            e = a[c].substring(d + 1);\r\n        }\r\n        else\r\n            f = a[c];\r\n        b(f, e ? decodeURIComponent(e.replace(/\\+/g, \" \")) : \"\");\r\n    }\r\n} }\r\nfunction U(a, b) { this.c = this.j = this.f = \"\"; this.h = null; this.i = this.g = \"\"; this.a = !1; if (a instanceof U) {\r\n    this.a = void 0 !== b ? b : a.a;\r\n    Pc(this, a.f);\r\n    this.j = a.j;\r\n    Qc(this, a.c);\r\n    Rc(this, a.h);\r\n    this.g = a.g;\r\n    b = a.b;\r\n    var c = new Sc;\r\n    c.c = b.c;\r\n    b.a && (c.a = new S(b.a), c.b = b.b);\r\n    Tc(this, c);\r\n    this.i = a.i;\r\n}\r\nelse\r\n    a && (c = String(a).match(Nc)) ? (this.a = !!b, Pc(this, c[1] || \"\", !0), this.j = Uc(c[2] || \"\"), Qc(this, c[3] || \"\", !0), Rc(this, c[4]), this.g = Uc(c[5] || \"\", !0), Tc(this, c[6] || \"\", !0), this.i = Uc(c[7] || \"\")) : (this.a = !!b, this.b = new Sc(null, this.a)); }\r\nU.prototype.toString = function () { var a = [], b = this.f; b && a.push(Vc(b, Wc, !0), \":\"); var c = this.c; if (c || \"file\" == b)\r\n    a.push(\"//\"), (b = this.j) && a.push(Vc(b, Wc, !0), \"@\"), a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g, \"%$1\")), c = this.h, null != c && a.push(\":\", String(c)); if (c = this.g)\r\n    this.c && \"/\" != c.charAt(0) && a.push(\"/\"), a.push(Vc(c, \"/\" == c.charAt(0) ? Xc : Yc, !0)); (c = this.b.toString()) && a.push(\"?\", c); (c = this.i) && a.push(\"#\", Vc(c, Zc)); return a.join(\"\"); };\r\nfunction N(a) { return new U(a); }\r\nfunction Pc(a, b, c) { a.f = c ? Uc(b, !0) : b; a.f && (a.f = a.f.replace(/:$/, \"\")); }\r\nfunction Qc(a, b, c) { a.c = c ? Uc(b, !0) : b; }\r\nfunction Rc(a, b) { if (b) {\r\n    b = Number(b);\r\n    if (isNaN(b) || 0 > b)\r\n        throw Error(\"Bad port number \" + b);\r\n    a.h = b;\r\n}\r\nelse\r\n    a.h = null; }\r\nfunction Tc(a, b, c) { b instanceof Sc ? (a.b = b, $c(a.b, a.a)) : (c || (b = Vc(b, ad)), a.b = new Sc(b, a.a)); }\r\nfunction R(a, b, c) { a.b.set(b, c); }\r\nfunction kc(a) { R(a, \"zx\", Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ q()).toString(36)); return a; }\r\nfunction bd(a) { return a instanceof U ? N(a) : new U(a, void 0); }\r\nfunction cd(a, b, c, d) { var e = new U(null, void 0); a && Pc(e, a); b && Qc(e, b); c && Rc(e, c); d && (e.g = d); return e; }\r\nfunction Uc(a, b) { return a ? b ? decodeURI(a.replace(/%25/g, \"%2525\")) : decodeURIComponent(a) : \"\"; }\r\nfunction Vc(a, b, c) { return \"string\" === typeof a ? (a = encodeURI(a).replace(b, dd), c && (a = a.replace(/%25([0-9a-fA-F]{2})/g, \"%$1\")), a) : null; }\r\nfunction dd(a) { a = a.charCodeAt(0); return \"%\" + (a >> 4 & 15).toString(16) + (a & 15).toString(16); }\r\nvar Wc = /[#\\/\\?@]/g, Yc = /[#\\?:]/g, Xc = /[#\\?]/g, ad = /[#\\?@]/g, Zc = /#/g;\r\nfunction Sc(a, b) { this.b = this.a = null; this.c = a || null; this.f = !!b; }\r\nfunction V(a) { a.a || (a.a = new S, a.b = 0, a.c && Oc(a.c, function (b, c) { a.add(decodeURIComponent(b.replace(/\\+/g, \" \")), c); })); }\r\nh = Sc.prototype;\r\nh.add = function (a, b) { V(this); this.c = null; a = W(this, a); var c = this.a.get(a); c || this.a.set(a, c = []); c.push(b); this.b += 1; return this; };\r\nfunction ed(a, b) { V(a); b = W(a, b); T(a.a.b, b) && (a.c = null, a.b -= a.a.get(b).length, a = a.a, T(a.b, b) && (delete a.b[b], a.c--, a.a.length > 2 * a.c && Mc(a))); }\r\nfunction fd(a, b) { V(a); b = W(a, b); return T(a.a.b, b); }\r\nh.forEach = function (a, b) { V(this); this.a.forEach(function (c, d) { na(c, function (e) { a.call(b, e, d, this); }, this); }, this); };\r\nh.L = function () { V(this); for (var a = this.a.K(), b = this.a.L(), c = [], d = 0; d < b.length; d++)\r\n    for (var e = a[d], f = 0; f < e.length; f++)\r\n        c.push(b[d]); return c; };\r\nh.K = function (a) { V(this); var b = []; if (\"string\" === typeof a)\r\n    fd(this, a) && (b = qa(b, this.a.get(W(this, a))));\r\nelse {\r\n    a = this.a.K();\r\n    for (var c = 0; c < a.length; c++)\r\n        b = qa(b, a[c]);\r\n} return b; };\r\nh.set = function (a, b) { V(this); this.c = null; a = W(this, a); fd(this, a) && (this.b -= this.a.get(a).length); this.a.set(a, [b]); this.b += 1; return this; };\r\nh.get = function (a, b) { if (!a)\r\n    return b; a = this.K(a); return 0 < a.length ? String(a[0]) : b; };\r\nfunction nc(a, b, c) { ed(a, b); 0 < c.length && (a.c = null, a.a.set(W(a, b), ra(c)), a.b += c.length); }\r\nh.toString = function () { if (this.c)\r\n    return this.c; if (!this.a)\r\n    return \"\"; for (var a = [], b = this.a.L(), c = 0; c < b.length; c++) {\r\n    var d = b[c], e = encodeURIComponent(String(d));\r\n    d = this.K(d);\r\n    for (var f = 0; f < d.length; f++) {\r\n        var g = e;\r\n        \"\" !== d[f] && (g += \"=\" + encodeURIComponent(String(d[f])));\r\n        a.push(g);\r\n    }\r\n} return this.c = a.join(\"&\"); };\r\nfunction W(a, b) { b = String(b); a.f && (b = b.toLowerCase()); return b; }\r\nfunction $c(a, b) { b && !a.f && (V(a), a.c = null, a.a.forEach(function (c, d) { var e = d.toLowerCase(); d != e && (ed(this, d), nc(this, e, c)); }, a)); a.f = b; }\r\nvar gd = /** @class */ (function () {\r\n    function gd(a, b) {\r\n        this.b = a;\r\n        this.a = b;\r\n    }\r\n    return gd;\r\n}());\r\nfunction hd(a) { this.g = a || id; k.PerformanceNavigationTiming ? (a = k.performance.getEntriesByType(\"navigation\"), a = 0 < a.length && (\"hq\" == a[0].nextHopProtocol || \"h2\" == a[0].nextHopProtocol)) : a = !!(k.ia && k.ia.ya && k.ia.ya() && k.ia.ya().Lb); this.f = a ? this.g : 1; this.a = null; 1 < this.f && (this.a = new Set); this.b = null; this.c = []; }\r\nvar id = 10;\r\nfunction jd(a) { return a.b ? !0 : a.a ? a.a.size >= a.f : !1; }\r\nfunction Dc(a) { return a.b ? 1 : a.a ? a.a.size : 0; }\r\nfunction zc(a, b) { return a.b ? a.b == b : a.a ? a.a.has(b) : !1; }\r\nfunction Ec(a, b) { a.a ? a.a.add(b) : a.b = b; }\r\nfunction Gc(a, b) { a.b && a.b == b ? a.b = null : a.a && a.a.has(b) && a.a.delete(b); }\r\nhd.prototype.cancel = function () {\r\n    var e_1, _a;\r\n    this.c = kd(this);\r\n    if (this.b)\r\n        this.b.cancel(), this.b = null;\r\n    else if (this.a && 0 !== this.a.size) {\r\n        try {\r\n            for (var _b = __values(this.a.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var a = _c.value;\r\n                a.cancel();\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        this.a.clear();\r\n    }\r\n};\r\nfunction kd(a) {\r\n    var e_2, _a;\r\n    if (null != a.b)\r\n        return a.c.concat(a.b.s);\r\n    if (null != a.a && 0 !== a.a.size) {\r\n        var b = a.c;\r\n        try {\r\n            for (var _b = __values(a.a.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var c = _c.value;\r\n                b = b.concat(c.s);\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n        return b;\r\n    }\r\n    return ra(a.c);\r\n}\r\nfunction ld() { }\r\nld.prototype.stringify = function (a) { return k.JSON.stringify(a, void 0); };\r\nld.prototype.parse = function (a) { return k.JSON.parse(a, void 0); };\r\nfunction md() { this.a = new ld; }\r\nfunction nd(a, b, c) { var d = c || \"\"; try {\r\n    Lc(a, function (e, f) { var g = e; n(e) && (g = ub(e)); b.push(d + f + \"=\" + encodeURIComponent(g)); });\r\n}\r\ncatch (e) {\r\n    throw b.push(d + \"type=\" + encodeURIComponent(\"_badmap\")), e;\r\n} }\r\nfunction od(a, b) { var c = new Ob; if (k.Image) {\r\n    var d = new Image;\r\n    d.onload = ja(pd, c, d, \"TestLoadImage: loaded\", !0, b);\r\n    d.onerror = ja(pd, c, d, \"TestLoadImage: error\", !1, b);\r\n    d.onabort = ja(pd, c, d, \"TestLoadImage: abort\", !1, b);\r\n    d.ontimeout = ja(pd, c, d, \"TestLoadImage: timeout\", !1, b);\r\n    k.setTimeout(function () { if (d.ontimeout)\r\n        d.ontimeout(); }, 1E4);\r\n    d.src = a;\r\n}\r\nelse\r\n    b(!1); }\r\nfunction pd(a, b, c, d, e) { try {\r\n    b.onload = null, b.onerror = null, b.onabort = null, b.ontimeout = null, e(d);\r\n}\r\ncatch (f) { } }\r\nvar qd = k.JSON.parse;\r\nfunction X(a) { D.call(this); this.headers = new S; this.H = a || null; this.b = !1; this.s = this.a = null; this.B = \"\"; this.h = 0; this.f = \"\"; this.g = this.A = this.l = this.u = !1; this.o = 0; this.m = null; this.I = rd; this.D = this.F = !1; }\r\nr(X, D);\r\nvar rd = \"\", sd = /^https?$/i, td = [\"POST\", \"PUT\"];\r\nh = X.prototype;\r\nh.ba = function (a, b, c, d) {\r\n    if (this.a)\r\n        throw Error(\"[goog.net.XhrIo] Object is active with another request=\" + this.B + \"; newUri=\" + a);\r\n    b = b ? b.toUpperCase() : \"GET\";\r\n    this.B = a;\r\n    this.f = \"\";\r\n    this.h = 0;\r\n    this.u = !1;\r\n    this.b = !0;\r\n    this.a = new XMLHttpRequest;\r\n    this.s = this.H ? ac(this.H) : ac(ec);\r\n    this.a.onreadystatechange = p(this.za, this);\r\n    try {\r\n        this.A = !0, this.a.open(b, String(a), !0), this.A = !1;\r\n    }\r\n    catch (f) {\r\n        ud(this, f);\r\n        return;\r\n    }\r\n    a = c || \"\";\r\n    var e = new S(this.headers);\r\n    d && Lc(d, function (f, g) { e.set(g, f); });\r\n    d = oa(e.L());\r\n    c = k.FormData && a instanceof k.FormData;\r\n    !(0 <=\r\n        ma(td, b)) || d || c || e.set(\"Content-Type\", \"application/x-www-form-urlencoded;charset=utf-8\");\r\n    e.forEach(function (f, g) { this.a.setRequestHeader(g, f); }, this);\r\n    this.I && (this.a.responseType = this.I);\r\n    \"withCredentials\" in this.a && this.a.withCredentials !== this.F && (this.a.withCredentials = this.F);\r\n    try {\r\n        vd(this), 0 < this.o && ((this.D = wd(this.a)) ? (this.a.timeout = this.o, this.a.ontimeout = p(this.xa, this)) : this.m = Ib(this.xa, this.o, this)), this.l = !0, this.a.send(a), this.l = !1;\r\n    }\r\n    catch (f) {\r\n        ud(this, f);\r\n    }\r\n};\r\nfunction wd(a) { return x && Qa(9) && \"number\" === typeof a.timeout && void 0 !== a.ontimeout; }\r\nfunction pa(a) { return \"content-type\" == a.toLowerCase(); }\r\nh.xa = function () { \"undefined\" != typeof goog && this.a && (this.f = \"Timed out after \" + this.o + \"ms, aborting\", this.h = 8, E(this, \"timeout\"), this.abort(8)); };\r\nfunction ud(a, b) { a.b = !1; a.a && (a.g = !0, a.a.abort(), a.g = !1); a.f = b; a.h = 5; xd(a); yd(a); }\r\nfunction xd(a) { a.u || (a.u = !0, E(a, \"complete\"), E(a, \"error\")); }\r\nh.abort = function (a) { this.a && this.b && (this.b = !1, this.g = !0, this.a.abort(), this.g = !1, this.h = a || 7, E(this, \"complete\"), E(this, \"abort\"), yd(this)); };\r\nh.G = function () { this.a && (this.b && (this.b = !1, this.g = !0, this.a.abort(), this.g = !1), yd(this, !0)); X.X.G.call(this); };\r\nh.za = function () { this.j || (this.A || this.l || this.g ? zd(this) : this.Ua()); };\r\nh.Ua = function () { zd(this); };\r\nfunction zd(a) {\r\n    if (a.b && \"undefined\" != typeof goog && (!a.s[1] || 4 != O(a) || 2 != a.W()))\r\n        if (a.l && 4 == O(a))\r\n            Ib(a.za, 0, a);\r\n        else if (E(a, \"readystatechange\"), 4 == O(a)) {\r\n            a.b = !1;\r\n            try {\r\n                {\r\n                    var l = a.W();\r\n                    a: switch (l) {\r\n                        case 200:\r\n                        case 201:\r\n                        case 202:\r\n                        case 204:\r\n                        case 206:\r\n                        case 304:\r\n                        case 1223:\r\n                            var b = !0;\r\n                            break a;\r\n                        default: b = !1;\r\n                    }\r\n                    var c;\r\n                    if (!(c = b)) {\r\n                        var d;\r\n                        if (d = 0 === l) {\r\n                            var e = String(a.B).match(Nc)[1] || null;\r\n                            if (!e && k.self && k.self.location) {\r\n                                var f = k.self.location.protocol;\r\n                                e = f.substr(0, f.length - 1);\r\n                            }\r\n                            d = !sd.test(e ? e.toLowerCase() : \"\");\r\n                        }\r\n                        c = d;\r\n                    }\r\n                    var g = c;\r\n                }\r\n                if (g)\r\n                    E(a, \"complete\"),\r\n                        E(a, \"success\");\r\n                else {\r\n                    a.h = 6;\r\n                    try {\r\n                        var m = 2 < O(a) ? a.a.statusText : \"\";\r\n                    }\r\n                    catch (l) {\r\n                        m = \"\";\r\n                    }\r\n                    a.f = m + \" [\" + a.W() + \"]\";\r\n                    xd(a);\r\n                }\r\n            }\r\n            finally {\r\n                yd(a);\r\n            }\r\n        }\r\n}\r\nfunction yd(a, b) { if (a.a) {\r\n    vd(a);\r\n    var c = a.a, d = a.s[0] ? aa : null;\r\n    a.a = null;\r\n    a.s = null;\r\n    b || E(a, \"ready\");\r\n    try {\r\n        c.onreadystatechange = d;\r\n    }\r\n    catch (e) { }\r\n} }\r\nfunction vd(a) { a.a && a.D && (a.a.ontimeout = null); a.m && (k.clearTimeout(a.m), a.m = null); }\r\nfunction O(a) { return a.a ? a.a.readyState : 0; }\r\nh.W = function () { try {\r\n    return 2 < O(this) ? this.a.status : -1;\r\n}\r\ncatch (a) {\r\n    return -1;\r\n} };\r\nh.$ = function () { try {\r\n    return this.a ? this.a.responseText : \"\";\r\n}\r\ncatch (a) {\r\n    return \"\";\r\n} };\r\nh.Pa = function (a) { if (this.a) {\r\n    var b = this.a.responseText;\r\n    a && 0 == b.indexOf(a) && (b = b.substring(a.length));\r\n    return qd(b);\r\n} };\r\nh.ua = function () { return this.h; };\r\nh.Qa = function () { return \"string\" === typeof this.f ? this.f : String(this.f); };\r\nfunction Ad(a) { var b = \"\"; za(a, function (c, d) { b += d; b += \":\"; b += c; b += \"\\r\\n\"; }); return b; }\r\nfunction Bd(a, b, c) { a: {\r\n    for (d in c) {\r\n        var d = !1;\r\n        break a;\r\n    }\r\n    d = !0;\r\n} d || (c = Ad(c), \"string\" === typeof a ? (null != c && encodeURIComponent(String(c))) : R(a, b, c)); }\r\nfunction Cd(a, b, c) { return c && c.internalChannelParams ? c.internalChannelParams[a] || b : b; }\r\nfunction Dd(a) {\r\n    this.pa = 0;\r\n    this.g = [];\r\n    this.c = new Ob;\r\n    this.ga = this.la = this.B = this.fa = this.a = this.na = this.A = this.V = this.i = this.O = this.l = null;\r\n    this.Oa = this.R = 0;\r\n    this.La = Cd(\"failFast\", !1, a);\r\n    this.H = this.m = this.j = this.h = this.f = null;\r\n    this.S = !0;\r\n    this.I = this.oa = this.P = -1;\r\n    this.T = this.o = this.u = 0;\r\n    this.Ha = Cd(\"baseRetryDelayMs\", 5E3, a);\r\n    this.Ra = Cd(\"retryDelaySeedMs\", 1E4, a);\r\n    this.Ma = Cd(\"forwardChannelMaxRetries\", 2, a);\r\n    this.ma = Cd(\"forwardChannelRequestTimeoutMs\", 2E4, a);\r\n    this.Na = a && a.g || void 0;\r\n    this.D = void 0;\r\n    this.C = a && a.supportsCrossDomainXhr ||\r\n        !1;\r\n    this.J = \"\";\r\n    this.b = new hd(a && a.concurrentRequestLimit);\r\n    this.ka = new md;\r\n    this.da = a && a.fastHandshake || !1;\r\n    this.Ia = a && a.b || !1;\r\n    a && a.f && (this.c.a = !1);\r\n    a && a.forceLongPolling && (this.S = !1);\r\n    this.U = !this.da && this.S && a && a.detectBufferingProxy || !1;\r\n    this.ea = void 0;\r\n    this.N = 0;\r\n    this.F = !1;\r\n    this.s = null;\r\n    (this.Ka = a && a.c || !1) && this.c.info(\"Opt-in to enable Chrome Origin Trials.\");\r\n}\r\nh = Dd.prototype;\r\nh.ha = 8;\r\nh.v = 1;\r\nfunction Jc(a) { Ed(a); if (3 == a.v) {\r\n    var b = a.R++, c = N(a.B);\r\n    R(c, \"SID\", a.J);\r\n    R(c, \"RID\", b);\r\n    R(c, \"TYPE\", \"terminate\");\r\n    Fd(a, c);\r\n    b = new M(a, a.c, b, void 0);\r\n    b.H = 2;\r\n    b.i = kc(N(c));\r\n    c = !1;\r\n    k.navigator && k.navigator.sendBeacon && (c = k.navigator.sendBeacon(b.i.toString(), \"\"));\r\n    !c && k.Image && ((new Image).src = b.i, c = !0);\r\n    c || (b.a = oc(b.g, null), b.a.ba(b.i));\r\n    b.u = q();\r\n    mc(b);\r\n} Gd(a); }\r\nfunction Bc(a) { a.a && (wc(a), a.a.cancel(), a.a = null); }\r\nfunction Ed(a) { Bc(a); a.j && (k.clearTimeout(a.j), a.j = null); Ac(a); a.b.cancel(); a.h && (\"number\" === typeof a.h && k.clearTimeout(a.h), a.h = null); }\r\nfunction Hd(a, b) { a.g.push(new gd(a.Oa++, b)); 3 == a.v && Ic(a); }\r\nfunction Ic(a) { jd(a.b) || a.h || (a.h = !0, Bb(a.Ba, a), a.u = 0); }\r\nfunction Id(a, b) { if (Dc(a.b) >= a.b.f - (a.h ? 1 : 0))\r\n    return !1; if (a.h)\r\n    return a.g = b.s.concat(a.g), !0; if (1 == a.v || 2 == a.v || a.u >= (a.La ? 0 : a.Ma))\r\n    return !1; a.h = K(p(a.Ba, a, b), Jd(a, a.u)); a.u++; return !0; }\r\nh.Ba = function (a) {\r\n    if (this.h)\r\n        if (this.h = null, 1 == this.v) {\r\n            if (!a) {\r\n                this.R = Math.floor(1E5 * Math.random());\r\n                a = this.R++;\r\n                var b = new M(this, this.c, a, void 0), c = this.l;\r\n                this.O && (c ? (c = Aa(c), Ca(c, this.O)) : c = this.O);\r\n                null === this.i && (b.B = c);\r\n                var d;\r\n                if (this.da)\r\n                    a: {\r\n                        for (var e = d = 0; e < this.g.length; e++) {\r\n                            b: {\r\n                                var f = this.g[e];\r\n                                if (\"__data__\" in f.a && (f = f.a.__data__, \"string\" === typeof f)) {\r\n                                    f = f.length;\r\n                                    break b;\r\n                                }\r\n                                f = void 0;\r\n                            }\r\n                            if (void 0 === f)\r\n                                break;\r\n                            d += f;\r\n                            if (4096 < d) {\r\n                                d = e;\r\n                                break a;\r\n                            }\r\n                            if (4096 === d || e === this.g.length - 1) {\r\n                                d = e + 1;\r\n                                break a;\r\n                            }\r\n                        }\r\n                        d = 1E3;\r\n                    }\r\n                else\r\n                    d = 1E3;\r\n                d = Kd(this, b, d);\r\n                e = N(this.B);\r\n                R(e, \"RID\", a);\r\n                R(e, \"CVER\", 22);\r\n                this.A && R(e, \"X-HTTP-Session-Id\", this.A);\r\n                Fd(this, e);\r\n                this.i && c && Bd(e, this.i, c);\r\n                Ec(this.b, b);\r\n                this.Ia && R(e, \"TYPE\", \"init\");\r\n                this.da ? (R(e, \"$req\", d), R(e, \"SID\", \"null\"), b.U = !0, jc(b, e, null)) : jc(b, e, d);\r\n                this.v = 2;\r\n            }\r\n        }\r\n        else\r\n            3 == this.v && (a ? Ld(this, a) : 0 == this.g.length || jd(this.b) || Ld(this));\r\n};\r\nfunction Ld(a, b) { var c; b ? c = b.f : c = a.R++; var d = N(a.B); R(d, \"SID\", a.J); R(d, \"RID\", c); R(d, \"AID\", a.P); Fd(a, d); a.i && a.l && Bd(d, a.i, a.l); c = new M(a, a.c, c, a.u + 1); null === a.i && (c.B = a.l); b && (a.g = b.s.concat(a.g)); b = Kd(a, c, 1E3); c.setTimeout(Math.round(.5 * a.ma) + Math.round(.5 * a.ma * Math.random())); Ec(a.b, c); jc(c, d, b); }\r\nfunction Fd(a, b) { a.f && Lc({}, function (c, d) { R(b, d, c); }); }\r\nfunction Kd(a, b, c) { c = Math.min(a.g.length, c); var d = a.f ? p(a.f.Ja, a.f, a) : null; a: for (var e = a.g, f = -1;;) {\r\n    var g = [\"count=\" + c];\r\n    -1 == f ? 0 < c ? (f = e[0].b, g.push(\"ofs=\" + f)) : f = 0 : g.push(\"ofs=\" + f);\r\n    for (var m = !0, l = 0; l < c; l++) {\r\n        var u = e[l].b, C = e[l].a;\r\n        u -= f;\r\n        if (0 > u)\r\n            f = Math.max(0, e[l].b - 100), m = !1;\r\n        else\r\n            try {\r\n                nd(C, g, \"req\" + u + \"_\");\r\n            }\r\n            catch (B) {\r\n                d && d(C);\r\n            }\r\n    }\r\n    if (m) {\r\n        d = g.join(\"&\");\r\n        break a;\r\n    }\r\n} a = a.g.splice(0, c); b.s = a; return d; }\r\nfunction Hc(a) { a.a || a.j || (a.T = 1, Bb(a.Aa, a), a.o = 0); }\r\nfunction Cc(a) { if (a.a || a.j || 3 <= a.o)\r\n    return !1; a.T++; a.j = K(p(a.Aa, a), Jd(a, a.o)); a.o++; return !0; }\r\nh.Aa = function () { this.j = null; Md(this); if (this.U && !(this.F || null == this.a || 0 >= this.N)) {\r\n    var a = 2 * this.N;\r\n    this.c.info(\"BP detection timer enabled: \" + a);\r\n    this.s = K(p(this.Ta, this), a);\r\n} };\r\nh.Ta = function () { this.s && (this.s = null, this.c.info(\"BP detection timeout reached.\"), this.c.info(\"Buffering proxy detected and switch to long-polling!\"), this.H = !1, this.F = !0, J(10), Bc(this), Md(this)); };\r\nfunction wc(a) { null != a.s && (k.clearTimeout(a.s), a.s = null); }\r\nfunction Md(a) { a.a = new M(a, a.c, \"rpc\", a.T); null === a.i && (a.a.B = a.l); a.a.O = 0; var b = N(a.la); R(b, \"RID\", \"rpc\"); R(b, \"SID\", a.J); R(b, \"CI\", a.H ? \"0\" : \"1\"); R(b, \"AID\", a.P); Fd(a, b); R(b, \"TYPE\", \"xmlhttp\"); a.i && a.l && Bd(b, a.i, a.l); a.D && a.a.setTimeout(a.D); var c = a.a; a = a.ga; c.H = 1; c.i = kc(N(b)); c.j = null; c.I = !0; lc(c, a); }\r\nh.Sa = function () { null != this.m && (this.m = null, Bc(this), Cc(this), J(19)); };\r\nfunction Ac(a) { null != a.m && (k.clearTimeout(a.m), a.m = null); }\r\nfunction uc(a, b) { var c = null; if (a.a == b) {\r\n    Ac(a);\r\n    wc(a);\r\n    a.a = null;\r\n    var d = 2;\r\n}\r\nelse if (zc(a.b, b))\r\n    c = b.s, Gc(a.b, b), d = 1;\r\nelse\r\n    return; a.I = b.N; if (0 != a.v)\r\n    if (b.b)\r\n        if (1 == d) {\r\n            c = b.j ? b.j.length : 0;\r\n            b = q() - b.u;\r\n            var e = a.u;\r\n            d = Ub();\r\n            E(d, new Xb(d, c, b, e));\r\n            Ic(a);\r\n        }\r\n        else\r\n            Hc(a);\r\n    else if (e = b.h, 3 == e || 0 == e && 0 < a.I || !(1 == d && Id(a, b) || 2 == d && Cc(a)))\r\n        switch (c && 0 < c.length && (b = a.b, b.c = b.c.concat(c)), e) {\r\n            case 1:\r\n                Q(a, 5);\r\n                break;\r\n            case 4:\r\n                Q(a, 10);\r\n                break;\r\n            case 3:\r\n                Q(a, 6);\r\n                break;\r\n            default: Q(a, 2);\r\n        } }\r\nfunction Jd(a, b) { var c = a.Ha + Math.floor(Math.random() * a.Ra); a.f || (c *= 2); return c * b; }\r\nfunction Q(a, b) { a.c.info(\"Error code \" + b); if (2 == b) {\r\n    var c = null;\r\n    a.f && (c = null);\r\n    var d = p(a.Ya, a);\r\n    c || (c = new U(\"//www.google.com/images/cleardot.gif\"), k.location && \"http\" == k.location.protocol || Pc(c, \"https\"), kc(c));\r\n    od(c.toString(), d);\r\n}\r\nelse\r\n    J(2); a.v = 0; a.f && a.f.ra(b); Gd(a); Ed(a); }\r\nh.Ya = function (a) { a ? (this.c.info(\"Successfully pinged google.com\"), J(2)) : (this.c.info(\"Failed to ping google.com\"), J(1)); };\r\nfunction Gd(a) { a.v = 0; a.I = -1; if (a.f) {\r\n    if (0 != kd(a.b).length || 0 != a.g.length)\r\n        a.b.c.length = 0, ra(a.g), a.g.length = 0;\r\n    a.f.qa();\r\n} }\r\nfunction Fc(a, b, c) { var d = bd(c); if (\"\" != d.c)\r\n    b && Qc(d, b + \".\" + d.c), Rc(d, d.h);\r\nelse {\r\n    var e = k.location;\r\n    d = cd(e.protocol, b ? b + \".\" + e.hostname : e.hostname, +e.port, c);\r\n} a.V && za(a.V, function (f, g) { R(d, g, f); }); b = a.A; c = a.na; b && c && R(d, b, c); R(d, \"VER\", a.ha); Fd(a, d); return d; }\r\nfunction oc(a, b) { if (b && !a.C)\r\n    throw Error(\"Can't create secondary domain capable XhrIo object.\"); b = new X(a.Na); b.F = a.C; return b; }\r\nfunction Nd() { }\r\nh = Nd.prototype;\r\nh.ta = function () { };\r\nh.sa = function () { };\r\nh.ra = function () { };\r\nh.qa = function () { };\r\nh.Ja = function () { };\r\nfunction Od() { if (x && !(10 <= Number(Ta)))\r\n    throw Error(\"Environmental error: no available transport.\"); }\r\nOd.prototype.a = function (a, b) { return new Y(a, b); };\r\nfunction Y(a, b) {\r\n    D.call(this);\r\n    this.a = new Dd(b);\r\n    this.o = a;\r\n    this.b = b && b.messageUrlParams || null;\r\n    a = b && b.messageHeaders || null;\r\n    b && b.clientProtocolHeaderRequired && (a ? a[\"X-Client-Protocol\"] = \"webchannel\" : a = { \"X-Client-Protocol\": \"webchannel\" });\r\n    this.a.l = a;\r\n    a = b && b.initMessageHeaders || null;\r\n    b && b.messageContentType && (a ? a[\"X-WebChannel-Content-Type\"] = b.messageContentType : a = { \"X-WebChannel-Content-Type\": b.messageContentType });\r\n    b && b.a && (a ? a[\"X-WebChannel-Client-Profile\"] = b.a : a = { \"X-WebChannel-Client-Profile\": b.a });\r\n    this.a.O =\r\n        a;\r\n    (a = b && b.httpHeadersOverwriteParam) && !sa(a) && (this.a.i = a);\r\n    this.m = b && b.supportsCrossDomainXhr || !1;\r\n    this.l = b && b.sendRawJson || !1;\r\n    (b = b && b.httpSessionIdParam) && !sa(b) && (this.a.A = b, a = this.b, null !== a && b in a && (a = this.b, b in a && delete a[b]));\r\n    this.f = new Z(this);\r\n}\r\nr(Y, D);\r\nY.prototype.g = function () { this.a.f = this.f; this.m && (this.a.C = !0); var a = this.a, b = this.o, c = this.b || void 0; J(0); a.fa = b; a.V = c || {}; a.H = a.S; a.B = Fc(a, null, a.fa); Ic(a); };\r\nY.prototype.close = function () { Jc(this.a); };\r\nY.prototype.h = function (a) { if (\"string\" === typeof a) {\r\n    var b = {};\r\n    b.__data__ = a;\r\n    Hd(this.a, b);\r\n}\r\nelse\r\n    this.l ? (b = {}, b.__data__ = ub(a), Hd(this.a, b)) : Hd(this.a, a); };\r\nY.prototype.G = function () { this.a.f = null; delete this.f; Jc(this.a); delete this.a; Y.X.G.call(this); };\r\nfunction Pd(a) { cc.call(this); var b = a.__sm__; if (b) {\r\n    a: {\r\n        for (var c in b) {\r\n            a = c;\r\n            break a;\r\n        }\r\n        a = void 0;\r\n    }\r\n    (this.c = a) ? (a = this.c, this.data = null !== b && a in b ? b[a] : void 0) : this.data = b;\r\n}\r\nelse\r\n    this.data = a; }\r\nr(Pd, cc);\r\nfunction Qd() { dc.call(this); this.status = 1; }\r\nr(Qd, dc);\r\nfunction Z(a) { this.a = a; }\r\nr(Z, Nd);\r\nZ.prototype.ta = function () { E(this.a, \"a\"); };\r\nZ.prototype.sa = function (a) { E(this.a, new Pd(a)); };\r\nZ.prototype.ra = function (a) { E(this.a, new Qd(a)); };\r\nZ.prototype.qa = function () { E(this.a, \"b\"); }; /*\r\n\n Copyright 2017 Google LLC\r\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n*/\r\nOd.prototype.createWebChannel = Od.prototype.a;\r\nY.prototype.send = Y.prototype.h;\r\nY.prototype.open = Y.prototype.g;\r\nY.prototype.close = Y.prototype.close;\r\nYb.NO_ERROR = 0;\r\nYb.TIMEOUT = 8;\r\nYb.HTTP_ERROR = 6;\r\nZb.COMPLETE = \"complete\";\r\nbc.EventType = L;\r\nL.OPEN = \"a\";\r\nL.CLOSE = \"b\";\r\nL.ERROR = \"c\";\r\nL.MESSAGE = \"d\";\r\nD.prototype.listen = D.prototype.va;\r\nX.prototype.listenOnce = X.prototype.wa;\r\nX.prototype.getLastError = X.prototype.Qa;\r\nX.prototype.getLastErrorCode = X.prototype.ua;\r\nX.prototype.getStatus = X.prototype.W;\r\nX.prototype.getResponseJson = X.prototype.Pa;\r\nX.prototype.getResponseText = X.prototype.$;\r\nX.prototype.send = X.prototype.ba;\r\nvar createWebChannelTransport = function () { return new Od; };\r\nvar getStatEventTarget = function () { return Ub(); };\r\nvar ErrorCode = Yb;\r\nvar EventType = Zb;\r\nvar Event = H;\r\nvar Stat = { gb: 0, jb: 1, kb: 2, Db: 3, Ib: 4, Fb: 5, Gb: 6, Eb: 7, Cb: 8, Hb: 9, PROXY: 10, NOPROXY: 11, Ab: 12, wb: 13, xb: 14, vb: 15, yb: 16, zb: 17, bb: 18, ab: 19, cb: 20 };\r\nvar WebChannel = bc;\r\nvar XhrIo = X;\r\n\r\nvar esm = {\r\n    createWebChannelTransport: createWebChannelTransport,\r\n    getStatEventTarget: getStatEventTarget,\r\n    ErrorCode: ErrorCode,\r\n    EventType: EventType,\r\n    Event: Event,\r\n    Stat: Stat,\r\n    WebChannel: WebChannel,\r\n    XhrIo: XhrIo\r\n};\n\nexport default esm;\nexport { ErrorCode, Event, EventType, Stat, WebChannel, XhrIo, createWebChannelTransport, getStatEventTarget };\n//# sourceMappingURL=index.esm.js.map\n","import e from \"@firebase/app\";\n\nimport \"@firebase/logger\";\n\nimport \"@firebase/util\";\n\nimport \"@firebase/webchannel-wrapper\";\n\nimport \"tslib\";\n\nimport { Q as r, X as t, U as a, Z as s, K as o, L as i, j as n, G as p, H as c, a as m, e as f, t as u, s as l, i as b, o as g, c as h, W as v, Y as w } from \"./prebuilt-7840cb8c-52081c7f.js\";\n\nimport { Component as I } from \"@firebase/component\";\n\nvar L = {\n    Firestore: r,\n    GeoPoint: s,\n    Timestamp: o,\n    Blob: i,\n    Transaction: n,\n    WriteBatch: p,\n    DocumentReference: c,\n    DocumentSnapshot: m,\n    Query: f,\n    QueryDocumentSnapshot: u,\n    QuerySnapshot: l,\n    CollectionReference: b,\n    FieldPath: g,\n    FieldValue: h,\n    setLogLevel: v,\n    CACHE_SIZE_UNLIMITED: w\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Registers the main Firestore build with the components framework.\n * Persistence can be enabled via `firebase.firestore().enablePersistence()`.\n */\nfunction P(e) {\n    !\n    /**\n * Configures Firestore as part of the Firebase SDK by calling registerService.\n *\n * @param firebase - The FirebaseNamespace to register Firestore with\n * @param firestoreFactory - A factory function that returns a new Firestore\n *    instance.\n */\n    function(e, r) {\n        e.INTERNAL.registerComponent(new I(\"firestore\", (function(e) {\n            var t = e.getProvider(\"app\").getImmediate();\n            return r(t, e.getProvider(\"auth-internal\"));\n        }), \"PUBLIC\" /* PUBLIC */).setServiceProps(Object.assign({}, L)));\n    }(e, (function(e, s) {\n        return new r(e, new t(e, s), new a);\n    })), e.registerVersion(\"@firebase/firestore\", \"2.1.6\");\n}\n\nP(e);\n\nexport { P as registerFirestore };\n//# sourceMappingURL=index.js.map\n"],"sourceRoot":"webpack:///"}