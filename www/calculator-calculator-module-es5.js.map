{"version":3,"sources":["webpack:///src/app/calculator/calculator.page.ts","webpack:///src/app/calculator/calculator.page.html","webpack:///src/app/calculator/calculator.module.ts","webpack:///src/app/calculator/calculator-routing.module.ts","webpack:///src/app/calculator/calculator.page.scss"],"names":["CalculatorPage","coffeeService","preferenceList","coffeeType","cityName","countryName","preferenceArray","isManual","readPreferences","subscribe","data","map","output","id","payload","doc","isEdit","preferenceName","console","log","$event","preferenceChosen","i","length","calculateCoffee","countryCode","cityID","getAusCityId","coffeeTemp","getCoffeeTemp","getWeather","celsius","modifiedEuler","seconds","timeRemaining","convertTime","citiesDictionary","j","key","fetch","response","json","main","temp","selector","template","CalculatorPageModule","imports","declarations","routes","path","component","loadChildren","then","m","DisplayResultsPageModule","CalculatorPageRoutingModule","forChild","exports"],"mappings":"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","file":"calculator-calculator-module-es5.js","sourcesContent":["import { Component } from '@angular/core';\nimport { CoffeePreferenceService } from '../services/coffee-preference.service';\nimport { Resolve } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n\ninterface PreferenceData {\n  preferenceName: string;\n  coffeeType: string;\n  cityName: string;\n  countryName: string;\n}\n\n@Component({\n  selector: 'app-calculator',\n  templateUrl: 'calculator.page.html',\n  styleUrls: ['calculator.page.scss']\n})\nexport class CalculatorPage {\n  preferenceList = [];\n  preferenceData: PreferenceData;\n  preferenceForm: FormGroup;\n  coffeeType: string = \"\";\n  cityName: string = \"\";\n  countryName: string = \"\";\n  preferenceChosen: [];\n  preferenceArray = [];\n\n  constructor\n  (\n    private coffeeService: CoffeePreferenceService\n  ) {}\n\n  public isManual: boolean = false;\n\n  ngOnInit() {\n    this.coffeeService.readPreferences().subscribe(data => {\n      this.preferenceList = data.map(output => {\n        return {\n          id: output.payload.doc.id,\n          isEdit: false,\n          preferenceName: output.payload.doc.data()['preferenceName'],\n          coffeeType: output.payload.doc.data()['coffeeType'],\n          cityName: output.payload.doc.data()['cityName'],\n          countryName: output.payload.doc.data()['countryName']\n        };\n      })\n      console.log(this.preferenceList);\n    });\n  }\n\n  userSelectMethod($event) {\n    this.isManual = !this.isManual;\n  }\n\n  async calculatorSwitch() {\n    let preferenceArray = [];\n    if (this.isManual) {\n      preferenceArray = [this.coffeeType, this.cityName, this.countryName];\n      console.log(this.preferenceArray);\n    }\n    else {\n      console.log(this.preferenceChosen);\n\n      /* Relatively clunky solution but it works, i.e. if a user has multiple preferences with\n       * the same name, then this will only return the last preference object it finds\n       * Possible ways to mitigate:\n       *        [1]: Write a function on pages where the user creates preference objects to check if the\n       *              preference name already exists, if yes, they must select a different name.\n       *        [2]: Pull this unique id of the preference object and use that to identify the object to pass forward\n       *        [3]: Get index position in list from *ngFor loop and store it and use in function\n      */\n      for (let i = 0; i < this.preferenceList.length; i++) {\n        if (this.preferenceChosen === this.preferenceList[i].preferenceName) {\n          preferenceArray = [this.preferenceList[i].coffeeType, this.preferenceList[i].cityName,\n            this.preferenceList[i].countryName];\n          console.log(preferenceArray);\n        }\n      }\n    }\n\n    this.calculateCoffee(preferenceArray);\n  }\n\n  async calculateCoffee(preferenceArray: any) {\n    let countryCode = \"AU\"; // Temporary for Australia only use\n    let cityID = this.getAusCityId(preferenceArray[1]);\n    console.log(countryCode);\n    console.log(cityID);\n    let coffeeTemp = this.coffeeService.getCoffeeTemp(preferenceArray[0]);\n    console.log(coffeeTemp);\n    let celsius = await this.getWeather(cityID);\n    console.log(celsius);\n    let seconds = await this.coffeeService.modifiedEuler(celsius, coffeeTemp);\n    console.log(seconds);\n    let timeRemaining = this.coffeeService.convertTime(seconds);\n    console.log(timeRemaining);\n  }\n\n  getAusCityId(cityName: string) {\n    const citiesDictionary =\n    [\n      [\"Adelaide\", 2078025],\n      [\"Brisbane\", 2174003],\n      [\"Cairns\", 7839567],\n      [\"Canberra\", 2172517],\n      [\"Darwin\", 2073124],\n      [\"Hobart\", 7839672],\n      [\"Melbourne\", 2158177],\n      [\"Perth\", 2063523],\n      [\"Sydney\", 2147714]\n    ];\n\n    for (let j = 0; j < citiesDictionary.length; j++) {\n      if (cityName === citiesDictionary[j][0]) {\n        return citiesDictionary[j][1];\n      }\n    }\n  }\n\n  async getWeather(cityID: any) {\n    var key = '92b30ef73aba0e9531f56ed3e67666a8';\n    const response = await fetch('https://api.openweathermap.org/data/2.5/weather?id=' + cityID +\n    '&units=metric' + '&appid=' + key);\n    const json = await response.json();\n    let celsius = json.main.temp;\n    return celsius;\n}\n}\n","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar color = \\\"light\\\">\\n    <ion-title>\\n      Calculator\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col offset = 2.25 size = 12>\\n        <ion-item no-lines color = \\\"none\\\" lines = \\\"none\\\">\\n          <img height = \\\"150px\\\" width = \\\"150px\\\" src = \\\"../../assets/icon/calculate-coffee-transparent.png\\\">\\n        </ion-item>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size = 12>\\n        <ion-item>\\n          <ion-label>Manual Entry</ion-label>\\n          <ion-toggle (ionChange) = \\\"userSelectMethod($event)\\\" [checked] = \\\"isManual\\\"></ion-toggle>\\n        </ion-item>\\n      </ion-col>\\n    </ion-row>\\n    <span *ngIf = \\\"isManual; else elseBlock\\\">\\n      <ion-row>\\n        <ion-col>\\n          <ion-item>\\n            <ion-label position = \\\"floating\\\">Country</ion-label>\\n            <ion-select placeholder = \\\"Australia\\\" type = \\\"text\\\" [(ngModel)] = \\\"countryName\\\">\\n              <ion-select-option value = \\\"Australia\\\">Australia</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-item>\\n            <ion-label position = \\\"floating\\\">City</ion-label>\\n            <ion-select placeholder = \\\"Sydney\\\" type = \\\"text\\\" [(ngModel)] = \\\"cityName\\\">\\n              <ion-select-option value = \\\"Adelaide\\\">Adelaide</ion-select-option>\\n              <ion-select-option value = \\\"Brisbane\\\">Brisbane</ion-select-option>\\n              <ion-select-option value = \\\"Cairns\\\">Cairns</ion-select-option>\\n              <ion-select-option value = \\\"Canberra\\\">Canberra</ion-select-option>\\n              <ion-select-option value = \\\"Darwin\\\">Darwin</ion-select-option>\\n              <ion-select-option value = \\\"Hobart\\\">Hobart</ion-select-option>\\n              <ion-select-option value = \\\"Melbourne\\\">Melbourne</ion-select-option>\\n              <ion-select-option value = \\\"Perth\\\">Perth</ion-select-option>\\n              <ion-select-option value = \\\"Sydney\\\">Sydney</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-item>\\n            <ion-label position = \\\"floating\\\">Coffee Type</ion-label>\\n            <ion-select placeholder = \\\"Flat White\\\" type = \\\"text\\\" [(ngModel)] = \\\"coffeeType\\\">\\n              <ion-select-option value = \\\"Cappuccino\\\">Cappuccino</ion-select-option>\\n              <ion-select-option value = \\\"Flat White\\\">Flat White</ion-select-option>\\n              <ion-select-option value = \\\"Latte\\\">Latte</ion-select-option>\\n              <ion-select-option value = \\\"Long Black\\\">Long Black</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-button fill = \\\"solid\\\" expand = \\\"block\\\" color = \\\"dark\\\" (click) = \\\"calculatorSwitch()\\\">\\n            Calculate\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </span>\\n\\n    <ng-template #elseBlock>\\n      <ion-row>\\n        <ion-col>\\n          <ion-item>\\n            <ion-label position = \\\"floating\\\">Preference</ion-label>\\n            <ion-select placeholder = \\\"Preference Name\\\" type = \\\"text\\\" [(ngModel)] = \\\"preferenceChosen\\\"\\n              [selectedText] = \\\"preferenceChosen\\\">\\n              <ion-select-option *ngFor = \\\"let preference of preferenceList; let i = index\\\"\\n                [value] = \\\"preference.preferenceName\\\">\\n                  {{ preference.preferenceName }}\\n              </ion-select-option>\\n              <ion-select-option value = \\\"None\\\">None</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-button fill = \\\"solid\\\" expand = \\\"block\\\" color = \\\"dark\\\" (click) = \\\"calculatorSwitch()\\\">\\n            Calculate\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ng-template>\\n  </ion-grid>\\n  <ion-row>\\n    <ion-button fill = \\\"solid\\\" expand = \\\"block\\\" color = \\\"dark\\\" routerLink=\\\"/tabs/calculator/display-results\\\" routerDirection=\\\"forward\\\">\\n      Test\\n    </ion-button>\\n  </ion-row>\\n\\n\\n</ion-content>\\n\";","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CalculatorPage } from './calculator.page';\n\nimport { CalculatorPageRoutingModule } from './calculator-routing.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    CalculatorPageRoutingModule\n  ],\n  declarations: [CalculatorPage]\n})\nexport class CalculatorPageModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CalculatorPage } from './calculator.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CalculatorPage,\n  },\n  {\n    path: 'display-results',\n    loadChildren: () => import('./display-results/display-results.module').then( m => m.DisplayResultsPageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CalculatorPageRoutingModule {}\n","export default \"ion-content {\\n  --padding-start: 5%;\\n  --padding-end: 5%;\\n  --ion-background-color: #ffffff;\\n}\\n\\n.input-group {\\n  border-radius: 10px;\\n  overflow: hidden;\\n  margin-bottom: 10px;\\n  --background-color: transparent;\\n}\\n\\n.display-row {\\n  --ion-background-color: #fa4659;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.errors {\\n  font-size: small;\\n  color: #fff;\\n  background: var(--ion-color-danger);\\n  padding-left: 15px;\\n  padding-top: 5px;\\n  padding-bottom: 5px;\\n}\\n\\n.icon-position {\\n  position: absolute;\\n  left: 0%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2NhbGN1bGF0b3IucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksbUJBQUE7RUFDQSxpQkFBQTtFQUNBLCtCQUFBO0FBQ0o7O0FBRUE7RUFDSSxtQkFBQTtFQUNBLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSwrQkFBQTtBQUNKOztBQUVBO0VBQ0ksK0JBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0FBQ0o7O0FBRUE7RUFDSSxnQkFBQTtFQUNBLFdBQUE7RUFDQSxtQ0FBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxtQkFBQTtBQUNKOztBQUVBO0VBQ0ksa0JBQUE7RUFDQSxRQUFBO0FBQ0oiLCJmaWxlIjoiY2FsY3VsYXRvci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudCB7XG4gICAgLS1wYWRkaW5nLXN0YXJ0OiA1JTtcbiAgICAtLXBhZGRpbmctZW5kOiA1JTtcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xufVxuXG4uaW5wdXQtZ3JvdXAge1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgIC0tYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi5kaXNwbGF5LXJvdyB7XG4gICAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogI2ZhNDY1OTtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4uZXJyb3JzIHtcbiAgICBmb250LXNpemU6IHNtYWxsO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQ6IHZhcigtLWlvbi1jb2xvci1kYW5nZXIpO1xuICAgIHBhZGRpbmctbGVmdDogMTVweDtcbiAgICBwYWRkaW5nLXRvcDogNXB4O1xuICAgIHBhZGRpbmctYm90dG9tOiA1cHg7XG59XG5cbi5pY29uLXBvc2l0aW9uIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMCU7XG59Il19 */\";"]}