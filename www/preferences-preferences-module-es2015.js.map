{"version":3,"sources":["./src/app/preferences/preferences-routing.module.ts","./src/app/preferences/preferences.page.scss","./src/app/preferences/preferences.module.ts","./src/app/preferences/preferences.page.html","./src/app/preferences/preferences.page.ts"],"names":[],"mappings":"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","file":"preferences-preferences-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PreferencesPage } from './preferences.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PreferencesPage,\n  },\n  {\n    path: 'make-preference',\n    loadChildren: () => import('./make-preference/make-preference.module').then( m => m.MakePreferencePageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PreferencesPageRoutingModule {}\n","export default \"ion-fab-button {\\n  --background: #2eb872;\\n  --background-hover: #13492e;\\n  --color: #feffe4;\\n  --border-color: #feffe4;\\n}\\n\\nion-content {\\n  --padding-start: 5%;\\n  --padding-end: 5%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3ByZWZlcmVuY2VzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHFCQUFBO0VBQ0EsMkJBQUE7RUFDQSxnQkFBQTtFQUNBLHVCQUFBO0FBQ0o7O0FBRUE7RUFDSSxtQkFBQTtFQUNBLGlCQUFBO0FBQ0oiLCJmaWxlIjoicHJlZmVyZW5jZXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWZhYi1idXR0b24ge1xuICAgIC0tYmFja2dyb3VuZDogIzJlYjg3MjtcbiAgICAtLWJhY2tncm91bmQtaG92ZXI6ICMxMzQ5MmU7XG4gICAgLS1jb2xvcjogI2ZlZmZlNDtcbiAgICAtLWJvcmRlci1jb2xvcjogI2ZlZmZlNDtcbn1cblxuaW9uLWNvbnRlbnQge1xuICAgIC0tcGFkZGluZy1zdGFydDogNSU7XG4gICAgLS1wYWRkaW5nLWVuZDogNSU7XG59Il19 */\";","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PreferencesPage } from './preferences.page';\n\nimport { PreferencesPageRoutingModule } from './preferences-routing.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    PreferencesPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [PreferencesPage]\n})\nexport class PreferencesPageModule {}\n","export default \"<ion-header [translucent] = \\\"true\\\">\\n  <ion-toolbar color = \\\"cream\\\">\\n    <ion-title>\\n      Preferences\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-card *ngFor = \\\"let item of preferenceList\\\">\\n    <span *ngIf = \\\"!item.isEdit; else elseBlock\\\">\\n      <ion-card-header>\\n        <ion-card-title>{{ item.preferenceName }}</ion-card-title>\\n      </ion-card-header>\\n\\n      <ion-card-content>\\n        <ion-row>\\n          {{ item.coffeeType }}\\n        </ion-row>\\n        <ion-row>\\n          {{ item.cityName }}, {{ item.countryName }}\\n        </ion-row>\\n\\n        <ion-row>\\n          <ion-button shape = \\\"round\\\" color = \\\"dark\\\" size = \\\"small\\\" (click) = \\\"editPreference(item)\\\">\\n            <ion-icon size = \\\"small\\\" slot = \\\"icon-only\\\" name = \\\"create\\\"></ion-icon>\\n          </ion-button>\\n          <ion-button shape = \\\"round\\\" color = \\\"dark\\\" size = \\\"small\\\" (click) = \\\"removePreference(item.id)\\\">\\n            <ion-icon size = \\\"small\\\" slot = \\\"icon-only\\\" name = \\\"trash\\\"></ion-icon>\\n          </ion-button>\\n        </ion-row>\\n      </ion-card-content>\\n    </span>\\n    <ng-template #elseBlock>\\n      <ion-card-header>\\n        <ion-card-title>\\n          <ion-grid>\\n            <ion-row>\\n              <ion-button fill = \\\"solid\\\" color = \\\"dark\\\" size = \\\"small\\\" (click) = \\\"item.isEdit = false\\\">\\n                Cancel\\n              </ion-button>\\n              <ion-button fill = \\\"solid\\\" color = \\\"dark\\\" size = \\\"small\\\" (click) = \\\"updatePreference(item)\\\">\\n                Update\\n              </ion-button>\\n            </ion-row>\\n          </ion-grid>\\n        </ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-item>\\n          <ion-label position = \\\"floating\\\"><strong>Preference Name</strong></ion-label>\\n          <ion-input type = \\\"text\\\" [(ngModel)] = \\\"item.EditPreferenceName\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position = \\\"floating\\\"><strong>Coffee Type</strong></ion-label>\\n          <ion-select placeholder = \\\"Flat White\\\" type = \\\"text\\\" [(ngModel)] = \\\"item.EditCoffee\\\">\\n            <ion-select-option value = \\\"Cappuccino\\\">Cappuccino</ion-select-option>\\n            <ion-select-option value = \\\"Flat White\\\">Flat White</ion-select-option>\\n            <ion-select-option value = \\\"Latte\\\">Latte</ion-select-option>\\n            <ion-select-option value = \\\"Long Black\\\">Long Black</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label position = \\\"floating\\\"><strong>City</strong></ion-label>\\n          <ion-select placeholder = \\\"Brisbane\\\" type = \\\"text\\\" [(ngModel)] = \\\"item.EditCity\\\">\\n            <ion-select-option value = \\\"Adelaide\\\">Adelaide</ion-select-option>\\n            <ion-select-option value = \\\"Brisbane\\\">Brisbane</ion-select-option>\\n            <ion-select-option value = \\\"Cairns\\\">Cairns</ion-select-option>\\n            <ion-select-option value = \\\"Canberra\\\">Canberra</ion-select-option>\\n            <ion-select-option value = \\\"Darwin\\\">Darwin</ion-select-option>\\n            <ion-select-option value = \\\"Hobart\\\">Hobart</ion-select-option>\\n            <ion-select-option value = \\\"Melbourne\\\">Melbourne</ion-select-option>\\n            <ion-select-option value = \\\"Perth\\\">Perth</ion-select-option>\\n            <ion-select-option value = \\\"Sydney\\\">Sydney</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label position = \\\"floating\\\"><strong>Country</strong></ion-label>\\n          <ion-select placeholder = \\\"Australia\\\" type = \\\"text\\\" [(ngModel)] = \\\"item.EditCountry\\\">\\n            <ion-select-option value = \\\"Australia\\\">Australia</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n      </ion-card-content>\\n    </ng-template>\\n  </ion-card>\\n\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button routerLink=\\\"/tabs/preferences/make-preference\\\" routerDirection=\\\"forward\\\">\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { CoffeePreferenceService } from '../services/coffee-preference.service';\nimport { NavController, NavParams } from '@ionic/angular';\n\ninterface PreferenceData {\n  preferenceName: string;\n  coffeeType: string;\n  cityName: string;\n  countryName: string;\n}\n\n@Component({\n  selector: 'app-preferences',\n  templateUrl: 'preferences.page.html',\n  styleUrls: ['preferences.page.scss']\n})\nexport class PreferencesPage {\n//export class PreferencesPage implements OnInit {\n  preferenceList = [];\n  preferenceData: PreferenceData;\n  preferenceForm: FormGroup;\n\n  constructor\n  (\n    private coffeeService: CoffeePreferenceService,\n    private route: Router,\n    public navCtrl: NavController,\n    public fb: FormBuilder\n  )\n  {\n    this.preferenceData = {} as PreferenceData;\n  }\n\n  ngOnInit() {\n    this.preferenceForm = this.fb.group({\n      preferenceName: ['', [Validators.required]],\n      coffeeType: ['', [Validators.required]],\n      cityName: ['', [Validators.required]],\n      countryName: ['', [Validators.required]]\n    })\n\n    this.coffeeService.readPreferences().subscribe(data => {\n      this.preferenceList = data.map(output => {\n        return {\n          id: output.payload.doc.id,\n          isEdit: false,\n          preferenceName: output.payload.doc.data()['preferenceName'],\n          coffeeType: output.payload.doc.data()['coffeeType'],\n          cityName: output.payload.doc.data()['cityName'],\n          countryName: output.payload.doc.data()['countryName']\n        };\n      })\n      console.log(this.preferenceList);\n    });\n  }\n\n  // Implements createPreference() from coffeeService to create a user preference.\n  createPreference() {\n    console.log(this.preferenceForm.value);\n    this.coffeeService.createPreference(this.preferenceForm.value).then(response => {\n      this.preferenceForm.reset();\n      console.log(response);\n    })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  // Method to delete a preference object\n  removePreference(id) {\n    this.coffeeService.deletePreference(id);\n  }\n\n  // Method to edit a preference object\n  editPreference(preference) {\n    preference.isEdit = true;\n    preference.EditPreferenceName = preference.preferenceName;\n    preference.EditCoffee = preference.coffeeType;\n    preference.EditCity = preference.cityName;\n    preference.EditCountry = preference.countryName;\n  }\n\n  // Method to update a preference object\n  updatePreference(preferenceRow) {\n    let preference = {};\n    preference['preferenceName'] = preferenceRow.EditPreferenceName;\n    preference['coffeeType'] = preferenceRow.EditCoffee;\n    preference['cityName'] = preferenceRow.EditCity;\n    preference['countryName'] = preferenceRow.EditCountry;\n    this.coffeeService.updatePreferences(preferenceRow.id, preference);\n    preferenceRow.isEdit = false;\n  }\n}\n"],"sourceRoot":"webpack:///"}