{"version":3,"sources":["webpack:///src/app/settings/settings-routing.module.ts","webpack:///src/app/settings/settings.module.ts","webpack:///src/app/settings/settings.page.scss","webpack:///src/app/settings/settings.page.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/settings/settings.page.html"],"names":["routes","path","component","SettingsPageRoutingModule","imports","forChild","exports","SettingsPageModule","declarations","SettingsPage","authService","route","logoutUser","then","res","console","log","navigate","error","selector","template","AuthenticationService","auth","alert","router","location","userEmail","password","cPassword","warnUser","Promise","resolve","reject","currentUser","signOut","showAlert","createUserWithEmailAndPassword","result","dir","message","header","create","buttons","present","text","role","handler","confirm","back","providedIn"],"mappings":"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","file":"settings-settings-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsPageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SettingsPage } from './settings.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\nimport { SettingsPageRoutingModule } from './settings-routing.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    RouterModule.forChild([{ path: '', component: SettingsPage }]),\n    SettingsPageRoutingModule,\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZXR0aW5ncy5wYWdlLnNjc3MifQ== */\";","import { Component } from '@angular/core';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: 'settings.page.html',\n  styleUrls: ['settings.page.scss']\n})\nexport class SettingsPage {\n\n  userEmail: string;\n  constructor\n  (\n    private authService: AuthenticationService,\n    private route: Router\n  ) {}\n\n  ngOnInit() {\n  }\n\n  logout() {\n    this.authService.logoutUser().then(res => {\n      console.log(res);\n      this.route.navigate(['./login']);\n    })\n    .catch(error => {\n      console.log(error);\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { Location } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  userEmail: string = \"\"\n  password: string = \"\"\n  cPassword: string = \"\"\n  constructor\n  (\n    public auth: AngularFireAuth,\n    public alert: AlertController,\n    public router: Router,\n    public location: Location\n  ) { }\n\n  // Function to logout the user via Firebase\n  async logoutUser() {\n    await this.warnUser(\"Are You Sure?\", \"Please press confirm to logout.\");\n    return new Promise((resolve, reject) => {\n      if (this.auth.currentUser) {\n        this.auth.signOut().then(() => {\n          console.log(\"Log out\");\n          resolve(\"logged out\");\n        }).catch((error) => {\n          reject();\n        });\n      }\n    })\n  }\n\n  // Function to register users via email authentication through Firebase\n  async signUp() {\n    const { userEmail, password, cPassword } = this;\n\n    // Verify passwords match\n    if (password !== cPassword) {\n      this.showAlert(\"Error!\", \"Passwords do not match\");\n      return console.error(\"Passwords do not match.\");\n    }\n    // Verify something is entered\n    if (userEmail === \"\" && password === \"\") {\n      this.showAlert(\"Error!\", \"Invalid email address or password\");\n      return console.error(\"Invalid email or password.\");\n    }\n\n    try\n    {\n      const result = await this.auth.createUserWithEmailAndPassword(userEmail, password);\n      console.log(result);\n      this.showAlert(\"Success!\", \"Please login to continue.\");\n      this.router.navigate(['../login']);\n    }\n    catch(err)\n    {\n      console.dir(err);\n      this.showAlert(\"Error!\", err.message);\n    }\n  }\n\n  // Simple alert function to display a notification to the user.\n  async showAlert(header: string, message: string) {\n    const alert = await this.alert.create({\n      header,\n      message,\n      buttons: [\"Okay\"]\n    })\n\n    await alert.present();\n  }\n\n  async warnUser(header: string, message: string) {\n    return new Promise(async (resolve) => {\n      // Create the warning alert for the user with supplied parameters\n      const confirm = await this.alert.create({\n        header: header,\n        message: message,\n        buttons:\n        [\n          {\n            text: 'Cancel',\n            role: 'cancel'\n          },\n          {\n            text: 'Confirm',\n            handler: () => {\n              return resolve(true);\n            },\n          },\n        ],\n      });\n\n      // Wait for user to make selection\n      await confirm.present();\n    });\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>\\n      Settings\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\">Settings</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <ion-button fill = \\\"solid\\\" expand = \\\"block\\\" color = \\\"cream\\\" (click) = \\\"logout()\\\">\\n    Logout\\n  </ion-button>\\n\\n  <app-explore-container name=\\\"Settings page\\\"></app-explore-container>\\n</ion-content>\\n\";"]}